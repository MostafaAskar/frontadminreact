{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/shop/map.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Col, Form, Row, Space } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport DrawingManager from '../../components/drawing-map';\nimport { BsArrowsMove } from 'react-icons/bs';\nimport MapGif from '../../assets/video/map.gif';\nimport deliveryZone from '../../services/zone';\nimport Loading from '../../components/loading';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Map = _ref => {\n  _s();\n\n  let {\n    next,\n    prev\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [form] = Form.useForm();\n  const [triangleCoords, settriangleCoords] = useState([]);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [merge, setMerge] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const {\n    activeMenu\n  } = useSelector(state => state.menu, shallowEqual);\n\n  function getMap(id) {\n    setLoading(true);\n    deliveryZone.getById(id).then(res => {\n      var _res$data, _res$data$address;\n\n      settriangleCoords(res.data !== undefined ? (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$address = _res$data.address) === null || _res$data$address === void 0 ? void 0 : _res$data$address.map(item => ({\n        lat: item[0],\n        lng: item[1]\n      })) : []);\n    }).finally(() => setLoading(false));\n  }\n\n  const onFinish = () => {\n    if (triangleCoords.length < 3) {\n      toast.warning(t('place.selected.map'));\n      return;\n    }\n\n    if (!merge) {\n      toast.warning(t('place.selected.map'));\n      return;\n    }\n\n    setLoadingBtn(true);\n    const body = {\n      shop_id: activeMenu.data.id,\n      address: triangleCoords.map(item => ({\n        0: item.lat,\n        1: item.lng\n      }))\n    };\n    deliveryZone.create(body).then(() => next()).finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    var _activeMenu$data;\n\n    if ((_activeMenu$data = activeMenu.data) !== null && _activeMenu$data !== void 0 && _activeMenu$data.id) {\n      var _activeMenu$data2;\n\n      getMap((_activeMenu$data2 = activeMenu.data) === null || _activeMenu$data2 === void 0 ? void 0 : _activeMenu$data2.id);\n    }\n  }, [activeMenu.data]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    form: form,\n    name: \"map\",\n    layout: \"vertical\",\n    onFinish: onFinish,\n    children: !loading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            title: /*#__PURE__*/_jsxDEV(\"h3\", {\n              className: \"p-0 m-0\",\n              children: t('delivery.zone')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 28\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Row, {\n              gutter: 12,\n              children: [/*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                className: 'mb-3',\n                children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                  children: \"Instructions\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this), \"Create zone by click on map and connect the dots together\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                className: 'mb-3',\n                children: /*#__PURE__*/_jsxDEV(Space, {\n                  children: [/*#__PURE__*/_jsxDEV(BsArrowsMove, {\n                    size: 25\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 83,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: t('delivery.zone.text')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 84,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 12,\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: MapGif,\n                  alt: \"map gif\",\n                  style: {\n                    object: 'contain'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                span: 24,\n                children: /*#__PURE__*/_jsxDEV(DrawingManager, {\n                  triangleCoords: triangleCoords,\n                  settriangleCoords: settriangleCoords,\n                  setMerge: setMerge\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Space, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          htmlType: \"submit\",\n          loading: loadingBtn,\n          children: t('next')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          htmlType: \"submit\",\n          onClick: () => prev(),\n          children: t('prev')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Map, \"VBgKY3kYFlRf+8SYwwLRncKRvUs=\", false, function () {\n  return [useTranslation, Form.useForm, useSelector];\n});\n\n_c = Map;\nexport default Map;\n\nvar _c;\n\n$RefreshReg$(_c, \"Map\");","map":{"version":3,"names":["Button","Card","Col","Form","Row","Space","React","useState","useEffect","useTranslation","shallowEqual","useSelector","DrawingManager","BsArrowsMove","MapGif","deliveryZone","Loading","toast","Map","next","prev","t","form","useForm","triangleCoords","settriangleCoords","loadingBtn","setLoadingBtn","merge","setMerge","loading","setLoading","activeMenu","state","menu","getMap","id","getById","then","res","data","undefined","address","map","item","lat","lng","finally","onFinish","length","warning","body","shop_id","create","object"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/shop/map.js"],"sourcesContent":["import { Button, Card, Col, Form, Row, Space } from 'antd';\nimport React, { useState, useEffect } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport DrawingManager from '../../components/drawing-map';\nimport { BsArrowsMove } from 'react-icons/bs';\nimport MapGif from '../../assets/video/map.gif';\nimport deliveryZone from '../../services/zone';\nimport Loading from '../../components/loading';\nimport { toast } from 'react-toastify';\n\nconst Map = ({ next, prev }) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const [triangleCoords, settriangleCoords] = useState([]);\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const [merge, setMerge] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  function getMap(id) {\n    setLoading(true);\n    deliveryZone\n      .getById(id)\n      .then((res) => {\n        settriangleCoords(\n          res.data !== undefined\n            ? res.data?.address?.map((item) => ({\n                lat: item[0],\n                lng: item[1],\n              }))\n            : []\n        );\n      })\n      .finally(() => setLoading(false));\n  }\n\n  const onFinish = () => {\n    if (triangleCoords.length < 3) {\n      toast.warning(t('place.selected.map'));\n      return;\n    }\n\n    if (!merge) {\n      toast.warning(t('place.selected.map'));\n      return;\n    }\n\n    setLoadingBtn(true);\n    const body = {\n      shop_id: activeMenu.data.id,\n      address: triangleCoords.map((item) => ({\n        0: item.lat,\n        1: item.lng,\n      })),\n    };\n    deliveryZone\n      .create(body)\n      .then(() => next())\n      .finally(() => setLoadingBtn(false));\n  };\n\n  useEffect(() => {\n    if (activeMenu.data?.id) {\n      getMap(activeMenu.data?.id);\n    }\n  }, [activeMenu.data]);\n\n  return (\n    <Form form={form} name='map' layout='vertical' onFinish={onFinish}>\n      {!loading ? (\n        <>\n          <Row>\n            <Col span={24}>\n              <Card title={<h3 className='p-0 m-0'>{t('delivery.zone')}</h3>}>\n                <Row gutter={12}>\n                  <Col span={24} className={'mb-3'}>\n                    <h4>Instructions</h4>\n                    Create zone by click on map and connect the dots together\n                  </Col>\n                  <Col span={24} className={'mb-3'}>\n                    <Space>\n                      <BsArrowsMove size={25} />\n                      <p>{t('delivery.zone.text')}</p>\n                    </Space>\n                  </Col>\n                  <Col span={12}>\n                    <img\n                      src={MapGif}\n                      alt='map gif'\n                      style={{ object: 'contain' }}\n                    />\n                  </Col>\n                  <Col span={24}>\n                    <DrawingManager\n                      triangleCoords={triangleCoords}\n                      settriangleCoords={settriangleCoords}\n                      setMerge={setMerge}\n                    />\n                  </Col>\n                </Row>\n              </Card>\n            </Col>\n          </Row>\n          <Space>\n            <Button type='primary' htmlType='submit' loading={loadingBtn}>\n              {t('next')}\n            </Button>\n            <Button htmlType='submit' onClick={() => prev()}>\n              {t('prev')}\n            </Button>\n          </Space>\n        </>\n      ) : (\n        <Loading />\n      )}\n    </Form>\n  );\n};\n\nexport default Map;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}