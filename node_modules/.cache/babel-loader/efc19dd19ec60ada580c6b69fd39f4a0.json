{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/async-tree-select-category.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\nimport { Spin, TreeSelect } from 'antd';\nimport debounce from 'lodash/debounce';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AsyncTreeSelect = _ref => {\n  _s();\n\n  let {\n    fetchOptions,\n    refetch = false,\n    debounceTimeout = 400,\n    ...props\n  } = _ref;\n  const [fetching, setFetching] = useState(false);\n  const [treeData, setTreeData] = useState([]);\n\n  const fetchOnFocus = () => {\n    if (!treeData.length || refetch) {\n      setFetching(true);\n      fetchOptions().then(newOptions => {\n        setTreeData(newOptions);\n        setFetching(false);\n      });\n    }\n  };\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = value => {\n      setTreeData([]);\n      setFetching(true);\n      fetchOptions(value).then(newOptions => {\n        setTreeData(newOptions);\n        setFetching(false);\n      });\n    };\n\n    return debounce(loadOptions, debounceTimeout);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(TreeSelect, {\n    showSearch: true,\n    labelInValue: true,\n    filterTreeNode: (value, node) => {\n      return node.label.localeCompare(value);\n    },\n    treeLine: true,\n    onSearch: value => debounceFetcher(value),\n    treeData: fetching ? [] : treeData,\n    treeDefaultExpandAll: true,\n    onFocus: fetchOnFocus,\n    notFoundContent: fetching ? /*#__PURE__*/_jsxDEV(Spin, {\n      size: \"small\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 35\n    }, this) : 'no results',\n    ...props\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(AsyncTreeSelect, \"lKR32hEbGXc0v6g+Iv/ThgQPLM4=\");\n\n_c = AsyncTreeSelect;\n\nvar _c;\n\n$RefreshReg$(_c, \"AsyncTreeSelect\");","map":{"version":3,"names":["React","useMemo","useState","Spin","TreeSelect","debounce","AsyncTreeSelect","fetchOptions","refetch","debounceTimeout","props","fetching","setFetching","treeData","setTreeData","fetchOnFocus","length","then","newOptions","debounceFetcher","loadOptions","value","node","label","localeCompare"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/async-tree-select-category.js"],"sourcesContent":["import React, { useMemo, useState } from 'react';\nimport { Spin, TreeSelect } from 'antd';\nimport debounce from 'lodash/debounce';\n\nexport const AsyncTreeSelect = ({\n  fetchOptions,\n  refetch = false,\n  debounceTimeout = 400,\n  ...props\n}) => {\n  const [fetching, setFetching] = useState(false);\n  const [treeData, setTreeData] = useState([]);\n  const fetchOnFocus = () => {\n    if (!treeData.length || refetch) {\n      setFetching(true);\n      fetchOptions().then((newOptions) => {\n        setTreeData(newOptions);\n        setFetching(false);\n      });\n    }\n  };\n\n  const debounceFetcher = useMemo(() => {\n    const loadOptions = (value) => {\n      setTreeData([]);\n      setFetching(true);\n      fetchOptions(value).then((newOptions) => {\n        setTreeData(newOptions);\n        setFetching(false);\n      });\n    };\n    return debounce(loadOptions, debounceTimeout);\n  }, []);\n\n  return (\n    <TreeSelect\n      showSearch\n      labelInValue\n      filterTreeNode={(value, node) => {\n        return node.label.localeCompare(value);\n      }}\n      treeLine={true}\n      onSearch={(value) => debounceFetcher(value)}\n      treeData={fetching ? [] : treeData}\n      treeDefaultExpandAll\n      onFocus={fetchOnFocus}\n      notFoundContent={fetching ? <Spin size='small' /> : 'no results'}\n      {...props}\n    />\n  );\n};\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,QAAyC,OAAzC;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,MAAjC;AACA,OAAOC,QAAP,MAAqB,iBAArB;;AAEA,OAAO,MAAMC,eAAe,GAAG,QAKzB;EAAA;;EAAA,IAL0B;IAC9BC,YAD8B;IAE9BC,OAAO,GAAG,KAFoB;IAG9BC,eAAe,GAAG,GAHY;IAI9B,GAAGC;EAJ2B,CAK1B;EACJ,MAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,KAAD,CAAxC;EACA,MAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;;EACA,MAAMa,YAAY,GAAG,MAAM;IACzB,IAAI,CAACF,QAAQ,CAACG,MAAV,IAAoBR,OAAxB,EAAiC;MAC/BI,WAAW,CAAC,IAAD,CAAX;MACAL,YAAY,GAAGU,IAAf,CAAqBC,UAAD,IAAgB;QAClCJ,WAAW,CAACI,UAAD,CAAX;QACAN,WAAW,CAAC,KAAD,CAAX;MACD,CAHD;IAID;EACF,CARD;;EAUA,MAAMO,eAAe,GAAGlB,OAAO,CAAC,MAAM;IACpC,MAAMmB,WAAW,GAAIC,KAAD,IAAW;MAC7BP,WAAW,CAAC,EAAD,CAAX;MACAF,WAAW,CAAC,IAAD,CAAX;MACAL,YAAY,CAACc,KAAD,CAAZ,CAAoBJ,IAApB,CAA0BC,UAAD,IAAgB;QACvCJ,WAAW,CAACI,UAAD,CAAX;QACAN,WAAW,CAAC,KAAD,CAAX;MACD,CAHD;IAID,CAPD;;IAQA,OAAOP,QAAQ,CAACe,WAAD,EAAcX,eAAd,CAAf;EACD,CAV8B,EAU5B,EAV4B,CAA/B;EAYA,oBACE,QAAC,UAAD;IACE,UAAU,MADZ;IAEE,YAAY,MAFd;IAGE,cAAc,EAAE,CAACY,KAAD,EAAQC,IAAR,KAAiB;MAC/B,OAAOA,IAAI,CAACC,KAAL,CAAWC,aAAX,CAAyBH,KAAzB,CAAP;IACD,CALH;IAME,QAAQ,EAAE,IANZ;IAOE,QAAQ,EAAGA,KAAD,IAAWF,eAAe,CAACE,KAAD,CAPtC;IAQE,QAAQ,EAAEV,QAAQ,GAAG,EAAH,GAAQE,QAR5B;IASE,oBAAoB,MATtB;IAUE,OAAO,EAAEE,YAVX;IAWE,eAAe,EAAEJ,QAAQ,gBAAG,QAAC,IAAD;MAAM,IAAI,EAAC;IAAX;MAAA;MAAA;MAAA;IAAA,QAAH,GAA2B,YAXtD;IAAA,GAYMD;EAZN;IAAA;IAAA;IAAA;EAAA,QADF;AAgBD,CA9CM;;GAAMJ,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}