{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/image-upload-single.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport { Modal, Spin, Upload } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport galleryService from 'services/gallery';\nimport { useTranslation } from 'react-i18next';\nimport video_placeholder from 'assets/images/video-placeholder.png';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst getBase64 = file => new Promise((resolve, reject) => {\n  const reader = new FileReader();\n  reader.readAsDataURL(file);\n\n  reader.onload = () => resolve(reader.result);\n\n  reader.onerror = error => reject(error);\n});\n\nconst ImageUploadSingle = _ref => {\n  _s();\n\n  let {\n    image,\n    setImage,\n    type,\n    form,\n    name = 'image',\n    isVideo\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async file => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(file.name || file.url.substring(file.url.lastIndexOf('/') + 1));\n  };\n\n  const handleChange = _ref2 => {// setFileList(newFileList)\n\n    let {\n      fileList: newFileList\n    } = _ref2;\n  };\n\n  const createImage = file => {\n    return {\n      uid: file.title,\n      name: file.title,\n      status: 'done',\n      // done, uploading, error\n      url: file.title,\n      created: true\n    };\n  };\n\n  const uploadButton = loading ? /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: 8\n      },\n      children: t('upload')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n\n  const handleUpload = _ref3 => {\n    let {\n      file,\n      onSuccess\n    } = _ref3;\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('type', type);\n    galleryService.upload(formData).then(_ref4 => {\n      let {\n        data\n      } = _ref4;\n      setImage(createImage(data));\n      form.setFieldsValue({\n        [name]: createImage(data)\n      });\n      onSuccess('ok');\n    }).finally(() => setLoading(false));\n  };\n\n  const getMediaSource = filename => {\n    const re = /(?:\\.([^.]+))?$/;\n    const exec = re.exec(filename);\n\n    switch (exec[1]) {\n      case 'mp4':\n        return 'video';\n\n      case 'webm':\n        return 'video';\n\n      case 'ogg':\n        return 'video';\n\n      case 'ogv':\n        return 'video';\n\n      default:\n        return 'image';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Upload, {\n      listType: \"picture-card\",\n      showUploadList: false,\n      onPreview: handlePreview,\n      onChange: handleChange,\n      customRequest: handleUpload,\n      className: \"picture-card\",\n      accept: isVideo ? \"*\" : '.png, .jpg, .jpeg, .webp, .svg, .jfif',\n      beforeUpload: file => {\n        const isItAtLeast2MB = file.size / 1024 / 1024 < 2;\n\n        if (!isItAtLeast2MB && !isVideo) {\n          toast.error(t('max.2.mb'));\n          return false;\n        }\n\n        return true;\n      },\n      children: image !== null && image !== void 0 && image.url && !loading ? getMediaSource(image.url) === 'image' ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.url,\n        alt: \"avatar\",\n        style: {\n          width: '100%',\n          height: '100%',\n          objectFit: 'contain'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          justifyContent: 'center',\n          alignItems: 'center',\n          width: '100%',\n          height: '100%'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: video_placeholder,\n          alt: image.name,\n          width: 32,\n          style: {\n            objectFit: 'contain'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: t('video.file')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 13\n      }, this) : uploadButton\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      visible: previewVisible,\n      title: previewTitle,\n      footer: null,\n      onCancel: handleCancel,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        alt: \"example\",\n        style: {\n          width: '100%'\n        },\n        src: previewImage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ImageUploadSingle, \"SpbBbxpEwIJxl8HVPrFNHWRifNA=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ImageUploadSingle;\nexport default ImageUploadSingle;\n\nvar _c;\n\n$RefreshReg$(_c, \"ImageUploadSingle\");","map":{"version":3,"names":["useState","Modal","Spin","Upload","PlusOutlined","galleryService","useTranslation","video_placeholder","toast","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","ImageUploadSingle","image","setImage","type","form","name","isVideo","t","previewVisible","setPreviewVisible","previewImage","setPreviewImage","previewTitle","setPreviewTitle","loading","setLoading","handleCancel","handlePreview","url","preview","originFileObj","substring","lastIndexOf","handleChange","fileList","newFileList","createImage","uid","title","status","created","uploadButton","marginTop","handleUpload","onSuccess","formData","FormData","append","upload","then","data","setFieldsValue","finally","getMediaSource","filename","re","exec","isItAtLeast2MB","size","width","height","objectFit","display","flexDirection","justifyContent","alignItems"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/image-upload-single.js"],"sourcesContent":["import { useState } from 'react';\nimport { Modal, Spin, Upload } from 'antd';\nimport { PlusOutlined } from '@ant-design/icons';\nimport galleryService from 'services/gallery';\nimport { useTranslation } from 'react-i18next';\nimport video_placeholder from 'assets/images/video-placeholder.png';\nimport { toast } from 'react-toastify';\n\nconst getBase64 = (file) =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(file);\n\n    reader.onload = () => resolve(reader.result);\n\n    reader.onerror = (error) => reject(error);\n  });\n\nconst ImageUploadSingle = ({ image, setImage, type, form, name = 'image', isVideo }) => {\n  const { t } = useTranslation();\n  const [previewVisible, setPreviewVisible] = useState(false);\n  const [previewImage, setPreviewImage] = useState('');\n  const [previewTitle, setPreviewTitle] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  const handleCancel = () => setPreviewVisible(false);\n\n  const handlePreview = async (file) => {\n    if (!file.url && !file.preview) {\n      file.preview = await getBase64(file.originFileObj);\n    }\n\n    setPreviewImage(file.url || file.preview);\n    setPreviewVisible(true);\n    setPreviewTitle(\n      file.name || file.url.substring(file.url.lastIndexOf('/') + 1)\n    );\n  };\n\n  const handleChange = ({ fileList: newFileList }) => {\n    // setFileList(newFileList)\n  };\n\n  const createImage = (file) => {\n    return {\n      uid: file.title,\n      name: file.title,\n      status: 'done', // done, uploading, error\n      url: file.title,\n      created: true,\n    };\n  };\n\n  const uploadButton = loading ? (\n    <div>\n      <Spin />\n    </div>\n  ) : (\n    <div>\n      <PlusOutlined />\n      <div\n        style={{\n          marginTop: 8,\n        }}\n      >\n        {t('upload')}\n      </div>\n    </div>\n  );\n\n  const handleUpload = ({ file, onSuccess }) => {\n    setLoading(true);\n    const formData = new FormData();\n    formData.append('image', file);\n    formData.append('type', type);\n    galleryService\n      .upload(formData)\n      .then(({ data }) => {\n        setImage(createImage(data));\n        form.setFieldsValue({\n          [name]: createImage(data),\n        });\n        onSuccess('ok');\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const getMediaSource = (filename) => {\n    const re = /(?:\\.([^.]+))?$/;\n    const exec = re.exec(filename);\n    switch (exec[1]) {\n      case 'mp4':\n        return 'video';\n      case 'webm':\n        return 'video';\n      case 'ogg':\n        return 'video';\n      case 'ogv':\n        return 'video';\n\n      default:\n        return 'image';\n    }\n  };\n\n  return (\n    <>\n      <Upload\n        listType='picture-card'\n        showUploadList={false}\n        onPreview={handlePreview}\n        onChange={handleChange}\n        customRequest={handleUpload}\n        className='picture-card'\n        accept={isVideo ? \"*\" : '.png, .jpg, .jpeg, .webp, .svg, .jfif'} \n        beforeUpload={(file) => {\n          const isItAtLeast2MB = file.size / 1024 / 1024 < 2;\n          if (!isItAtLeast2MB && !isVideo) {\n            toast.error(t('max.2.mb'));\n            return false;\n          }\n          return true;\n        }}\n      >\n        {image?.url && !loading ? (\n          getMediaSource(image.url) === 'image' ? (\n            <img\n              src={image.url}\n              alt='avatar'\n              style={{\n                width: '100%',\n                height: '100%',\n                objectFit: 'contain',\n              }}\n            />\n          ) : (\n            <div\n              style={{\n                display: 'flex',\n                flexDirection: 'column',\n                justifyContent: 'center',\n                alignItems: 'center',\n                width: '100%',\n                height: '100%',\n              }}\n            >\n              <img\n                src={video_placeholder}\n                alt={image.name}\n                width={32}\n                style={{ objectFit: 'contain' }}\n              />\n              <p>{t('video.file')}</p>\n            </div>\n          )\n        ) : (\n          uploadButton\n        )}\n      </Upload>\n      <Modal\n        visible={previewVisible}\n        title={previewTitle}\n        footer={null}\n        onCancel={handleCancel}\n      >\n        <img\n          alt='example'\n          style={{\n            width: '100%',\n          }}\n          src={previewImage}\n        />\n      </Modal>\n    </>\n  );\n};\n\nexport default ImageUploadSingle;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}