{"ast":null,"code":"import React,{useEffect,useState}from'react';import{EditOutlined,PlusCircleOutlined}from'@ant-design/icons';import{Button,Card,Space,Table,Tag}from'antd';import{batch,shallowEqual,useDispatch,useSelector}from'react-redux';import{disableRefetch,setMenuData}from'../../../redux/slices/menu';import useDidUpdate from'../../../helpers/useDidUpdate';import formatSortType from'../../../helpers/formatSortType';import{useTranslation}from'react-i18next';import{fetchSellerWallets}from'../../../redux/slices/wallet';import numberToPrice from'../../../helpers/numberToPrice';import PayoutStatusModal from'./payoutStatusModal';import PayoutRequest from'./payoutRequest';import FilterColumns from'../../../components/filter-column';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function SellerPayouts(){const{t}=useTranslation();const dispatch=useDispatch();const[modal,setModal]=useState(null);const[withdrawModal,setWithdrawModal]=useState(false);const{defaultCurrency}=useSelector(state=>state.currency,shallowEqual);const[columns,setColumns]=useState([{title:t('id'),dataIndex:'id',key:'id',sorter:true,is_show:true},{title:t('price'),dataIndex:'price',key:'price',is_show:true,render:price=>numberToPrice(price,defaultCurrency===null||defaultCurrency===void 0?void 0:defaultCurrency.symbol)},{title:t('status'),dataIndex:'status',key:'status',is_show:true,render:(status,row)=>/*#__PURE__*/_jsxs(\"div\",{children:[status==='processed'?/*#__PURE__*/_jsx(Tag,{color:\"blue\",children:t(status)}):status==='rejected'?/*#__PURE__*/_jsx(Tag,{color:\"error\",children:t(status)}):/*#__PURE__*/_jsx(Tag,{color:\"cyan\",children:t(status)}),status==='processed'?/*#__PURE__*/_jsx(EditOutlined,{onClick:()=>setModal(row)}):'']})},{title:t('note'),dataIndex:'note',key:'note',is_show:true},{title:t('created.at'),dataIndex:'created_at',key:'created_at',is_show:true,render:created_at=>moment(created_at).format('YYYY-MM-DD HH:mm')}]);const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const{wallets,meta,loading,params}=useSelector(state=>state.wallet,shallowEqual);useEffect(()=>{if(activeMenu.refetch){batch(()=>{dispatch(fetchSellerWallets({}));dispatch(disableRefetch(activeMenu));});}},[activeMenu.refetch]);useDidUpdate(()=>{const data=activeMenu.data;const paramsData={sort:data===null||data===void 0?void 0:data.sort,column:data===null||data===void 0?void 0:data.column,perPage:data===null||data===void 0?void 0:data.perPage,page:data===null||data===void 0?void 0:data.page};dispatch(fetchSellerWallets(paramsData));},[activeMenu.data]);function onChangePagination(pagination,filters,sorter){const{pageSize:perPage,current:page}=pagination;const{field:column,order}=sorter;const sort=formatSortType(order);dispatch(setMenuData({activeMenu,data:{perPage,page,column,sort}}));}return/*#__PURE__*/_jsxs(Card,{title:t('payouts'),extra:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(PlusCircleOutlined,{}),onClick:()=>setWithdrawModal(true),children:t('withdraw')}),/*#__PURE__*/_jsx(FilterColumns,{columns:columns,setColumns:setColumns})]}),children:[/*#__PURE__*/_jsx(Table,{scroll:{x:true},columns:columns===null||columns===void 0?void 0:columns.filter(item=>item.is_show),dataSource:wallets,pagination:{pageSize:params.perPage,page:params.page,total:meta.total,defaultCurrent:params.page},rowKey:record=>record.id,onChange:onChangePagination,loading:loading}),modal&&/*#__PURE__*/_jsx(PayoutStatusModal,{data:modal,handleCancel:()=>setModal(null)}),withdrawModal&&/*#__PURE__*/_jsx(PayoutRequest,{data:withdrawModal,handleCancel:()=>setWithdrawModal(false)})]});}","map":null,"metadata":{},"sourceType":"module"}