{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/order/transaction-details.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Form, Select } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState } from 'react';\nimport transactionService from '../../services/transaction';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst transactionOptions = [{\n  label: 'progress',\n  value: 'progress',\n  key: 1\n}, {\n  label: 'paid',\n  value: 'paid',\n  key: 2\n}, {\n  label: 'canceled',\n  value: 'canceled',\n  key: 3\n}, {\n  label: 'rejected',\n  value: 'rejected',\n  key: 4\n}, {\n  label: 'refund',\n  value: 'refund',\n  key: 5\n}];\n\nfunction TransactionDetails(_ref) {\n  _s();\n\n  let {\n    form\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    id\n  } = useParams();\n  const [value, setValue] = useState(() => form.getFieldValue('transactionStatus'));\n  const [loading, setLoading] = useState(false);\n\n  function selectStatus(status) {\n    setLoading(true);\n    transactionService.updateStatus(id, {\n      status\n    }).then(res => {\n      setValue(res.data.transaction.status);\n    }).catch(() => {\n      form.setFieldsValue({\n        transactionStatus: value\n      });\n    }).finally(() => setLoading(false));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: t('transaction.details'),\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      name: \"transactionStatus\",\n      label: t('transaction.status'),\n      rules: [{\n        required: true,\n        message: t('required')\n      }],\n      children: /*#__PURE__*/_jsxDEV(Select, {\n        loading: loading,\n        options: transactionOptions,\n        onChange: selectStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TransactionDetails, \"TqlZ53zcGaOJxAtYweb1flfhEGE=\", false, function () {\n  return [useTranslation, useParams];\n});\n\n_c = TransactionDetails;\nexport default TransactionDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"TransactionDetails\");","map":{"version":3,"names":["Card","Form","Select","useTranslation","React","useState","transactionService","useParams","transactionOptions","label","value","key","TransactionDetails","form","t","id","setValue","getFieldValue","loading","setLoading","selectStatus","status","updateStatus","then","res","data","transaction","catch","setFieldsValue","transactionStatus","finally","required","message"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/order/transaction-details.js"],"sourcesContent":["import { Card, Form, Select } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport React, { useState } from 'react';\nimport transactionService from '../../services/transaction';\nimport { useParams } from 'react-router-dom';\n\nconst transactionOptions = [\n  {\n    label: 'progress',\n    value: 'progress',\n    key: 1,\n  },\n  {\n    label: 'paid',\n    value: 'paid',\n    key: 2,\n  },\n  {\n    label: 'canceled',\n    value: 'canceled',\n    key: 3,\n  },\n  {\n    label: 'rejected',\n    value: 'rejected',\n    key: 4,\n  },\n  {\n    label: 'refund',\n    value: 'refund',\n    key: 5,\n  },\n];\n\nfunction TransactionDetails({ form }) {\n  const { t } = useTranslation();\n  const { id } = useParams();\n  const [value, setValue] = useState(() =>\n    form.getFieldValue('transactionStatus'),\n  );\n  const [loading, setLoading] = useState(false);\n\n  function selectStatus(status) {\n    setLoading(true);\n    transactionService\n      .updateStatus(id, { status })\n      .then((res) => {\n        setValue(res.data.transaction.status);\n      })\n      .catch(() => {\n        form.setFieldsValue({ transactionStatus: value });\n      })\n      .finally(() => setLoading(false));\n  }\n\n  return (\n    <Card title={t('transaction.details')}>\n      <Form.Item\n        name='transactionStatus'\n        label={t('transaction.status')}\n        rules={[{ required: true, message: t('required') }]}\n      >\n        <Select\n          loading={loading}\n          options={transactionOptions}\n          onChange={selectStatus}\n        />\n      </Form.Item>\n    </Card>\n  );\n}\n\nexport default TransactionDetails;\n"],"mappings":";;;AAAA,SAASA,IAAT,EAAeC,IAAf,EAAqBC,MAArB,QAAmC,MAAnC;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,OAAOC,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,kBAAP,MAA+B,4BAA/B;AACA,SAASC,SAAT,QAA0B,kBAA1B;;AAEA,MAAMC,kBAAkB,GAAG,CACzB;EACEC,KAAK,EAAE,UADT;EAEEC,KAAK,EAAE,UAFT;EAGEC,GAAG,EAAE;AAHP,CADyB,EAMzB;EACEF,KAAK,EAAE,MADT;EAEEC,KAAK,EAAE,MAFT;EAGEC,GAAG,EAAE;AAHP,CANyB,EAWzB;EACEF,KAAK,EAAE,UADT;EAEEC,KAAK,EAAE,UAFT;EAGEC,GAAG,EAAE;AAHP,CAXyB,EAgBzB;EACEF,KAAK,EAAE,UADT;EAEEC,KAAK,EAAE,UAFT;EAGEC,GAAG,EAAE;AAHP,CAhByB,EAqBzB;EACEF,KAAK,EAAE,QADT;EAEEC,KAAK,EAAE,QAFT;EAGEC,GAAG,EAAE;AAHP,CArByB,CAA3B;;AA4BA,SAASC,kBAAT,OAAsC;EAAA;;EAAA,IAAV;IAAEC;EAAF,CAAU;EACpC,MAAM;IAAEC;EAAF,IAAQX,cAAc,EAA5B;EACA,MAAM;IAAEY;EAAF,IAASR,SAAS,EAAxB;EACA,MAAM,CAACG,KAAD,EAAQM,QAAR,IAAoBX,QAAQ,CAAC,MACjCQ,IAAI,CAACI,aAAL,CAAmB,mBAAnB,CADgC,CAAlC;EAGA,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBd,QAAQ,CAAC,KAAD,CAAtC;;EAEA,SAASe,YAAT,CAAsBC,MAAtB,EAA8B;IAC5BF,UAAU,CAAC,IAAD,CAAV;IACAb,kBAAkB,CACfgB,YADH,CACgBP,EADhB,EACoB;MAAEM;IAAF,CADpB,EAEGE,IAFH,CAESC,GAAD,IAAS;MACbR,QAAQ,CAACQ,GAAG,CAACC,IAAJ,CAASC,WAAT,CAAqBL,MAAtB,CAAR;IACD,CAJH,EAKGM,KALH,CAKS,MAAM;MACXd,IAAI,CAACe,cAAL,CAAoB;QAAEC,iBAAiB,EAAEnB;MAArB,CAApB;IACD,CAPH,EAQGoB,OARH,CAQW,MAAMX,UAAU,CAAC,KAAD,CAR3B;EASD;;EAED,oBACE,QAAC,IAAD;IAAM,KAAK,EAAEL,CAAC,CAAC,qBAAD,CAAd;IAAA,uBACE,QAAC,IAAD,CAAM,IAAN;MACE,IAAI,EAAC,mBADP;MAEE,KAAK,EAAEA,CAAC,CAAC,oBAAD,CAFV;MAGE,KAAK,EAAE,CAAC;QAAEiB,QAAQ,EAAE,IAAZ;QAAkBC,OAAO,EAAElB,CAAC,CAAC,UAAD;MAA5B,CAAD,CAHT;MAAA,uBAKE,QAAC,MAAD;QACE,OAAO,EAAEI,OADX;QAEE,OAAO,EAAEV,kBAFX;QAGE,QAAQ,EAAEY;MAHZ;QAAA;QAAA;QAAA;MAAA;IALF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAeD;;GApCQR,kB;UACOT,c,EACCI,S;;;KAFRK,kB;AAsCT,eAAeA,kBAAf"},"metadata":{},"sourceType":"module"}