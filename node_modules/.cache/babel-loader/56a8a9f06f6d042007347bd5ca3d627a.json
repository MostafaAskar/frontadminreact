{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate,useParams}from'react-router-dom';import{toast}from'react-toastify';import{Button,Card,Col,Form,Row,Space}from'antd';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{disableRefetch,removeFromMenu,setMenuData}from'../../redux/slices/menu';import LanguageList from'../../components/language-list';import getTranslationFields from'../../helpers/getTranslationFields';import{fetchFaqs}from'../../redux/slices/faq';import{useTranslation}from'react-i18next';import TextArea from'antd/lib/input/TextArea';import faqService from'../../services/faq';import getLanguageFields from'../../helpers/getLanguageFields';import Loading from'../../components/loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FaqEdit(){const{t}=useTranslation();const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const{languages,defaultLang}=useSelector(state=>state.formLang,shallowEqual);const{uuid}=useParams();const dispatch=useDispatch();const[form]=Form.useForm();const navigate=useNavigate();const[loadingBtn,setLoadingBtn]=useState(false);const[loading,setLoading]=useState(false);useEffect(()=>{return()=>{const data=form.getFieldsValue(true);dispatch(setMenuData({activeMenu,data}));};},[]);function fetchFaq(uuid){setLoading(true);faqService.getById(uuid).then(_ref=>{let{data}=_ref;const fields=['answer','question'];form.setFieldsValue(getLanguageFields(languages,data,fields));}).finally(()=>{setLoading(false);dispatch(disableRefetch(activeMenu));});}useEffect(()=>{if(activeMenu.refetch){fetchFaq(uuid);}},[activeMenu.refetch]);const onFinish=values=>{const body={question:getTranslationFields(languages,values,'question'),answer:getTranslationFields(languages,values,'answer')};setLoadingBtn(true);const nextUrl='settings/faqs';faqService.update(uuid,body).then(()=>{toast.success(t('successfully.updated'));dispatch(removeFromMenu({...activeMenu,nextUrl}));navigate(`/${nextUrl}`);dispatch(fetchFaqs({}));}).finally(()=>setLoadingBtn(false));};return/*#__PURE__*/_jsx(Card,{title:t('edit.faq'),extra:/*#__PURE__*/_jsx(LanguageList,{}),children:!loading?/*#__PURE__*/_jsxs(Form,{name:\"faq-edit\",layout:\"vertical\",onFinish:onFinish,form:form,initialValues:activeMenu===null||activeMenu===void 0?void 0:activeMenu.data,children:[/*#__PURE__*/_jsx(Row,{gutter:12,children:/*#__PURE__*/_jsx(Col,{span:12,children:languages.map(item=>/*#__PURE__*/_jsx(Form.Item,{label:t('question'),name:`question[${item.locale}]`,rules:[{required:item.locale===defaultLang,message:t('required')}],hidden:item.locale!==defaultLang,children:/*#__PURE__*/_jsx(TextArea,{rows:2,maxLength:150})},'question'+item.locale))})}),/*#__PURE__*/_jsx(Row,{gutter:12,children:/*#__PURE__*/_jsx(Col,{span:12,children:languages.map(item=>/*#__PURE__*/_jsx(Form.Item,{label:t('answer'),name:`answer[${item.locale}]`,rules:[{required:item.locale===defaultLang,message:t('required')}],hidden:item.locale!==defaultLang,children:/*#__PURE__*/_jsx(TextArea,{rows:6,maxLength:300})},'answer'+item.locale))})}),/*#__PURE__*/_jsx(Space,{children:/*#__PURE__*/_jsx(Button,{type:\"primary\",htmlType:\"submit\",loading:loadingBtn,children:t('save')})})]}):/*#__PURE__*/_jsx(Loading,{})});}","map":null,"metadata":{},"sourceType":"module"}