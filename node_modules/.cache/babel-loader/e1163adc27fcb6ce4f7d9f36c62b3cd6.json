{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/bonus/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Card, Space, Table, Tag } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setMenuData } from 'redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport FilterColumns from 'components/filter-column';\nimport { fetchBonusList } from 'redux/slices/bonus-list';\nimport formatSortType from 'helpers/formatSortType';\nimport moment from 'moment';\nimport useDidUpdate from 'helpers/useDidUpdate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst BonusList = () => {\n  _s();\n\n  var _activeMenu$data, _activeMenu$data2, _activeMenu$data3;\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    activeMenu\n  } = useSelector(state => state.menu, shallowEqual);\n  const {\n    bonus,\n    meta,\n    loading,\n    params\n  } = useSelector(state => state.bonusList, shallowEqual);\n  const data = activeMenu === null || activeMenu === void 0 ? void 0 : activeMenu.data;\n  const paramsData = {\n    sort: data === null || data === void 0 ? void 0 : data.sort,\n    column: data === null || data === void 0 ? void 0 : data.column,\n    perPage: data === null || data === void 0 ? void 0 : data.perPage,\n    page: data === null || data === void 0 ? void 0 : data.page\n  };\n  const [columns, setColumns] = useState([{\n    title: t('id'),\n    dataIndex: 'id',\n    key: 'id',\n    sorter: true,\n    is_show: true\n  }, {\n    title: t('bonus.stock'),\n    dataIndex: 'bonusStock',\n    key: 'bonusStock',\n    is_show: true,\n    render: (bonusStock, row) => {\n      var _bonusStock$product, _bonusStock$product$t;\n\n      return bonusStock === null || bonusStock === void 0 ? void 0 : (_bonusStock$product = bonusStock.product) === null || _bonusStock$product === void 0 ? void 0 : (_bonusStock$product$t = _bonusStock$product.translation) === null || _bonusStock$product$t === void 0 ? void 0 : _bonusStock$product$t.title;\n    }\n  }, {\n    title: t('shop'),\n    dataIndex: 'shop',\n    key: 'shop',\n    is_show: true,\n    render: (_, row) => {\n      var _row$shop, _row$shop$translation;\n\n      return (_row$shop = row.shop) === null || _row$shop === void 0 ? void 0 : (_row$shop$translation = _row$shop.translation) === null || _row$shop$translation === void 0 ? void 0 : _row$shop$translation.title;\n    }\n  }, {\n    title: t('expired.at'),\n    dataIndex: 'expired_at',\n    key: 'expired_at',\n    is_show: true,\n    render: expired_at => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: moment(new Date()).isBefore(expired_at) ? /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"blue\",\n        children: expired_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Tag, {\n        color: \"error\",\n        children: expired_at\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this)\n  }]);\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      batch(() => {\n        dispatch(fetchBonusList(paramsData));\n        dispatch(disableRefetch(activeMenu));\n      });\n    }\n  }, [activeMenu.refetch]);\n  useDidUpdate(() => {\n    dispatch(fetchBonusList(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filter, sorter) {\n    const {\n      pageSize: perPage,\n      current: page\n    } = pagination;\n    const {\n      field: column,\n      order\n    } = sorter;\n    const sort = formatSortType(order);\n    dispatch(setMenuData({\n      activeMenu,\n      data: { ...activeMenu.data,\n        perPage,\n        page,\n        column,\n        sort\n      }\n    }));\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: t('bonuses.list'),\n    extra: /*#__PURE__*/_jsxDEV(Space, {\n      children: /*#__PURE__*/_jsxDEV(FilterColumns, {\n        columns: columns,\n        setColumns: setColumns\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      scroll: {\n        x: true\n      },\n      columns: columns === null || columns === void 0 ? void 0 : columns.filter(item => item.is_show),\n      dataSource: bonus,\n      pagination: {\n        pageSize: params.perPage,\n        page: ((_activeMenu$data = activeMenu.data) === null || _activeMenu$data === void 0 ? void 0 : _activeMenu$data.page) || 1,\n        total: meta.total,\n        defaultCurrent: (_activeMenu$data2 = activeMenu.data) === null || _activeMenu$data2 === void 0 ? void 0 : _activeMenu$data2.page,\n        current: (_activeMenu$data3 = activeMenu.data) === null || _activeMenu$data3 === void 0 ? void 0 : _activeMenu$data3.page\n      },\n      rowKey: record => record.id,\n      loading: loading,\n      onChange: onChangePagination\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BonusList, \"q+7dirU4ElOMe+oNMiCAtj1xrCc=\", false, function () {\n  return [useTranslation, useDispatch, useSelector, useSelector, useDidUpdate];\n});\n\n_c = BonusList;\nexport default BonusList;\n\nvar _c;\n\n$RefreshReg$(_c, \"BonusList\");","map":{"version":3,"names":["React","useEffect","useState","Card","Space","Table","Tag","batch","shallowEqual","useDispatch","useSelector","disableRefetch","setMenuData","useTranslation","FilterColumns","fetchBonusList","formatSortType","moment","useDidUpdate","BonusList","t","dispatch","activeMenu","state","menu","bonus","meta","loading","params","bonusList","data","paramsData","sort","column","perPage","page","columns","setColumns","title","dataIndex","key","sorter","is_show","render","bonusStock","row","product","translation","_","shop","expired_at","Date","isBefore","refetch","onChangePagination","pagination","filter","pageSize","current","field","order","x","item","total","defaultCurrent","record","id"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/bonus/index.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Card, Space, Table, Tag } from 'antd';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { disableRefetch, setMenuData } from 'redux/slices/menu';\nimport { useTranslation } from 'react-i18next';\nimport FilterColumns from 'components/filter-column';\nimport { fetchBonusList } from 'redux/slices/bonus-list';\nimport formatSortType from 'helpers/formatSortType';\nimport moment from 'moment';\nimport useDidUpdate from 'helpers/useDidUpdate';\n\nconst BonusList = () => {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const { bonus, meta, loading, params } = useSelector(\n    (state) => state.bonusList,\n    shallowEqual,\n  );\n  const data = activeMenu?.data;\n  const paramsData = {\n    sort: data?.sort,\n    column: data?.column,\n    perPage: data?.perPage,\n    page: data?.page,\n  };\n\n  const [columns, setColumns] = useState([\n    {\n      title: t('id'),\n      dataIndex: 'id',\n      key: 'id',\n      sorter: true,\n      is_show: true,\n    },\n    {\n      title: t('bonus.stock'),\n      dataIndex: 'bonusStock',\n      key: 'bonusStock',\n      is_show: true,\n      render: (bonusStock, row) => bonusStock?.product?.translation?.title,\n    },\n    {\n      title: t('shop'),\n      dataIndex: 'shop',\n      key: 'shop',\n      is_show: true,\n      render: (_, row) => row.shop?.translation?.title,\n    },\n    {\n      title: t('expired.at'),\n      dataIndex: 'expired_at',\n      key: 'expired_at',\n      is_show: true,\n      render: (expired_at) => (\n        <div>\n          {moment(new Date()).isBefore(expired_at) ? (\n            <Tag color='blue'>{expired_at}</Tag>\n          ) : (\n            <Tag color='error'>{expired_at}</Tag>\n          )}\n        </div>\n      ),\n    },\n  ]);\n\n  useEffect(() => {\n    if (activeMenu.refetch) {\n      batch(() => {\n        dispatch(fetchBonusList(paramsData));\n        dispatch(disableRefetch(activeMenu));\n      });\n    }\n  }, [activeMenu.refetch]);\n\n  useDidUpdate(() => {\n    dispatch(fetchBonusList(paramsData));\n  }, [activeMenu.data]);\n\n  function onChangePagination(pagination, filter, sorter) {\n    const { pageSize: perPage, current: page } = pagination;\n    const { field: column, order } = sorter;\n    const sort = formatSortType(order);\n    dispatch(\n      setMenuData({\n        activeMenu,\n        data: { ...activeMenu.data, perPage, page, column, sort },\n      }),\n    );\n  }\n\n  return (\n    <Card\n      title={t('bonuses.list')}\n      extra={\n        <Space>\n          <FilterColumns columns={columns} setColumns={setColumns} />\n        </Space>\n      }\n    >\n      <Table\n        scroll={{ x: true }}\n        columns={columns?.filter((item) => item.is_show)}\n        dataSource={bonus}\n        pagination={{\n          pageSize: params.perPage,\n          page: activeMenu.data?.page || 1,\n          total: meta.total,\n          defaultCurrent: activeMenu.data?.page,\n          current: activeMenu.data?.page,\n        }}\n        rowKey={(record) => record.id}\n        loading={loading}\n        onChange={onChangePagination}\n      />\n    </Card>\n  );\n};\n\nexport default BonusList;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}