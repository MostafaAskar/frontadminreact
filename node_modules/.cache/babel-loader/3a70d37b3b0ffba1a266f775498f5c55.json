{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/products/productStatusModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Button, Col, Form, Modal, Row, Select, Input } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport productService from '../../services/product';\nimport requestAdminModelsService from 'services/request-models';\nimport { disableRefetch } from '../../redux/slices/menu';\nimport { fetchProducts } from '../../redux/slices/product';\nimport { toast } from 'react-toastify';\nimport { fetchRequestModels } from 'redux/slices/request-models';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst productStatuses = ['published', 'pending', 'unpublished'];\nconst requestStatuses = ['accept', 'decline'];\nconst body = {\n  type: 'product'\n};\nexport default function ProductStatusModal(_ref) {\n  _s();\n\n  let {\n    orderDetails: data,\n    handleCancel,\n    paramsData,\n    listType = 'product'\n  } = _ref;\n  const {\n    activeMenu\n  } = useSelector(state => state.menu, shallowEqual);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(data === null || data === void 0 ? void 0 : data.status);\n  const statuses = listType === 'request' ? requestStatuses : productStatuses;\n\n  const productStatusUpdate = (id, params) => {\n    productService.updateStatus(id, params).then(() => {\n      handleCancel();\n      toast.success(t('successfully.updated'));\n      dispatch(fetchProducts(paramsData));\n      dispatch(disableRefetch(activeMenu));\n    }).finally(() => setLoading(false));\n  };\n\n  const requestStatusChange = (id, data) => {\n    const params = {\n      status_note: data.status_note,\n      status: data.status === 'accept' ? 'approved' : 'canceled'\n    };\n    requestAdminModelsService.changeStatus(id, params).then(() => {\n      handleCancel();\n      toast.success(t('successfully.updated'));\n      dispatch(fetchRequestModels(body));\n      dispatch(disableRefetch(activeMenu));\n    }).finally(() => setLoading(false));\n  };\n\n  const onFinish = values => {\n    setLoading(true);\n    const params = { ...values\n    };\n\n    if (listType === 'product') {\n      productStatusUpdate(data.uuid, params);\n    } else if (listType) {\n      requestStatusChange(data.id, params);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    visible: !!data,\n    title: data.title,\n    onCancel: handleCancel,\n    footer: [/*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      onClick: () => form.submit(),\n      loading: loading,\n      children: t('save')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      type: \"default\",\n      onClick: handleCancel,\n      children: t('cancel')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this)],\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: onFinish,\n      initialValues: listType === 'product' ? {\n        status: data.status,\n        status_note: data.status_note\n      } : {\n        status: 'accept',\n        status_note: data.status_note\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 12,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n            label: t('status'),\n            name: \"status\",\n            rules: [{\n              required: true,\n              message: t('required')\n            }],\n            children: /*#__PURE__*/_jsxDEV(Select, {\n              onChange: status => setStatus(status),\n              children: statuses.map((item, idx) => /*#__PURE__*/_jsxDEV(Select.Option, {\n                value: item,\n                children: t(item)\n              }, item + idx, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), (status === 'unpublished' || status === 'decline') && /*#__PURE__*/_jsxDEV(Form.Item, {\n            name: \"status_note\",\n            label: t('note'),\n            rules: [{\n              validator(_, value) {\n                if (!value) {\n                  return Promise.reject(new Error(t('required')));\n                } else if (value && (value === null || value === void 0 ? void 0 : value.trim()) === '') {\n                  return Promise.reject(new Error(t('no.empty.space')));\n                } else if (value && (value === null || value === void 0 ? void 0 : value.trim().length) < 2) {\n                  return Promise.reject(new Error(t('must.be.at.least.2')));\n                }\n\n                return Promise.resolve();\n              }\n\n            }],\n            children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n              maxLength: 250,\n              showCount: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductStatusModal, \"jqCzWbn96sozvQIZaZXImgjqvco=\", false, function () {\n  return [useSelector, Form.useForm, useDispatch, useTranslation];\n});\n\n_c = ProductStatusModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductStatusModal\");","map":{"version":3,"names":["React","useState","Button","Col","Form","Modal","Row","Select","Input","shallowEqual","useDispatch","useSelector","useTranslation","productService","requestAdminModelsService","disableRefetch","fetchProducts","toast","fetchRequestModels","productStatuses","requestStatuses","body","type","ProductStatusModal","orderDetails","data","handleCancel","paramsData","listType","activeMenu","state","menu","form","useForm","dispatch","t","loading","setLoading","status","setStatus","statuses","productStatusUpdate","id","params","updateStatus","then","success","finally","requestStatusChange","status_note","changeStatus","onFinish","values","uuid","title","submit","required","message","map","item","idx","validator","_","value","Promise","reject","Error","trim","length","resolve"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/products/productStatusModal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Button, Col, Form, Modal, Row, Select, Input } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport productService from '../../services/product';\nimport requestAdminModelsService from 'services/request-models';\nimport { disableRefetch } from '../../redux/slices/menu';\nimport { fetchProducts } from '../../redux/slices/product';\nimport { toast } from 'react-toastify';\nimport { fetchRequestModels } from 'redux/slices/request-models';\n\nconst productStatuses = ['published', 'pending', 'unpublished'];\nconst requestStatuses = ['accept', 'decline'];\nconst body = {\n  type: 'product',\n};\n\nexport default function ProductStatusModal({\n  orderDetails: data,\n  handleCancel,\n  paramsData,\n  listType = 'product',\n}) {\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const [form] = Form.useForm();\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(data?.status);\n  const statuses = listType === 'request' ? requestStatuses : productStatuses;\n\n  const productStatusUpdate = (id, params) => {\n    productService\n      .updateStatus(id, params)\n      .then(() => {\n        handleCancel();\n        toast.success(t('successfully.updated'));\n        dispatch(fetchProducts(paramsData));\n        dispatch(disableRefetch(activeMenu));\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const requestStatusChange = (id, data) => {\n    const params = {\n      status_note: data.status_note,\n      status: data.status === 'accept' ? 'approved' : 'canceled',\n    };\n\n    requestAdminModelsService\n      .changeStatus(id, params)\n      .then(() => {\n        handleCancel();\n        toast.success(t('successfully.updated'));\n        dispatch(fetchRequestModels(body));\n        dispatch(disableRefetch(activeMenu));\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const onFinish = (values) => {\n    setLoading(true);\n    const params = { ...values };\n    if (listType === 'product') {\n      productStatusUpdate(data.uuid, params);\n    } else if (listType) {\n      requestStatusChange(data.id, params);\n    }\n  };\n\n  return (\n    <Modal\n      visible={!!data}\n      title={data.title}\n      onCancel={handleCancel}\n      footer={[\n        <Button type='primary' onClick={() => form.submit()} loading={loading}>\n          {t('save')}\n        </Button>,\n        <Button type='default' onClick={handleCancel}>\n          {t('cancel')}\n        </Button>,\n      ]}\n    >\n      <Form\n        form={form}\n        layout='vertical'\n        onFinish={onFinish}\n        initialValues={\n          listType === 'product'\n            ? { status: data.status, status_note: data.status_note }\n            : { status: 'accept', status_note: data.status_note }\n        }\n      >\n        <Row gutter={12}>\n          <Col span={24}>\n            <Form.Item\n              label={t('status')}\n              name='status'\n              rules={[\n                {\n                  required: true,\n                  message: t('required'),\n                },\n              ]}\n            >\n              <Select onChange={(status) => setStatus(status)}>\n                {statuses.map((item, idx) => (\n                  <Select.Option key={item + idx} value={item}>\n                    {t(item)}\n                  </Select.Option>\n                ))}\n              </Select>\n            </Form.Item>\n            {(status === 'unpublished' || status === 'decline') && (\n              <Form.Item\n                name='status_note'\n                label={t('note')}\n                rules={[\n                  {\n                    validator(_, value) {\n                      if (!value) {\n                        return Promise.reject(new Error(t('required')));\n                      } else if (value && value?.trim() === '') {\n                        return Promise.reject(new Error(t('no.empty.space')));\n                      } else if (value && value?.trim().length < 2) {\n                        return Promise.reject(\n                          new Error(t('must.be.at.least.2'))\n                        );\n                      }\n                      return Promise.resolve();\n                    },\n                  },\n                ]}\n              >\n                <Input.TextArea maxLength={250} showCount />\n              </Form.Item>\n            )}\n          </Col>\n        </Row>\n      </Form>\n    </Modal>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}