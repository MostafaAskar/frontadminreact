{"ast":null,"code":"function _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nvar _excluded = [\"fancyScroll\", \"children\", \"forwardedRef\"],\n    _excluded2 = [\"value\", \"onSend\", \"onChange\", \"autoFocus\", \"placeholder\", \"fancyScroll\", \"className\", \"activateAfterChange\", \"disabled\", \"sendDisabled\", \"sendOnReturnDisabled\", \"attachDisabled\", \"sendButton\", \"attachButton\", \"onAttachClick\"];\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  Object.defineProperty(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  Object.defineProperty(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf.bind() : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nimport React, { Component, useRef, useState, useEffect, useImperativeHandle, forwardRef } from \"react\";\nimport { noop } from \"../utils\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\nimport ContentEditable from \"../ContentEditable\";\nimport SendButton from \"../Buttons/SendButton\";\nimport AttachmentButton from \"../Buttons/AttachmentButton\";\nimport PerfectScrollbar from \"../Scroll\"; // Because container depends on fancyScroll\n// it must be wrapped in additional container\n\nfunction editorContainer() {\n  var Container = /*#__PURE__*/function (_Component) {\n    _inherits(Container, _Component);\n\n    var _super = _createSuper(Container);\n\n    function Container() {\n      _classCallCheck(this, Container);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Container, [{\n      key: \"render\",\n      value: function render() {\n        var _this$props = this.props,\n            fancyScroll = _this$props.fancyScroll,\n            children = _this$props.children,\n            forwardedRef = _this$props.forwardedRef,\n            rest = _objectWithoutProperties(_this$props, _excluded);\n\n        return /*#__PURE__*/React.createElement(React.Fragment, null, fancyScroll === true && /*#__PURE__*/React.createElement(PerfectScrollbar, _extends({\n          ref: function ref(elRef) {\n            return forwardedRef.current = elRef;\n          }\n        }, rest, {\n          options: {\n            suppressScrollX: true\n          }\n        }), children), fancyScroll === false && /*#__PURE__*/React.createElement(\"div\", _extends({\n          ref: forwardedRef\n        }, rest), children));\n      }\n    }]);\n\n    return Container;\n  }(Component);\n\n  return /*#__PURE__*/React.forwardRef(function (props, ref) {\n    return /*#__PURE__*/React.createElement(Container, _extends({\n      forwardedRef: ref\n    }, props));\n  });\n}\n\nvar EditorContainer = editorContainer();\n\nvar useControllableState = function useControllableState(value, initialValue) {\n  var initial = typeof value !== \"undefined\" ? value : initialValue;\n\n  var _useState = useState(initial),\n      _useState2 = _slicedToArray(_useState, 2),\n      stateValue = _useState2[0],\n      setStateValue = _useState2[1];\n\n  var effectiveValue = typeof value !== \"undefined\" ? value : stateValue;\n  return [effectiveValue, function (newValue) {\n    setStateValue(newValue);\n  }];\n};\n\nfunction MessageInputInner(_ref, ref) {\n  var value = _ref.value,\n      onSend = _ref.onSend,\n      onChange = _ref.onChange,\n      autoFocus = _ref.autoFocus,\n      placeholder = _ref.placeholder,\n      fancyScroll = _ref.fancyScroll,\n      className = _ref.className,\n      activateAfterChange = _ref.activateAfterChange,\n      disabled = _ref.disabled,\n      sendDisabled = _ref.sendDisabled,\n      sendOnReturnDisabled = _ref.sendOnReturnDisabled,\n      attachDisabled = _ref.attachDisabled,\n      sendButton = _ref.sendButton,\n      attachButton = _ref.attachButton,\n      onAttachClick = _ref.onAttachClick,\n      rest = _objectWithoutProperties(_ref, _excluded2);\n\n  var scrollRef = useRef();\n  var msgRef = useRef();\n\n  var _useControllableState = useControllableState(value, \"\"),\n      _useControllableState2 = _slicedToArray(_useControllableState, 2),\n      stateValue = _useControllableState2[0],\n      setStateValue = _useControllableState2[1];\n\n  var _useControllableState3 = useControllableState(sendDisabled, true),\n      _useControllableState4 = _slicedToArray(_useControllableState3, 2),\n      stateSendDisabled = _useControllableState4[0],\n      setStateSendDisabled = _useControllableState4[1]; // Public API\n\n\n  var focus = function focus() {\n    if (typeof msgRef.current !== \"undefined\") {\n      msgRef.current.focus();\n    }\n  }; // Return object with public Api\n\n\n  useImperativeHandle(ref, function () {\n    return {\n      focus: focus\n    };\n  }); // Set focus\n\n  useEffect(function () {\n    if (autoFocus === true) {\n      focus();\n    }\n  }, []); // Update scroll\n\n  useEffect(function () {\n    if (typeof scrollRef.current.updateScroll === \"function\") {\n      scrollRef.current.updateScroll();\n    }\n  });\n\n  var getContent = function getContent() {\n    // Direct reference to contenteditable div\n    var contentEditableRef = msgRef.current.msgRef.current;\n    return [contentEditableRef.textContent, contentEditableRef.innerText, contentEditableRef.cloneNode(true).childNodes];\n  };\n\n  var send = function send() {\n    if (stateValue.length > 0) {\n      // Clear input only when it's uncontrolled mode\n      if (value === undefined) {\n        setStateValue(\"\");\n      } // Disable send button only when it's uncontrolled mode\n\n\n      if (typeof sendDisabled === \"undefined\") {\n        setStateSendDisabled(true);\n      }\n\n      var content = getContent();\n      onSend(stateValue, content[0], content[1], content[2]);\n    }\n  };\n\n  var handleKeyPress = function handleKeyPress(evt) {\n    if (evt.key === \"Enter\" && evt.shiftKey === false && sendOnReturnDisabled === false) {\n      evt.preventDefault();\n      send();\n    }\n  };\n\n  var handleChange = function handleChange(innerHTML, textContent, innerText) {\n    setStateValue(innerHTML);\n\n    if (typeof sendDisabled === \"undefined\") {\n      setStateSendDisabled(textContent.length === 0);\n    }\n\n    if (typeof scrollRef.current.updateScroll === \"function\") {\n      scrollRef.current.updateScroll();\n    }\n\n    var content = getContent();\n    onChange(innerHTML, textContent, innerText, content[2]);\n  };\n\n  var cName = \"\".concat(prefix, \"-message-input\"),\n      ph = typeof placeholder === \"string\" ? placeholder : \"\";\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    className: classNames(cName, _defineProperty({}, \"\".concat(cName, \"--disabled\"), disabled), className)\n  }), attachButton === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__tools\")\n  }, /*#__PURE__*/React.createElement(AttachmentButton, {\n    onClick: onAttachClick,\n    disabled: disabled === true || attachDisabled === true\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__content-editor-wrapper\")\n  }, /*#__PURE__*/React.createElement(EditorContainer, {\n    fancyScroll: fancyScroll,\n    ref: scrollRef,\n    className: \"\".concat(cName, \"__content-editor-container\")\n  }, /*#__PURE__*/React.createElement(ContentEditable, {\n    ref: msgRef,\n    className: \"\".concat(cName, \"__content-editor\"),\n    disabled: disabled,\n    placeholder: ph,\n    onKeyPress: handleKeyPress,\n    onChange: handleChange,\n    activateAfterChange: activateAfterChange,\n    value: stateValue\n  }))), sendButton === true && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__tools\")\n  }, /*#__PURE__*/React.createElement(SendButton, {\n    onClick: send,\n    disabled: disabled === true || stateSendDisabled === true\n  })));\n}\n\nvar MessageInput = /*#__PURE__*/forwardRef(MessageInputInner);\nMessageInput.displayName = \"MessageInput\";\nMessageInput.propTypes = {\n  /** Value. */\n  value: PropTypes.string,\n\n  /** Placeholder. */\n  placeholder: PropTypes.string,\n\n  /** A input can show it is currently unable to be interacted with. */\n  disabled: PropTypes.bool,\n\n  /** Prevent that the input message is sent on a return press */\n  sendOnReturnDisabled: PropTypes.bool,\n\n  /** Send button can be disabled.<br>\n   * It's state is tracked by component, but it can be forced */\n  sendDisabled: PropTypes.bool,\n\n  /**\n   * Fancy scroll\n   * This property is set in constructor, and is not changing when component update.\n   */\n  fancyScroll: PropTypes.bool,\n\n  /**\n   * Sets focus element and caret at the end of input<br>\n   * when value is changed programmatically (e.g) from button click and element is not active\n   */\n  activateAfterChange: PropTypes.bool,\n\n  /** Set focus after mount. */\n  autoFocus: PropTypes.bool,\n\n  /**\n   * onChange handler<br>\n   * @param {String} innerHtml\n   * @param {String} textContent\n   * @param {String} innerText\n   * @param {NodeList} nodes\n   */\n  onChange: PropTypes.func,\n\n  /**\n   * onSend handler<br>\n   * @param {String} innerHtml\n   * @param {String} textContent\n   * @param {String} innerText\n   * @param {NodeList} nodes\n   */\n  onSend: PropTypes.func,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** Show send button */\n  sendButton: PropTypes.bool,\n\n  /** Show add attachment button */\n  attachButton: PropTypes.bool,\n\n  /** Disable add attachment button */\n  attachDisabled: PropTypes.bool,\n\n  /**\n   * onAttachClick handler\n   */\n  onAttachClick: PropTypes.func\n};\nprocess.env.NODE_ENV !== \"production\" ? MessageInputInner.propTypes = MessageInput.propTypes : void 0;\nMessageInput.defaultProps = {\n  value: undefined,\n  placeholder: \"\",\n  disabled: false,\n  sendOnReturnDisabled: false,\n  fancyScroll: true,\n  activateAfterChange: false,\n  autoFocus: false,\n  sendButton: true,\n  attachButton: true,\n  attachDisabled: false,\n  onAttachClick: noop,\n  onChange: noop,\n  onSend: noop\n};\nMessageInputInner.defaultProps = MessageInput.defaultProps;\nexport { MessageInput };\nexport default MessageInput;","map":null,"metadata":{},"sourceType":"module"}