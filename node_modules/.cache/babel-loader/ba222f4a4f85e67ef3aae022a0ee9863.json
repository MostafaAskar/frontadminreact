{"ast":null,"code":"var _excluded = [\"className\", \"orientation\", \"children\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\nimport Button from \"./Button\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEllipsisV } from \"@fortawesome/free-solid-svg-icons/faEllipsisV\";\nimport { faEllipsisH } from \"@fortawesome/free-solid-svg-icons/faEllipsisH\";\nexport var EllipsisButton = function EllipsisButton(_ref) {\n  var className = _ref.className,\n      orientation = _ref.orientation,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var cName = \"\".concat(prefix, \"-button--ellipsis\");\n  var icon = orientation === \"vertical\" ? faEllipsisV : faEllipsisH;\n  return /*#__PURE__*/React.createElement(Button, _extends({}, rest, {\n    className: classNames(cName, className),\n    icon: /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      icon: icon\n    })\n  }), children);\n};\nprocess.env.NODE_ENV !== \"production\" ? EllipsisButton.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n  orientation: PropTypes.oneOf([\"horizontal\", \"vertical\"])\n} : void 0;\nEllipsisButton.defaultProps = {\n  className: \"\",\n  orientation: \"horizontal\"\n};\nexport default EllipsisButton;","map":null,"metadata":{},"sourceType":"module"}