{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Button,Col,Form,Modal,Row,Select}from'antd';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{useTranslation}from'react-i18next';import parcelOrderService from'services/parcelOrder';import{setRefetch}from'redux/slices/menu';import{jsx as _jsx}from\"react/jsx-runtime\";export default function ParcelStatus(_ref){let{orderDetails:data,handleCancel,status}=_ref;const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const[form]=Form.useForm();const dispatch=useDispatch();const{t}=useTranslation();const[loading,setLoading]=useState(false);const[statuses,setStatuses]=useState(status);useEffect(()=>{const statusIndex=status.findIndex(item=>item.name===data.status);let newStatuses=[status[statusIndex],status[statusIndex+1],{name:'canceled',id:8,active:true}];if(statusIndex<0){newStatuses=[status[statusIndex+1],'canceled'];}setStatuses(newStatuses);},[data]);const onFinish=values=>{setLoading(true);const payload={...values};parcelOrderService.updateStatus(data.id,payload).then(()=>{handleCancel();dispatch(setRefetch(activeMenu));}).finally(()=>setLoading(false));};return/*#__PURE__*/_jsx(Modal,{visible:!!data,title:data.title,onCancel:handleCancel,footer:[/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>form.submit(),loading:loading,children:t('save')},'save-form'),/*#__PURE__*/_jsx(Button,{type:\"default\",onClick:handleCancel,children:t('cancel')},'cansel-modal')],children:/*#__PURE__*/_jsx(Form,{form:form,layout:\"vertical\",onFinish:onFinish,initialValues:{status:data.status},children:/*#__PURE__*/_jsx(Row,{gutter:12,children:/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(Form.Item,{label:t('status'),name:\"status\",rules:[{required:true,message:t('required')}],children:/*#__PURE__*/_jsx(Select,{children:statuses===null||statuses===void 0?void 0:statuses.map(item=>/*#__PURE__*/_jsx(Select.Option,{value:item===null||item===void 0?void 0:item.name,children:t(item===null||item===void 0?void 0:item.name)},item===null||item===void 0?void 0:item.name))})})})})})});}","map":null,"metadata":{},"sourceType":"module"}