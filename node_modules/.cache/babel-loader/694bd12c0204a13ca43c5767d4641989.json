{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/chart-widget.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\nimport ApexChart from 'react-apexcharts';\nimport ReactResizeDetector from 'react-resize-detector';\nimport { apexAreaChartDefaultOption, apexBarChartDefaultOption, apexLineChartDefaultOption, apexPieChartDefaultOption } from '../constants/ChartConstant';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DIR_RTL = 'rtl';\nconst titleStyle = {\n  position: 'absolute',\n  zIndex: '1'\n};\nconst extraStyle = {\n  position: 'absolute',\n  zIndex: '1',\n  right: '0',\n  top: '-2px'\n};\n\nconst getChartTypeDefaultOption = type => {\n  switch (type) {\n    case 'line':\n      return apexLineChartDefaultOption;\n\n    case 'bar':\n      return apexBarChartDefaultOption;\n\n    case 'area':\n      return apexAreaChartDefaultOption;\n\n    case 'pie':\n      return apexPieChartDefaultOption;\n\n    default:\n      return apexLineChartDefaultOption;\n  }\n};\n\nconst ChartWidget = _ref => {\n  _s();\n\n  let {\n    title,\n    series,\n    width,\n    height,\n    xAxis,\n    customOptions,\n    card,\n    type,\n    extra,\n    direction,\n    bodyClass\n  } = _ref;\n  let options = JSON.parse(JSON.stringify(getChartTypeDefaultOption(type)));\n  const isMobile = window.innerWidth < 768;\n\n  const setLegendOffset = () => {\n    if (chartRef.current) {\n      var _extraRef$current;\n\n      const lengend = chartRef.current.querySelectorAll('div.apexcharts-legend')[0];\n      lengend.style.marginRight = `${isMobile ? 0 : (_extraRef$current = extraRef.current) === null || _extraRef$current === void 0 ? void 0 : _extraRef$current.offsetWidth}px`;\n\n      if (direction === DIR_RTL) {\n        lengend.style.right = 'auto';\n        lengend.style.left = '0';\n      }\n\n      if (isMobile) {\n        lengend.style.position = 'relative';\n        lengend.style.top = 0;\n        lengend.style.justifyContent = 'start';\n        lengend.style.padding = 0;\n      }\n    }\n  };\n\n  useEffect(() => {\n    setLegendOffset(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  const extraRef = useRef(null);\n  const chartRef = useRef();\n  options.xaxis = {\n    categories: xAxis\n  };\n\n  if (customOptions) {\n    options = { ...options,\n      ...customOptions\n    };\n  }\n\n  const onResize = () => {\n    setTimeout(() => {\n      setLegendOffset();\n    }, 600);\n  };\n\n  const renderChart = () => /*#__PURE__*/_jsxDEV(ReactResizeDetector, {\n    onResize: onResize(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: direction === DIR_RTL ? {\n        direction: 'ltr'\n      } : {},\n      className: \"chartRef\",\n      ref: chartRef,\n      children: /*#__PURE__*/_jsxDEV(ApexChart, {\n        options: options,\n        type: type,\n        series: series,\n        width: width,\n        height: height\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 101,\n    columnNumber: 5\n  }, this);\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: card ? /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `position-relative ${bodyClass}`,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          style: !isMobile ? titleStyle : {},\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 14\n        }, this) && /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-weight-bold\",\n          style: !isMobile ? titleStyle : {},\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 15\n        }, this), extra && /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: extraRef,\n          style: !isMobile ? extraStyle : {},\n          children: extra\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 15\n        }, this), renderChart()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, this) : renderChart()\n  }, void 0, false);\n};\n\n_s(ChartWidget, \"yuOowm7QWeqbFUnrB2gsEuXomek=\");\n\n_c = ChartWidget;\nChartWidget.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  series: PropTypes.array.isRequired,\n  xAxis: PropTypes.array,\n  customOptions: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  card: PropTypes.bool,\n  type: PropTypes.string,\n  extra: PropTypes.element,\n  bodyClass: PropTypes.string\n};\nChartWidget.defaultProps = {\n  series: [],\n  height: 300,\n  width: '100%',\n  card: true,\n  type: 'line'\n};\nexport default ChartWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartWidget\");","map":{"version":3,"names":["React","useRef","useEffect","PropTypes","Card","ApexChart","ReactResizeDetector","apexAreaChartDefaultOption","apexBarChartDefaultOption","apexLineChartDefaultOption","apexPieChartDefaultOption","DIR_RTL","titleStyle","position","zIndex","extraStyle","right","top","getChartTypeDefaultOption","type","ChartWidget","title","series","width","height","xAxis","customOptions","card","extra","direction","bodyClass","options","JSON","parse","stringify","isMobile","window","innerWidth","setLegendOffset","chartRef","current","lengend","querySelectorAll","style","marginRight","extraRef","offsetWidth","left","justifyContent","padding","xaxis","categories","onResize","setTimeout","renderChart","propTypes","oneOfType","string","element","array","isRequired","object","number","bool","defaultProps"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/chart-widget.js"],"sourcesContent":["import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Card } from 'antd';\nimport ApexChart from 'react-apexcharts';\nimport ReactResizeDetector from 'react-resize-detector';\nimport {\n  apexAreaChartDefaultOption,\n  apexBarChartDefaultOption,\n  apexLineChartDefaultOption,\n  apexPieChartDefaultOption,\n} from '../constants/ChartConstant';\n\nconst DIR_RTL = 'rtl';\n\nconst titleStyle = {\n  position: 'absolute',\n  zIndex: '1',\n};\n\nconst extraStyle = {\n  position: 'absolute',\n  zIndex: '1',\n  right: '0',\n  top: '-2px',\n};\n\nconst getChartTypeDefaultOption = (type) => {\n  switch (type) {\n    case 'line':\n      return apexLineChartDefaultOption;\n    case 'bar':\n      return apexBarChartDefaultOption;\n    case 'area':\n      return apexAreaChartDefaultOption;\n    case 'pie':\n      return apexPieChartDefaultOption;\n    default:\n      return apexLineChartDefaultOption;\n  }\n};\n\nconst ChartWidget = ({\n  title,\n  series,\n  width,\n  height,\n  xAxis,\n  customOptions,\n  card,\n  type,\n  extra,\n  direction,\n  bodyClass,\n}) => {\n  let options = JSON.parse(JSON.stringify(getChartTypeDefaultOption(type)));\n\n  const isMobile = window.innerWidth < 768;\n  const setLegendOffset = () => {\n    if (chartRef.current) {\n      const lengend = chartRef.current.querySelectorAll(\n        'div.apexcharts-legend'\n      )[0];\n      lengend.style.marginRight = `${\n        isMobile ? 0 : extraRef.current?.offsetWidth\n      }px`;\n      if (direction === DIR_RTL) {\n        lengend.style.right = 'auto';\n        lengend.style.left = '0';\n      }\n      if (isMobile) {\n        lengend.style.position = 'relative';\n        lengend.style.top = 0;\n        lengend.style.justifyContent = 'start';\n        lengend.style.padding = 0;\n      }\n    }\n  };\n\n  useEffect(() => {\n    setLegendOffset();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const extraRef = useRef(null);\n  const chartRef = useRef();\n\n  options.xaxis = {\n    categories: xAxis,\n  };\n  if (customOptions) {\n    options = { ...options, ...customOptions };\n  }\n\n  const onResize = () => {\n    setTimeout(() => {\n      setLegendOffset();\n    }, 600);\n  };\n\n  const renderChart = () => (\n    <ReactResizeDetector onResize={onResize()}>\n      <div\n        style={direction === DIR_RTL ? { direction: 'ltr' } : {}}\n        className='chartRef'\n        ref={chartRef}\n      >\n        <ApexChart\n          options={options}\n          type={type}\n          series={series}\n          width={width}\n          height={height}\n        />\n      </div>\n    </ReactResizeDetector>\n  );\n\n  return (\n    <>\n      {card ? (\n        <Card>\n          <div className={`position-relative ${bodyClass}`}>\n            {<div style={!isMobile ? titleStyle : {}}>{title}</div> && (\n              <h4\n                className='font-weight-bold'\n                style={!isMobile ? titleStyle : {}}\n              >\n                {title}\n              </h4>\n            )}\n            {extra && (\n              <div ref={extraRef} style={!isMobile ? extraStyle : {}}>\n                {extra}\n              </div>\n            )}\n            {renderChart()}\n          </div>\n        </Card>\n      ) : (\n        renderChart()\n      )}\n    </>\n  );\n};\n\nChartWidget.propTypes = {\n  title: PropTypes.oneOfType([PropTypes.string, PropTypes.element]),\n  series: PropTypes.array.isRequired,\n  xAxis: PropTypes.array,\n  customOptions: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  card: PropTypes.bool,\n  type: PropTypes.string,\n  extra: PropTypes.element,\n  bodyClass: PropTypes.string,\n};\n\nChartWidget.defaultProps = {\n  series: [],\n  height: 300,\n  width: '100%',\n  card: true,\n  type: 'line',\n};\n\nexport default ChartWidget;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,SAAxB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,SACEC,0BADF,EAEEC,yBAFF,EAGEC,0BAHF,EAIEC,yBAJF,QAKO,4BALP;;;AAOA,MAAMC,OAAO,GAAG,KAAhB;AAEA,MAAMC,UAAU,GAAG;EACjBC,QAAQ,EAAE,UADO;EAEjBC,MAAM,EAAE;AAFS,CAAnB;AAKA,MAAMC,UAAU,GAAG;EACjBF,QAAQ,EAAE,UADO;EAEjBC,MAAM,EAAE,GAFS;EAGjBE,KAAK,EAAE,GAHU;EAIjBC,GAAG,EAAE;AAJY,CAAnB;;AAOA,MAAMC,yBAAyB,GAAIC,IAAD,IAAU;EAC1C,QAAQA,IAAR;IACE,KAAK,MAAL;MACE,OAAOV,0BAAP;;IACF,KAAK,KAAL;MACE,OAAOD,yBAAP;;IACF,KAAK,MAAL;MACE,OAAOD,0BAAP;;IACF,KAAK,KAAL;MACE,OAAOG,yBAAP;;IACF;MACE,OAAOD,0BAAP;EAVJ;AAYD,CAbD;;AAeA,MAAMW,WAAW,GAAG,QAYd;EAAA;;EAAA,IAZe;IACnBC,KADmB;IAEnBC,MAFmB;IAGnBC,KAHmB;IAInBC,MAJmB;IAKnBC,KALmB;IAMnBC,aANmB;IAOnBC,IAPmB;IAQnBR,IARmB;IASnBS,KATmB;IAUnBC,SAVmB;IAWnBC;EAXmB,CAYf;EACJ,IAAIC,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAehB,yBAAyB,CAACC,IAAD,CAAxC,CAAX,CAAd;EAEA,MAAMgB,QAAQ,GAAGC,MAAM,CAACC,UAAP,GAAoB,GAArC;;EACA,MAAMC,eAAe,GAAG,MAAM;IAC5B,IAAIC,QAAQ,CAACC,OAAb,EAAsB;MAAA;;MACpB,MAAMC,OAAO,GAAGF,QAAQ,CAACC,OAAT,CAAiBE,gBAAjB,CACd,uBADc,EAEd,CAFc,CAAhB;MAGAD,OAAO,CAACE,KAAR,CAAcC,WAAd,GAA6B,GAC3BT,QAAQ,GAAG,CAAH,wBAAOU,QAAQ,CAACL,OAAhB,sDAAO,kBAAkBM,WAClC,IAFD;;MAGA,IAAIjB,SAAS,KAAKlB,OAAlB,EAA2B;QACzB8B,OAAO,CAACE,KAAR,CAAc3B,KAAd,GAAsB,MAAtB;QACAyB,OAAO,CAACE,KAAR,CAAcI,IAAd,GAAqB,GAArB;MACD;;MACD,IAAIZ,QAAJ,EAAc;QACZM,OAAO,CAACE,KAAR,CAAc9B,QAAd,GAAyB,UAAzB;QACA4B,OAAO,CAACE,KAAR,CAAc1B,GAAd,GAAoB,CAApB;QACAwB,OAAO,CAACE,KAAR,CAAcK,cAAd,GAA+B,OAA/B;QACAP,OAAO,CAACE,KAAR,CAAcM,OAAd,GAAwB,CAAxB;MACD;IACF;EACF,CAnBD;;EAqBA/C,SAAS,CAAC,MAAM;IACdoC,eAAe,GADD,CAEd;EACD,CAHQ,EAGN,EAHM,CAAT;EAKA,MAAMO,QAAQ,GAAG5C,MAAM,CAAC,IAAD,CAAvB;EACA,MAAMsC,QAAQ,GAAGtC,MAAM,EAAvB;EAEA8B,OAAO,CAACmB,KAAR,GAAgB;IACdC,UAAU,EAAE1B;EADE,CAAhB;;EAGA,IAAIC,aAAJ,EAAmB;IACjBK,OAAO,GAAG,EAAE,GAAGA,OAAL;MAAc,GAAGL;IAAjB,CAAV;EACD;;EAED,MAAM0B,QAAQ,GAAG,MAAM;IACrBC,UAAU,CAAC,MAAM;MACff,eAAe;IAChB,CAFS,EAEP,GAFO,CAAV;EAGD,CAJD;;EAMA,MAAMgB,WAAW,GAAG,mBAClB,QAAC,mBAAD;IAAqB,QAAQ,EAAEF,QAAQ,EAAvC;IAAA,uBACE;MACE,KAAK,EAAEvB,SAAS,KAAKlB,OAAd,GAAwB;QAAEkB,SAAS,EAAE;MAAb,CAAxB,GAA+C,EADxD;MAEE,SAAS,EAAC,UAFZ;MAGE,GAAG,EAAEU,QAHP;MAAA,uBAKE,QAAC,SAAD;QACE,OAAO,EAAER,OADX;QAEE,IAAI,EAAEZ,IAFR;QAGE,MAAM,EAAEG,MAHV;QAIE,KAAK,EAAEC,KAJT;QAKE,MAAM,EAAEC;MALV;QAAA;QAAA;QAAA;MAAA;IALF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;;EAkBA,oBACE;IAAA,UACGG,IAAI,gBACH,QAAC,IAAD;MAAA,uBACE;QAAK,SAAS,EAAG,qBAAoBG,SAAU,EAA/C;QAAA,WACG;UAAK,KAAK,EAAE,CAACK,QAAD,GAAYvB,UAAZ,GAAyB,EAArC;UAAA,UAA0CS;QAA1C;UAAA;UAAA;UAAA;QAAA,yBACC;UACE,SAAS,EAAC,kBADZ;UAEE,KAAK,EAAE,CAACc,QAAD,GAAYvB,UAAZ,GAAyB,EAFlC;UAAA,UAIGS;QAJH;UAAA;UAAA;UAAA;QAAA,QAFJ,EASGO,KAAK,iBACJ;UAAK,GAAG,EAAEiB,QAAV;UAAoB,KAAK,EAAE,CAACV,QAAD,GAAYpB,UAAZ,GAAyB,EAApD;UAAA,UACGa;QADH;UAAA;UAAA;UAAA;QAAA,QAVJ,EAcG0B,WAAW,EAdd;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADG,GAoBHA,WAAW;EArBf,iBADF;AA0BD,CAtGD;;GAAMlC,W;;KAAAA,W;AAwGNA,WAAW,CAACmC,SAAZ,GAAwB;EACtBlC,KAAK,EAAElB,SAAS,CAACqD,SAAV,CAAoB,CAACrD,SAAS,CAACsD,MAAX,EAAmBtD,SAAS,CAACuD,OAA7B,CAApB,CADe;EAEtBpC,MAAM,EAAEnB,SAAS,CAACwD,KAAV,CAAgBC,UAFF;EAGtBnC,KAAK,EAAEtB,SAAS,CAACwD,KAHK;EAItBjC,aAAa,EAAEvB,SAAS,CAAC0D,MAJH;EAKtBtC,KAAK,EAAEpB,SAAS,CAACqD,SAAV,CAAoB,CAACrD,SAAS,CAACsD,MAAX,EAAmBtD,SAAS,CAAC2D,MAA7B,CAApB,CALe;EAMtBtC,MAAM,EAAErB,SAAS,CAACqD,SAAV,CAAoB,CAACrD,SAAS,CAACsD,MAAX,EAAmBtD,SAAS,CAAC2D,MAA7B,CAApB,CANc;EAOtBnC,IAAI,EAAExB,SAAS,CAAC4D,IAPM;EAQtB5C,IAAI,EAAEhB,SAAS,CAACsD,MARM;EAStB7B,KAAK,EAAEzB,SAAS,CAACuD,OATK;EAUtB5B,SAAS,EAAE3B,SAAS,CAACsD;AAVC,CAAxB;AAaArC,WAAW,CAAC4C,YAAZ,GAA2B;EACzB1C,MAAM,EAAE,EADiB;EAEzBE,MAAM,EAAE,GAFiB;EAGzBD,KAAK,EAAE,MAHkB;EAIzBI,IAAI,EAAE,IAJmB;EAKzBR,IAAI,EAAE;AALmB,CAA3B;AAQA,eAAeC,WAAf"},"metadata":{},"sourceType":"module"}