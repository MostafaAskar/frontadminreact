{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/chat/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext, useEffect, useRef, useState } from 'react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport { Sidebar, MainContainer, ChatContainer, MessageList, MessageInput, Avatar, ConversationList, Conversation, ConversationHeader } from '@chatscope/chat-ui-kit-react';\nimport Channel from './channel';\nimport { deleteChat, deleteMessage, editMessage, fetchMessages, getChat, sendMessage } from '../../firebase';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { removeCurrentChat, setAuthUserId, setChatInitialized, setChats, setCurrentChat, setMessages, setMessagesLoading, setUnsubscriber } from '../../redux/slices/chat';\nimport { getMessages } from '../../redux/selectors/chatSelector';\nimport { scrollTo } from '../../helpers/scrollTo';\nimport { useTranslation } from 'react-i18next'; // import {DeleteOutlined, MoreOutlined} from '@ant-design/icons';\n// import {Dropdown, Menu} from 'antd';\n\nimport CustomModal from '../../components/modal';\nimport { Context } from '../../context/context';\nimport getAvatar from '../../helpers/getAvatar';\nimport UploadMedia from './upload-media';\nimport { toast } from 'react-toastify';\nimport { SUPPORTED_FORMATS } from '../../configs/app-global';\nimport MessageActionIndicator from './message-action-indicator';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet chatUnsubscribe;\nexport default function Chat() {\n  _s();\n\n  var _currentChat$user, _currentChat$user2, _currentChat$user3, _currentChat$user4;\n\n  const {\n    t\n  } = useTranslation();\n  const inputRef = useRef();\n  const nextRef = useRef();\n  const dispatch = useDispatch();\n  const messageEndRef = useRef();\n  const {\n    setIsModalVisible\n  } = useContext(Context);\n  const [file, setFile] = useState('');\n  const [url, setUrl] = useState('');\n  const [modal, setModal] = useState(false);\n  const currentUserId = useSelector(state => state.auth.user.id);\n  const {\n    chats,\n    currentChat,\n    messagesLoading,\n    chatInitialized,\n    authUserId\n  } = useSelector(state => state.chat, shallowEqual);\n  const groupMessages = useSelector(state => getMessages(state.chat.messages), shallowEqual);\n  const [newMessage, setNewMessage] = useState('');\n  const [actionMessage, setActionMessage] = useState({\n    actionType: null,\n    message: null\n  });\n  const messageUnsubscribeRef = useRef();\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [inputRef, currentChat]);\n  useEffect(() => {\n    if (!chatInitialized) {\n      var _chatUnsubscribe;\n\n      (_chatUnsubscribe = chatUnsubscribe) === null || _chatUnsubscribe === void 0 ? void 0 : _chatUnsubscribe();\n      chatUnsubscribe = getChat(currentUserId);\n      batch(() => {\n        dispatch(setAuthUserId(currentUserId));\n        dispatch(setChatInitialized(true));\n      });\n    } else if (currentUserId !== authUserId) {\n      var _chatUnsubscribe2;\n\n      (_chatUnsubscribe2 = chatUnsubscribe) === null || _chatUnsubscribe2 === void 0 ? void 0 : _chatUnsubscribe2();\n      batch(() => {\n        dispatch(removeCurrentChat());\n        dispatch(setChats([]));\n        dispatch(setMessages([]));\n        dispatch(setAuthUserId(currentUserId));\n      });\n      chatUnsubscribe = getChat(currentUserId);\n    }\n  }, [currentUserId]);\n\n  const handleOnChange = value => {\n    setNewMessage(value);\n  };\n\n  const scrollToBottom = () => {\n    const topPosition = messageEndRef.current.offsetTop;\n    const container = document.querySelector('.message-list .scrollbar-container');\n    scrollTo(container, topPosition - 30, 600);\n  };\n\n  const handleOnSubmit = async data => {\n    setNewMessage('');\n    if (actionMessage.actionType === 'reply') data.replyDocId = actionMessage.message.id;\n\n    if (actionMessage.actionType === 'edit') {\n      await editMessage(currentUserId, currentChat.chatId, data, actionMessage);\n    } else {\n      scrollToBottom();\n      await sendMessage(currentUserId, currentChat.chatId, data);\n    }\n\n    clearActionMessage();\n  };\n\n  const handleChatClick = chat => {\n    if (messageUnsubscribeRef.current) messageUnsubscribeRef.current();\n    batch(() => {\n      dispatch(setMessagesLoading(true));\n      dispatch(setCurrentChat(chat));\n    });\n    messageUnsubscribeRef.current = fetchMessages(chat.chatId, currentUserId);\n    clearActionMessage();\n  };\n\n  const deleteCurrentChat = async () => {\n    var _messageUnsubscribeRe;\n\n    await deleteChat(currentChat.chatId);\n    groupMessages.forEach(group => {\n      group.messages.forEach(item => deleteMessage(currentChat.chatId, item.id));\n    });\n    (_messageUnsubscribeRe = messageUnsubscribeRef.current) === null || _messageUnsubscribeRe === void 0 ? void 0 : _messageUnsubscribeRe.call(messageUnsubscribeRef);\n    batch(() => {\n      dispatch(removeCurrentChat());\n      dispatch(setMessages([]));\n    });\n    setIsModalVisible(false);\n    clearActionMessage();\n  };\n\n  function handleFile(event) {\n    if (!SUPPORTED_FORMATS.includes(event.target.files[0].type)) {\n      toast.error('Supported only image formats!');\n    } else {\n      setFile(event.target.files[0]);\n      const reader = new FileReader();\n\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setUrl(reader.result);\n          setModal(true);\n        }\n      };\n\n      reader === null || reader === void 0 ? void 0 : reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  const onAttachClick = () => {\n    nextRef.current.click();\n  };\n\n  const clearActionMessage = () => {\n    var _inputRef$current;\n\n    setActionMessage({\n      actionType: null,\n      message: null\n    });\n    if (newMessage) setNewMessage('');\n    (_inputRef$current = inputRef.current) === null || _inputRef$current === void 0 ? void 0 : _inputRef$current.focus();\n  };\n\n  const handleActionMessage = (actionType, message) => {\n    var _inputRef$current2;\n\n    setActionMessage({\n      actionType,\n      message\n    });\n\n    if (actionType === 'edit') {\n      setNewMessage(message.message);\n    }\n\n    (_inputRef$current2 = inputRef.current) === null || _inputRef$current2 === void 0 ? void 0 : _inputRef$current2.focus();\n  };\n\n  const handleDelete = message => {\n    var _groupMessages$at, _groupMessages$at$mes, _groupMessages$at2, _groupMessages$at2$me;\n\n    const messageBeforeLastMessage = (groupMessages === null || groupMessages === void 0 ? void 0 : (_groupMessages$at = groupMessages.at(-1)) === null || _groupMessages$at === void 0 ? void 0 : (_groupMessages$at$mes = _groupMessages$at.messages) === null || _groupMessages$at$mes === void 0 ? void 0 : _groupMessages$at$mes.at(-2)) || (groupMessages === null || groupMessages === void 0 ? void 0 : (_groupMessages$at2 = groupMessages.at(-2)) === null || _groupMessages$at2 === void 0 ? void 0 : (_groupMessages$at2$me = _groupMessages$at2.messages) === null || _groupMessages$at2$me === void 0 ? void 0 : _groupMessages$at2$me.at(-1));\n    deleteMessage(currentChat.chatId, message, messageBeforeLastMessage).then();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      height: '80vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      ref: nextRef,\n      onChange: handleFile,\n      accept: \"image/jpg, image/jpeg, image/png, image/svg+xml, image/svg\",\n      className: \"d-none\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(MainContainer, {\n      responsive: true,\n      className: \"chat-container rounded\",\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        position: \"left\",\n        scrollable: false,\n        className: \"chat-sidebar\",\n        children: /*#__PURE__*/_jsxDEV(ConversationList, {\n          children: chats.filter(item => item.user.id !== undefined).map((chat, idx) => {\n            var _chat$user, _chat$user2;\n\n            return /*#__PURE__*/_jsxDEV(Conversation, {\n              onClick: () => {\n                handleChatClick(chat);\n              },\n              name: chat.user.firstname + ' ' + (chat.user.lastname || ''),\n              info: chat.lastMessage,\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                src: getAvatar((_chat$user = chat.user) === null || _chat$user === void 0 ? void 0 : _chat$user.img),\n                name: (_chat$user2 = chat.user) === null || _chat$user2 === void 0 ? void 0 : _chat$user2.firstname\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 21\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ChatContainer, {\n        className: \"chat-container\",\n        children: [currentChat ? /*#__PURE__*/_jsxDEV(ConversationHeader, {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(ConversationHeader.Back, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Avatar, {\n            src: getAvatar(currentChat === null || currentChat === void 0 ? void 0 : (_currentChat$user = currentChat.user) === null || _currentChat$user === void 0 ? void 0 : _currentChat$user.img),\n            name: currentChat === null || currentChat === void 0 ? void 0 : (_currentChat$user2 = currentChat.user) === null || _currentChat$user2 === void 0 ? void 0 : _currentChat$user2.firstname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ConversationHeader.Content, {\n            userName: `${currentChat === null || currentChat === void 0 ? void 0 : (_currentChat$user3 = currentChat.user) === null || _currentChat$user3 === void 0 ? void 0 : _currentChat$user3.firstname} ${(currentChat === null || currentChat === void 0 ? void 0 : (_currentChat$user4 = currentChat.user) === null || _currentChat$user4 === void 0 ? void 0 : _currentChat$user4.lastname) || ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this) : '', /*#__PURE__*/_jsxDEV(MessageList, {\n          loading: messagesLoading,\n          className: \"message-list\",\n          children: [/*#__PURE__*/_jsxDEV(Channel, {\n            groupMessages: groupMessages,\n            messageEndRef: messageEndRef,\n            handleActionMessage: handleActionMessage,\n            handleDelete: handleDelete\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), actionMessage.message && /*#__PURE__*/_jsxDEV(MessageActionIndicator, {\n            actionMessage: actionMessage,\n            cancelMessageAction: clearActionMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), groupMessages.length ? /*#__PURE__*/_jsxDEV(MessageInput, {\n          ref: inputRef,\n          value: newMessage,\n          onChange: handleOnChange,\n          onSend: inputVal => handleOnSubmit({\n            message: inputVal.replace(/\\&nbsp;/g, '').replace(/<[^>]+>/g, '').trim()\n          }),\n          placeholder: \"Message\",\n          className: \"chat-input\",\n          onAttachClick: onAttachClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UploadMedia, {\n      modal: modal,\n      url: url,\n      setModal: setModal,\n      file: file,\n      handleOnSubmit: handleOnSubmit\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CustomModal, {\n      click: deleteCurrentChat,\n      text: t('delete.chat')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 193,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Chat, \"PPZnlF9RmhCwxYQ/vB83G/3oEEg=\", false, function () {\n  return [useTranslation, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = Chat;\n\nvar _c;\n\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useContext","useEffect","useRef","useState","Sidebar","MainContainer","ChatContainer","MessageList","MessageInput","Avatar","ConversationList","Conversation","ConversationHeader","Channel","deleteChat","deleteMessage","editMessage","fetchMessages","getChat","sendMessage","batch","shallowEqual","useDispatch","useSelector","removeCurrentChat","setAuthUserId","setChatInitialized","setChats","setCurrentChat","setMessages","setMessagesLoading","setUnsubscriber","getMessages","scrollTo","useTranslation","CustomModal","Context","getAvatar","UploadMedia","toast","SUPPORTED_FORMATS","MessageActionIndicator","chatUnsubscribe","Chat","t","inputRef","nextRef","dispatch","messageEndRef","setIsModalVisible","file","setFile","url","setUrl","modal","setModal","currentUserId","state","auth","user","id","chats","currentChat","messagesLoading","chatInitialized","authUserId","chat","groupMessages","messages","newMessage","setNewMessage","actionMessage","setActionMessage","actionType","message","messageUnsubscribeRef","current","focus","handleOnChange","value","scrollToBottom","topPosition","offsetTop","container","document","querySelector","handleOnSubmit","data","replyDocId","chatId","clearActionMessage","handleChatClick","deleteCurrentChat","forEach","group","item","handleFile","event","includes","target","files","type","error","reader","FileReader","onload","readyState","result","readAsDataURL","onAttachClick","click","handleActionMessage","handleDelete","messageBeforeLastMessage","at","then","height","filter","undefined","map","idx","firstname","lastname","lastMessage","img","length","inputVal","replace","trim"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/chat/index.js"],"sourcesContent":["import React, { useContext, useEffect, useRef, useState } from 'react';\nimport '@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';\nimport {\n  Sidebar,\n  MainContainer,\n  ChatContainer,\n  MessageList,\n  MessageInput,\n  Avatar,\n  ConversationList,\n  Conversation,\n  ConversationHeader,\n} from '@chatscope/chat-ui-kit-react';\nimport Channel from './channel';\nimport {\n  deleteChat,\n  deleteMessage,\n  editMessage,\n  fetchMessages,\n  getChat,\n  sendMessage,\n} from '../../firebase';\nimport { batch, shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  removeCurrentChat,\n  setAuthUserId,\n  setChatInitialized,\n  setChats,\n  setCurrentChat,\n  setMessages,\n  setMessagesLoading,\n  setUnsubscriber,\n} from '../../redux/slices/chat';\nimport { getMessages } from '../../redux/selectors/chatSelector';\nimport { scrollTo } from '../../helpers/scrollTo';\nimport { useTranslation } from 'react-i18next';\n// import {DeleteOutlined, MoreOutlined} from '@ant-design/icons';\n// import {Dropdown, Menu} from 'antd';\nimport CustomModal from '../../components/modal';\nimport { Context } from '../../context/context';\nimport getAvatar from '../../helpers/getAvatar';\nimport UploadMedia from './upload-media';\nimport { toast } from 'react-toastify';\nimport { SUPPORTED_FORMATS } from '../../configs/app-global';\nimport MessageActionIndicator from './message-action-indicator';\n\nlet chatUnsubscribe;\n\nexport default function Chat() {\n  const { t } = useTranslation();\n  const inputRef = useRef();\n  const nextRef = useRef();\n  const dispatch = useDispatch();\n  const messageEndRef = useRef();\n  const { setIsModalVisible } = useContext(Context);\n  const [file, setFile] = useState('');\n  const [url, setUrl] = useState('');\n  const [modal, setModal] = useState(false);\n  const currentUserId = useSelector((state) => state.auth.user.id);\n  const { chats, currentChat, messagesLoading, chatInitialized, authUserId } =\n    useSelector((state) => state.chat, shallowEqual);\n  const groupMessages = useSelector(\n    (state) => getMessages(state.chat.messages),\n    shallowEqual,\n  );\n  const [newMessage, setNewMessage] = useState('');\n  const [actionMessage, setActionMessage] = useState({\n    actionType: null,\n    message: null,\n  });\n\n  const messageUnsubscribeRef = useRef();\n\n  useEffect(() => {\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [inputRef, currentChat]);\n\n  useEffect(() => {\n    if (!chatInitialized) {\n      chatUnsubscribe?.();\n      chatUnsubscribe = getChat(currentUserId);\n      batch(() => {\n        dispatch(setAuthUserId(currentUserId));\n        dispatch(setChatInitialized(true));\n      });\n    } else if (currentUserId !== authUserId) {\n      chatUnsubscribe?.();\n      batch(() => {\n        dispatch(removeCurrentChat());\n        dispatch(setChats([]));\n        dispatch(setMessages([]));\n        dispatch(setAuthUserId(currentUserId));\n      });\n      chatUnsubscribe = getChat(currentUserId);\n    }\n  }, [currentUserId]);\n\n  const handleOnChange = (value) => {\n    setNewMessage(value);\n  };\n\n  const scrollToBottom = () => {\n    const topPosition = messageEndRef.current.offsetTop;\n    const container = document.querySelector(\n      '.message-list .scrollbar-container',\n    );\n    scrollTo(container, topPosition - 30, 600);\n  };\n\n  const handleOnSubmit = async (data) => {\n    setNewMessage('');\n    if (actionMessage.actionType === 'reply')\n      data.replyDocId = actionMessage.message.id;\n    if (actionMessage.actionType === 'edit') {\n      await editMessage(currentUserId, currentChat.chatId, data, actionMessage);\n    } else {\n      scrollToBottom();\n      await sendMessage(currentUserId, currentChat.chatId, data);\n    }\n    clearActionMessage();\n  };\n\n  const handleChatClick = (chat) => {\n    if (messageUnsubscribeRef.current) messageUnsubscribeRef.current();\n    batch(() => {\n      dispatch(setMessagesLoading(true));\n      dispatch(setCurrentChat(chat));\n    });\n    messageUnsubscribeRef.current = fetchMessages(chat.chatId, currentUserId);\n    clearActionMessage();\n  };\n\n  const deleteCurrentChat = async () => {\n    await deleteChat(currentChat.chatId);\n    groupMessages.forEach((group) => {\n      group.messages.forEach((item) =>\n        deleteMessage(currentChat.chatId, item.id),\n      );\n    });\n    messageUnsubscribeRef.current?.();\n    batch(() => {\n      dispatch(removeCurrentChat());\n      dispatch(setMessages([]));\n    });\n    setIsModalVisible(false);\n    clearActionMessage();\n  };\n\n  function handleFile(event) {\n    if (!SUPPORTED_FORMATS.includes(event.target.files[0].type)) {\n      toast.error('Supported only image formats!');\n    } else {\n      setFile(event.target.files[0]);\n      const reader = new FileReader();\n      reader.onload = () => {\n        if (reader.readyState === 2) {\n          setUrl(reader.result);\n          setModal(true);\n        }\n      };\n      reader?.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  const onAttachClick = () => {\n    nextRef.current.click();\n  };\n\n  const clearActionMessage = () => {\n    setActionMessage({ actionType: null, message: null });\n    if (newMessage) setNewMessage('');\n    inputRef.current?.focus();\n  };\n\n  const handleActionMessage = (actionType, message) => {\n    setActionMessage({ actionType, message });\n    if (actionType === 'edit') {\n      setNewMessage(message.message);\n    }\n    inputRef.current?.focus();\n  };\n\n  const handleDelete = (message) => {\n    const messageBeforeLastMessage =\n      groupMessages?.at(-1)?.messages?.at(-2) ||\n      groupMessages?.at(-2)?.messages?.at(-1);\n    deleteMessage(currentChat.chatId, message, messageBeforeLastMessage).then();\n  };\n\n  return (\n    <div style={{ height: '80vh' }}>\n      <input\n        type='file'\n        ref={nextRef}\n        onChange={handleFile}\n        accept='image/jpg, image/jpeg, image/png, image/svg+xml, image/svg'\n        className='d-none'\n      />\n      <MainContainer responsive className='chat-container rounded'>\n        <Sidebar position='left' scrollable={false} className='chat-sidebar'>\n          <ConversationList>\n            {chats\n              .filter((item) => item.user.id !== undefined)\n              .map((chat, idx) => {\n                return (\n                  <Conversation\n                    onClick={() => {\n                      handleChatClick(chat);\n                    }}\n                    key={idx}\n                    name={\n                      chat.user.firstname + ' ' + (chat.user.lastname || '')\n                    }\n                    info={chat.lastMessage}\n                  >\n                    <Avatar\n                      src={getAvatar(chat.user?.img)}\n                      name={chat.user?.firstname}\n                    />\n                  </Conversation>\n                );\n              })}\n          </ConversationList>\n        </Sidebar>\n\n        <ChatContainer className='chat-container'>\n          {currentChat ? (\n            <ConversationHeader className='chat-header'>\n              <ConversationHeader.Back />\n              <Avatar\n                src={getAvatar(currentChat?.user?.img)}\n                name={currentChat?.user?.firstname}\n              />\n              <ConversationHeader.Content\n                userName={`${currentChat?.user?.firstname} ${\n                  currentChat?.user?.lastname || ''\n                }`}\n              />\n              {/*  <ConversationHeader.Actions>*/}\n              {/*      <Dropdown*/}\n              {/*          overlay={<Menu*/}\n              {/*              items={[{*/}\n              {/*                  key: '1',*/}\n              {/*                  label: <div>{t('delete.chat')}</div>,*/}\n              {/*                  icon: <DeleteOutlined/>,*/}\n              {/*                  onClick: () => setIsModalVisible(true),*/}\n              {/*              },]}*/}\n              {/*          />}*/}\n              {/*      >*/}\n              {/*<span className='more-btn'>*/}\n              {/*  <MoreOutlined style={{fontSize: 22}}/>*/}\n              {/*</span>*/}\n              {/*      </Dropdown>*/}\n              {/*  </ConversationHeader.Actions>*/}\n            </ConversationHeader>\n          ) : (\n            ''\n          )}\n          <MessageList loading={messagesLoading} className='message-list'>\n            <Channel\n              groupMessages={groupMessages}\n              messageEndRef={messageEndRef}\n              handleActionMessage={handleActionMessage}\n              handleDelete={handleDelete}\n            />\n            {actionMessage.message && (\n              <MessageActionIndicator\n                actionMessage={actionMessage}\n                cancelMessageAction={clearActionMessage}\n              />\n            )}\n          </MessageList>\n          {groupMessages.length ? (\n            <MessageInput\n              ref={inputRef}\n              value={newMessage}\n              onChange={handleOnChange}\n              onSend={(inputVal) =>\n                handleOnSubmit({\n                  message: inputVal\n                    .replace(/\\&nbsp;/g, '')\n                    .replace(/<[^>]+>/g, '')\n                    .trim(),\n                })\n              }\n              placeholder='Message'\n              className='chat-input'\n              onAttachClick={onAttachClick}\n            />\n          ) : null}\n        </ChatContainer>\n      </MainContainer>\n      <UploadMedia\n        modal={modal}\n        url={url}\n        setModal={setModal}\n        file={file}\n        handleOnSubmit={handleOnSubmit}\n      />\n      <CustomModal click={deleteCurrentChat} text={t('delete.chat')} />\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}