{"ast":null,"code":"import React,{useEffect,useState}from'react';import{steps}from'./steps';import{Card,Spin,Steps}from'antd';import ProductProperty from'./product-property';import ProductFinish from'./product-finish';import ProductStock from'./product-stock';import ProductExtras from'./product-extras';import ProductsIndex from'./products-index';import LanguageList from'../../../components/language-list';import{useParams}from'react-router-dom';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{removeFromMenu,disableRefetch,setMenuData}from'../../../redux/slices/menu';import{useTranslation}from'react-i18next';import{useQueryParams}from'../../../helpers/useQueryParams';import requestModelsService from'services/seller/request-models';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const{Step}=Steps;const SellerProductRequestEdit=()=>{var _queryParams$values;const{t}=useTranslation();const{id}=useParams();const queryParams=useQueryParams();const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const dispatch=useDispatch();const current=Number(((_queryParams$values=queryParams.values)===null||_queryParams$values===void 0?void 0:_queryParams$values.step)||0);const[loading,setLoading]=useState(activeMenu.refetch);const next=()=>{const step=current+1;queryParams.set('step',step);};const prev=()=>{const step=current-1;queryParams.set('step',step);};function fetchProductRequest(alias){setLoading(true);requestModelsService.getById(alias).then(res=>{var _res$data$model,_res$data$model2;let request=res.data.data;dispatch(setMenuData({activeMenu,data:{...request,request_id:res.data.id,actualStocks:(_res$data$model=res.data.model)===null||_res$data$model===void 0?void 0:_res$data$model.stocks,model_id:(_res$data$model2=res.data.model)===null||_res$data$model2===void 0?void 0:_res$data$model2.id,model:res.data.model}}));}).finally(()=>{setLoading(false);dispatch(disableRefetch(activeMenu));});}useEffect(()=>{if(activeMenu.refetch){fetchProductRequest(id);}},[activeMenu.refetch]);const onChange=step=>{dispatch(setMenuData({activeMenu,data:{...activeMenu.data,step}}));queryParams.set('step',step);};useEffect(()=>{return()=>{const nextUrl='seller/products';dispatch(removeFromMenu({...activeMenu,nextUrl}));};},[]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{title:t('edit.food'),extra:/*#__PURE__*/_jsx(LanguageList,{}),children:/*#__PURE__*/_jsx(Steps,{current:current,onChange:onChange,children:steps.map(item=>/*#__PURE__*/_jsx(Step,{title:t(item.title)},item.title))})}),!loading?/*#__PURE__*/_jsxs(\"div\",{className:\"\",children:[steps[current].content==='First-content'&&/*#__PURE__*/_jsx(ProductsIndex,{isRequest:true,next:next,action_type:'edit'}),steps[current].content==='Second-content'&&/*#__PURE__*/_jsx(ProductExtras,{isRequest:true,next:next,prev:prev}),steps[current].content==='Third-content'&&/*#__PURE__*/_jsx(ProductStock,{isRequest:true,next:next,prev:prev}),steps[current].content==='Fourth-content'&&/*#__PURE__*/_jsx(ProductProperty,{isRequest:true,next:next,prev:prev}),steps[current].content==='Finish-content'&&/*#__PURE__*/_jsx(ProductFinish,{isRequest:true,prev:prev})]}):/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center\",children:/*#__PURE__*/_jsx(Spin,{size:\"large\",className:\"py-5\"})})]});};export default SellerProductRequestEdit;","map":null,"metadata":{},"sourceType":"module"}