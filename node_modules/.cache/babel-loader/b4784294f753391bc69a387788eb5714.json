{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/report/chart.js\",\n    _s = $RefreshSig$();\n\nimport { Card, Col, Row, Space, Typography, Divider, Select } from 'antd';\nimport React, { useMemo } from 'react';\nimport { LineChartOutlined, BarChartOutlined } from '@ant-design/icons';\nimport ChartWidget from '../chart-widget';\nimport { COLORS } from '../../constants/ChartConstant';\nimport { useTranslation } from 'react-i18next';\nimport { useContext } from 'react';\nimport { ReportContext } from '../../context/report';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst {\n  Title\n} = Typography;\n\nconst ReportChart = _ref => {\n  _s();\n\n  let {\n    reportData = {}\n  } = _ref;\n  const {\n    by_time,\n    options,\n    handleByTime,\n    chart_type,\n    setChartType\n  } = useContext(ReportContext);\n  const {\n    t\n  } = useTranslation();\n  const categories = useMemo(() => {\n    var _reportData$chart;\n\n    return reportData === null || reportData === void 0 ? void 0 : (_reportData$chart = reportData.chart) === null || _reportData$chart === void 0 ? void 0 : _reportData$chart.map(item => item.time);\n  }, [reportData === null || reportData === void 0 ? void 0 : reportData.chart]);\n  const chartData = useMemo(() => {\n    var _reportData$chart2;\n\n    if (Boolean(reportData.charts)) {\n      return reportData.charts.map(item => {\n        var _item$stocks;\n\n        return {\n          name: item.translation.title,\n          data: ((_item$stocks = item.stocks) === null || _item$stocks === void 0 ? void 0 : _item$stocks.map(item => item.total_order_quantity || item.avg_quantity || item.quantity || item.count || item.price || item.order_details_sum_quantity || 0)) || []\n        };\n      });\n    } else return [{\n      name: t('orders'),\n      data: (reportData === null || reportData === void 0 ? void 0 : (_reportData$chart2 = reportData.chart) === null || _reportData$chart2 === void 0 ? void 0 : _reportData$chart2.map(item => parseInt(item.count || item.total_price || item.quantity || item.price || item.products_count || item.order_details_avg_quantity || item.order_details_avg_total_price || item.order_details_sum_quantity || item.avg_price || item.avg_quantity || 0, 10))) || []\n    }];\n  }, [reportData === null || reportData === void 0 ? void 0 : reportData.chart]);\n  return /*#__PURE__*/_jsxDEV(Row, {\n    gutter: 24,\n    children: /*#__PURE__*/_jsxDEV(Col, {\n      span: 24,\n      children: /*#__PURE__*/_jsxDEV(Card, {\n        children: [/*#__PURE__*/_jsxDEV(Row, {\n          gutter: 24,\n          className: \"w-100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex justify-content-between w-100\",\n            children: [/*#__PURE__*/_jsxDEV(Space, {\n              size: \"large\",\n              className: \"d-flex\",\n              children: /*#__PURE__*/_jsxDEV(Title, {\n                level: 3,\n                className: \"mb-0\",\n                children: t('item.sold')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex\",\n              children: [/*#__PURE__*/_jsxDEV(Select, {\n                style: {\n                  width: 100\n                },\n                onChange: handleByTime,\n                options: options,\n                defaultValue: by_time\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {\n                type: \"vertical\",\n                style: {\n                  height: '100%'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Space, {\n                children: [/*#__PURE__*/_jsxDEV(LineChartOutlined, {\n                  style: {\n                    fontSize: '22px',\n                    cursor: 'pointer',\n                    color: chart_type === 'area' ? 'green' : ''\n                  },\n                  onClick: () => setChartType('area')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(BarChartOutlined, {\n                  style: {\n                    fontSize: '22px',\n                    cursor: 'pointer',\n                    color: chart_type === 'bar' ? 'green' : ''\n                  },\n                  onClick: () => setChartType('bar')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartWidget, {\n          type: chart_type || \"area\",\n          card: false,\n          series: chartData,\n          xAxis: categories,\n          height: 280,\n          customOptions: {\n            colors: [COLORS[1], COLORS[2], COLORS[3], COLORS[4], COLORS[5], COLORS[6], COLORS[0]],\n            legend: {\n              show: false\n            },\n            stroke: {\n              width: 2.5,\n              curve: 'smooth'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ReportChart, \"Nag0naCRHJoLaWh44B8pLqQWab0=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ReportChart;\nexport default ReportChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportChart\");","map":{"version":3,"names":["Card","Col","Row","Space","Typography","Divider","Select","React","useMemo","LineChartOutlined","BarChartOutlined","ChartWidget","COLORS","useTranslation","useContext","ReportContext","Title","ReportChart","reportData","by_time","options","handleByTime","chart_type","setChartType","t","categories","chart","map","item","time","chartData","Boolean","charts","name","translation","title","data","stocks","total_order_quantity","avg_quantity","quantity","count","price","order_details_sum_quantity","parseInt","total_price","products_count","order_details_avg_quantity","order_details_avg_total_price","avg_price","width","height","fontSize","cursor","color","colors","legend","show","stroke","curve"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/report/chart.js"],"sourcesContent":["import { Card, Col, Row, Space, Typography, Divider, Select } from 'antd';\nimport React, { useMemo } from 'react';\nimport { LineChartOutlined, BarChartOutlined } from '@ant-design/icons';\nimport ChartWidget from '../chart-widget';\nimport { COLORS } from '../../constants/ChartConstant';\nimport { useTranslation } from 'react-i18next';\nimport { useContext } from 'react';\nimport { ReportContext } from '../../context/report';\nconst { Title } = Typography;\n\nconst ReportChart = ({ reportData = {} }) => {\n  const { by_time, options, handleByTime, chart_type, setChartType } =\n    useContext(ReportContext);\n  const { t } = useTranslation();\n  const categories = useMemo(\n    () => reportData?.chart?.map((item) => item.time),\n    [reportData?.chart]\n  );\n\n  const chartData = useMemo(() => {\n    if (Boolean(reportData.charts)) {\n      return reportData.charts.map((item) => {\n        return {\n          name: item.translation.title,\n          data: item.stocks?.map(\n            (item) =>\n              item.total_order_quantity ||\n              item.avg_quantity ||\n              item.quantity ||\n              item.count ||\n              item.price ||\n              item.order_details_sum_quantity ||\n              0\n          ) || [],\n        };\n      });\n    } else\n      return [\n        {\n          name: t('orders'),\n          data: reportData?.chart?.map(\n            (item) => \n              parseInt(item.count ||\n              item.total_price ||\n              item.quantity ||\n              item.price ||\n              item.products_count ||\n              item.order_details_avg_quantity ||\n              item.order_details_avg_total_price ||\n              item.order_details_sum_quantity ||\n              item.avg_price ||\n              item.avg_quantity ||\n              0, 10)\n          ) || [],\n        },\n      ];\n  }, [reportData?.chart]);\n\n  return (\n    <Row gutter={24}>\n      <Col span={24}>\n        <Card>\n          <Row gutter={24} className='w-100'>\n            <div className='d-flex justify-content-between w-100'>\n              <Space size='large' className='d-flex'>\n                <Title level={3} className='mb-0'>\n                  {t('item.sold')}\n                </Title>\n              </Space>\n\n              <div className='d-flex'>\n                <Select\n                  style={{ width: 100 }}\n                  onChange={handleByTime}\n                  options={options}\n                  defaultValue={by_time}\n                />\n\n                <Divider type='vertical' style={{ height: '100%' }} />\n                <Space>\n                  <LineChartOutlined\n                    style={{\n                      fontSize: '22px',\n                      cursor: 'pointer',\n                      color: chart_type === 'area' ? 'green' : '',\n                    }}\n                    onClick={() => setChartType('area')}\n                  />\n                  <BarChartOutlined\n                    style={{\n                      fontSize: '22px',\n                      cursor: 'pointer',\n                      color: chart_type === 'bar' ? 'green' : '',\n                    }}\n                    onClick={() => setChartType('bar')}\n                  />\n                </Space>\n              </div>\n            </div>\n          </Row>\n          <Divider />\n          <ChartWidget\n            type={chart_type || \"area\"}\n            card={false}\n            series={chartData}\n            xAxis={categories}\n            height={280}\n            customOptions={{\n              colors: [\n                COLORS[1],\n                COLORS[2],\n                COLORS[3],\n                COLORS[4],\n                COLORS[5],\n                COLORS[6],\n                COLORS[0],\n              ],\n              legend: {\n                show: false,\n              },\n              stroke: {\n                width: 2.5,\n                curve: 'smooth',\n              },\n            }}\n          />\n        </Card>\n      </Col>\n    </Row>\n  );\n};\n\nexport default ReportChart;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}