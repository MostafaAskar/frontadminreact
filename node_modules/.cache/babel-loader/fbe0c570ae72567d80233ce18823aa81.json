{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Button,Form,Input,Modal,Select}from'antd';import{useTranslation}from'react-i18next';import LanguageList from'components/language-list';import{shallowEqual,useDispatch,useSelector}from'react-redux';import extraService from'services/seller/extras';import{toast}from'react-toastify';import{fetchSellerExtraGroups}from'redux/slices/extraGroup';import getTranslationFields from'helpers/getTranslationFields';import Loading from'components/loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";export default function ExtraGroupModal(_ref){let{modal,handleCancel,onSuccess}=_ref;const[form]=Form.useForm();const{t}=useTranslation();const dispatch=useDispatch();const[loadingBtn,setLoadingBtn]=useState(false);const[loading,setLoading]=useState(false);const{languages,defaultLang}=useSelector(state=>state.formLang,shallowEqual);function fetchExtraGroup(id){setLoading(true);extraService.getGroupById(id).then(res=>{const data=res.data;form.setFieldsValue({...data,...getLanguageFields(data)});}).finally(()=>setLoading(false));}useEffect(()=>{if(modal!==null&&modal!==void 0&&modal.id){fetchExtraGroup(modal.id);}dispatch(fetchSellerExtraGroups());},[modal]);function createExtraGroup(body){setLoadingBtn(true);extraService.createGroup(body).then(()=>{toast.success(t('successfully.created'));handleCancel();dispatch(fetchSellerExtraGroups());!!onSuccess&&onSuccess();}).finally(()=>setLoadingBtn(false));}const onFinish=values=>{const body={title:getTranslationFields(languages,values),type:values===null||values===void 0?void 0:values.type};if(modal!==null&&modal!==void 0&&modal.id){updateExtraGroup(modal===null||modal===void 0?void 0:modal.id,body);}else{createExtraGroup(body);}};function updateExtraGroup(id,body){setLoadingBtn(true);extraService.updateGroup(id,body).then(()=>{toast.success(t('successfully.updated'));dispatch(fetchSellerExtraGroups());handleCancel();}).finally(()=>setLoadingBtn(false));}function getLanguageFields(data){if(!data){return{};}const{translations}=data;const result=languages.map(item=>{var _translations$find;return{[`title[${item.locale}]`]:(_translations$find=translations.find(el=>el.locale===item.locale))===null||_translations$find===void 0?void 0:_translations$find.title};});return Object.assign({},...result);}return/*#__PURE__*/_jsx(Modal,{title:modal!==null&&modal!==void 0&&modal.id?t('edit.extra.group'):t('add.extra.group'),visible:!!modal,onCancel:handleCancel,footer:[/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>form.submit(),loading:loadingBtn,children:t('save')},'save-button-group'),/*#__PURE__*/_jsx(Button,{type:\"default\",onClick:handleCancel,children:t('cancel')},'cancel-button-group')],children:!loading?/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-end\",children:/*#__PURE__*/_jsx(LanguageList,{})}),/*#__PURE__*/_jsxs(Form,{layout:\"vertical\",name:\"extra-group\",form:form,onFinish:onFinish,children:[languages.map(item=>/*#__PURE__*/_jsx(Form.Item,{rules:[{required:item.locale===defaultLang,message:t('required')}],name:`title[${item.locale}]`,label:t('title'),hidden:item.locale!==defaultLang,children:/*#__PURE__*/_jsx(Input,{placeholder:t('title')})},'title'+item.locale)),/*#__PURE__*/_jsx(Form.Item,{name:\"type\",label:t('type'),rules:[{required:true,message:t('required')}],children:/*#__PURE__*/_jsxs(Select,{style:{width:'100%'},placeholder:t('select.extra.type'),children:[/*#__PURE__*/_jsx(Select.Option,{value:\"color\",children:t('color')}),/*#__PURE__*/_jsx(Select.Option,{value:\"text\",children:t('text')})]})})]})]}):/*#__PURE__*/_jsx(Loading,{})});}","map":null,"metadata":{},"sourceType":"module"}