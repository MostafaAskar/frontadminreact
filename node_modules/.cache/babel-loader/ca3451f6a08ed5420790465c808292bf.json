{"ast":null,"code":"var _excluded = [\"name\", \"src\", \"size\", \"status\", \"className\", \"active\", \"children\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React, { useRef, forwardRef, useImperativeHandle } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { prefix } from \"../settings\";\nimport classNames from \"classnames\";\nimport { Status } from \"../Status/Status\";\nimport { SizeEnum, StatusEnum } from \"../enums\";\n\nfunction AvatarInner(_ref, ref) {\n  var name = _ref.name,\n      src = _ref.src,\n      size = _ref.size,\n      status = _ref.status,\n      className = _ref.className,\n      active = _ref.active,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var cName = \"\".concat(prefix, \"-avatar\");\n  var sizeClass = typeof size !== \"undefined\" ? \" \".concat(cName, \"--\").concat(size) : \"\";\n  var avatarRef = useRef();\n  useImperativeHandle(ref, function () {\n    return {\n      focus: function focus() {\n        return avatarRef.current.focus();\n      }\n    };\n  });\n  return /*#__PURE__*/React.createElement(\"div\", _extends({\n    ref: avatarRef\n  }, rest, {\n    className: classNames(\"\".concat(cName).concat(sizeClass), _defineProperty({}, \"\".concat(cName, \"--active\"), active), className)\n  }), children ? children : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"img\", {\n    src: src,\n    alt: name\n  }), typeof status === \"string\" && /*#__PURE__*/React.createElement(Status, {\n    status: status,\n    size: size\n  }), \" \"));\n}\n\nvar Avatar = /*#__PURE__*/forwardRef(AvatarInner);\nAvatar.displayName = \"Avatar\";\nAvatar.propTypes = {\n  /** Primary content */\n  children: PropTypes.node,\n\n  /**\n   * User name/nickname/full name for displaying initials and image alt description\n   */\n  name: PropTypes.string,\n\n  /** Avatar image source */\n  src: PropTypes.string,\n\n  /** Size */\n  size: PropTypes.oneOf(SizeEnum),\n\n  /** Status. */\n  status: PropTypes.oneOf(StatusEnum),\n\n  /** Active */\n  active: PropTypes.bool,\n\n  /** Additional classes. */\n  className: PropTypes.string\n};\nprocess.env.NODE_ENV !== \"production\" ? AvatarInner.propTypes = Avatar.propTypes : void 0;\nAvatarInner.defaultProps = {\n  name: \"\",\n  src: \"\",\n  size: \"md\",\n  active: false\n};\nAvatar.defaultProps = AvatarInner.defaultProps;\nexport { Avatar };\nexport default Avatar;","map":null,"metadata":{},"sourceType":"module"}