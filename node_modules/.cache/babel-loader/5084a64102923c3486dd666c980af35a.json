{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport smsService from '../../services/smsPayloads';\nconst initialState = {\n  loading: false,\n  smsGatewaysList: [],\n  error: '',\n  meta: {}\n};\nexport const fetchSms = createAsyncThunk('sms/fetchSms', params => {\n  return smsService.getAll(params).then(res => res);\n});\nconst sms = createSlice({\n  name: 'sms',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchSms.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSms.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      console.log('payload', payload);\n      state.loading = false;\n      state.smsGatewaysList = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchSms.rejected, (state, action) => {\n      state.loading = false;\n      state.smsGatewaysList = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport default sms.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","smsService","initialState","loading","smsGatewaysList","error","meta","fetchSms","params","getAll","then","res","sms","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","console","log","data","rejected","message","reducer"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/redux/slices/sms-geteways.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport smsService from '../../services/smsPayloads';\n\nconst initialState = {\n  loading: false,\n  smsGatewaysList: [],\n  error: '',\n  meta: {},\n};\n\nexport const fetchSms = createAsyncThunk('sms/fetchSms', (params) => {\n  return smsService.getAll(params).then((res) => res);\n});\n\nconst sms = createSlice({\n  name: 'sms',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchSms.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSms.fulfilled, (state, action) => {\n      const { payload } = action;\n      console.log('payload', payload);\n      state.loading = false;\n      state.smsGatewaysList = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchSms.rejected, (state, action) => {\n      state.loading = false;\n      state.smsGatewaysList = [];\n      state.error = action.error.message;\n    });\n  },\n});\n\nexport default sms.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,eAAe,EAAE,EAFE;EAGnBC,KAAK,EAAE,EAHY;EAInBC,IAAI,EAAE;AAJa,CAArB;AAOA,OAAO,MAAMC,QAAQ,GAAGP,gBAAgB,CAAC,cAAD,EAAkBQ,MAAD,IAAY;EACnE,OAAOP,UAAU,CAACQ,MAAX,CAAkBD,MAAlB,EAA0BE,IAA1B,CAAgCC,GAAD,IAASA,GAAxC,CAAP;AACD,CAFuC,CAAjC;AAIP,MAAMC,GAAG,GAAGb,WAAW,CAAC;EACtBc,IAAI,EAAE,KADgB;EAEtBX,YAFsB;EAGtBY,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBT,QAAQ,CAACU,OAAzB,EAAmCC,KAAD,IAAW;MAC3CA,KAAK,CAACf,OAAN,GAAgB,IAAhB;IACD,CAFD;IAGAY,OAAO,CAACC,OAAR,CAAgBT,QAAQ,CAACY,SAAzB,EAAoC,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACrD,MAAM;QAAEC;MAAF,IAAcD,MAApB;MACAE,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBF,OAAvB;MACAH,KAAK,CAACf,OAAN,GAAgB,KAAhB;MACAe,KAAK,CAACd,eAAN,GAAwBiB,OAAO,CAACG,IAAhC;MACAN,KAAK,CAACb,KAAN,GAAc,EAAd;IACD,CAND;IAOAU,OAAO,CAACC,OAAR,CAAgBT,QAAQ,CAACkB,QAAzB,EAAmC,CAACP,KAAD,EAAQE,MAAR,KAAmB;MACpDF,KAAK,CAACf,OAAN,GAAgB,KAAhB;MACAe,KAAK,CAACd,eAAN,GAAwB,EAAxB;MACAc,KAAK,CAACb,KAAN,GAAce,MAAM,CAACf,KAAP,CAAaqB,OAA3B;IACD,CAJD;EAKD;AAnBqB,CAAD,CAAvB;AAsBA,eAAed,GAAG,CAACe,OAAnB"},"metadata":{},"sourceType":"module"}