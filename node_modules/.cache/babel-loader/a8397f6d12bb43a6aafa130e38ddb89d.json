{"ast":null,"code":"var _excluded = [\"children\", \"className\", \"icon\", \"border\", \"labelPosition\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { prefix } from \"../settings\";\nexport var Button = function Button(_ref) {\n  var children = _ref.children,\n      className = _ref.className,\n      icon = _ref.icon,\n      border = _ref.border,\n      labelPosition = _ref.labelPosition,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var cName = \"\".concat(prefix, \"-button\");\n  var lPos = typeof labelPosition !== \"undefined\" ? labelPosition : \"right\";\n  var labelPositionClassName = React.Children.count(children) > 0 ? \"\".concat(cName, \"--\").concat(lPos) : \"\";\n  var borderClassName = border === true ? \"\".concat(cName, \"--border\") : \"\";\n  return /*#__PURE__*/React.createElement(\"button\", _extends({}, rest, {\n    className: classNames(cName, labelPositionClassName, borderClassName, className)\n  }), lPos === \"left\" && children, icon, lPos === \"right\" && children);\n};\nprocess.env.NODE_ENV !== \"production\" ? Button.propTypes = {\n  /** Primary content */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n  icon: PropTypes.node,\n  labelPosition: PropTypes.oneOf([\"left\", \"right\"]),\n  border: PropTypes.bool\n} : void 0;\nButton.defaultProps = {\n  children: undefined,\n  className: \"\",\n  icon: undefined,\n  labelPosition: undefined,\n  border: false\n};\nexport default Button;","map":null,"metadata":{},"sourceType":"module"}