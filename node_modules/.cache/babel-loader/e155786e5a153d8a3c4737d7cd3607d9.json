{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/message-subscribers/textEditor.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Form } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { IMG_URL } from '../../configs/app-global';\nimport galleryService from '../../services/gallery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TextEditor(_ref) {\n  _s();\n\n  let {\n    form,\n    lang,\n    languages\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n\n  function uploadAdapter(loader) {\n    return {\n      upload: () => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          loader.file.then(file => {\n            formData.append('image', file);\n            formData.append('type', 'blogs');\n            galleryService.upload(formData).then(_ref2 => {\n              let {\n                data\n              } = _ref2;\n              resolve({\n                default: `${IMG_URL + data.title}`\n              });\n            }).catch(err => {\n              reject(err);\n            });\n          });\n        });\n      }\n    };\n  }\n\n  function uploadPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = loader => {\n      return uploadAdapter(loader);\n    };\n  }\n\n  const handleChange = (e, editor) => {\n    const data = editor.getData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"textEditor\",\n    children: /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('newsletter.content'),\n      name: 'body',\n      valuePropName: \"data\",\n      getValueFromEvent: (event, editor) => {\n        const data = editor.getData();\n        return data;\n      },\n      rules: [{\n        required: true,\n        message: t('required')\n      }],\n      className: \"description-editor\",\n      children: /*#__PURE__*/_jsxDEV(CKEditor, {\n        editor: ClassicEditor,\n        config: {\n          extraPlugins: [uploadPlugin]\n        },\n        onChange: handleChange,\n        onBlur: (event, editor) => {\n          const data = editor.getData();\n          form.setFieldsValue({\n            body: data\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TextEditor, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = TextEditor;\n\nvar _c;\n\n$RefreshReg$(_c, \"TextEditor\");","map":{"version":3,"names":["React","Form","useTranslation","CKEditor","ClassicEditor","IMG_URL","galleryService","TextEditor","form","lang","languages","t","uploadAdapter","loader","upload","Promise","resolve","reject","formData","FormData","file","then","append","data","default","title","catch","err","uploadPlugin","editor","plugins","get","createUploadAdapter","handleChange","e","getData","event","required","message","extraPlugins","setFieldsValue","body"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/message-subscribers/textEditor.js"],"sourcesContent":["import React from 'react';\nimport { Form } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { IMG_URL } from '../../configs/app-global';\nimport galleryService from '../../services/gallery';\n\nexport default function TextEditor({ form, lang, languages }) {\n  const { t } = useTranslation();\n\n  function uploadAdapter(loader) {\n    return {\n      upload: () => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          loader.file.then((file) => {\n            formData.append('image', file);\n            formData.append('type', 'blogs');\n            galleryService\n              .upload(formData)\n              .then(({ data }) => {\n                resolve({\n                  default: `${IMG_URL + data.title}`,\n                });\n              })\n              .catch((err) => {\n                reject(err);\n              });\n          });\n        });\n      },\n    };\n  }\n\n  function uploadPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n      return uploadAdapter(loader);\n    };\n  }\n\n  const handleChange = (e, editor) => {\n    const data = editor.getData();\n  };\n\n  return (\n    <div className='textEditor'>\n      <Form.Item\n        label={t('newsletter.content')}\n        name={'body'}\n        valuePropName='data'\n        getValueFromEvent={(event, editor) => {\n          const data = editor.getData();\n          return data;\n        }}\n        rules={[\n          {\n            required: true,\n            message: t('required'),\n          },\n        ]}\n        className='description-editor'\n      >\n        <CKEditor\n          editor={ClassicEditor}\n          config={{\n            extraPlugins: [uploadPlugin],\n          }}\n          onChange={handleChange}\n          onBlur={(event, editor) => {\n            const data = editor.getData();\n            form.setFieldsValue({\n              body: data,\n            });\n          }}\n        />\n      </Form.Item>\n    </div>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,SAASC,cAAT,QAA+B,eAA/B;AACA,SAASC,QAAT,QAAyB,2BAAzB;AACA,OAAOC,aAAP,MAA0B,mCAA1B;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,OAAOC,cAAP,MAA2B,wBAA3B;;AAEA,eAAe,SAASC,UAAT,OAA+C;EAAA;;EAAA,IAA3B;IAAEC,IAAF;IAAQC,IAAR;IAAcC;EAAd,CAA2B;EAC5D,MAAM;IAAEC;EAAF,IAAQT,cAAc,EAA5B;;EAEA,SAASU,aAAT,CAAuBC,MAAvB,EAA+B;IAC7B,OAAO;MACLC,MAAM,EAAE,MAAM;QACZ,OAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;UACtC,MAAMC,QAAQ,GAAG,IAAIC,QAAJ,EAAjB;UACAN,MAAM,CAACO,IAAP,CAAYC,IAAZ,CAAkBD,IAAD,IAAU;YACzBF,QAAQ,CAACI,MAAT,CAAgB,OAAhB,EAAyBF,IAAzB;YACAF,QAAQ,CAACI,MAAT,CAAgB,MAAhB,EAAwB,OAAxB;YACAhB,cAAc,CACXQ,MADH,CACUI,QADV,EAEGG,IAFH,CAEQ,SAAc;cAAA,IAAb;gBAAEE;cAAF,CAAa;cAClBP,OAAO,CAAC;gBACNQ,OAAO,EAAG,GAAEnB,OAAO,GAAGkB,IAAI,CAACE,KAAM;cAD3B,CAAD,CAAP;YAGD,CANH,EAOGC,KAPH,CAOUC,GAAD,IAAS;cACdV,MAAM,CAACU,GAAD,CAAN;YACD,CATH;UAUD,CAbD;QAcD,CAhBM,CAAP;MAiBD;IAnBI,CAAP;EAqBD;;EAED,SAASC,YAAT,CAAsBC,MAAtB,EAA8B;IAC5BA,MAAM,CAACC,OAAP,CAAeC,GAAf,CAAmB,gBAAnB,EAAqCC,mBAArC,GAA4DnB,MAAD,IAAY;MACrE,OAAOD,aAAa,CAACC,MAAD,CAApB;IACD,CAFD;EAGD;;EAED,MAAMoB,YAAY,GAAG,CAACC,CAAD,EAAIL,MAAJ,KAAe;IAClC,MAAMN,IAAI,GAAGM,MAAM,CAACM,OAAP,EAAb;EACD,CAFD;;EAIA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACE,QAAC,IAAD,CAAM,IAAN;MACE,KAAK,EAAExB,CAAC,CAAC,oBAAD,CADV;MAEE,IAAI,EAAE,MAFR;MAGE,aAAa,EAAC,MAHhB;MAIE,iBAAiB,EAAE,CAACyB,KAAD,EAAQP,MAAR,KAAmB;QACpC,MAAMN,IAAI,GAAGM,MAAM,CAACM,OAAP,EAAb;QACA,OAAOZ,IAAP;MACD,CAPH;MAQE,KAAK,EAAE,CACL;QACEc,QAAQ,EAAE,IADZ;QAEEC,OAAO,EAAE3B,CAAC,CAAC,UAAD;MAFZ,CADK,CART;MAcE,SAAS,EAAC,oBAdZ;MAAA,uBAgBE,QAAC,QAAD;QACE,MAAM,EAAEP,aADV;QAEE,MAAM,EAAE;UACNmC,YAAY,EAAE,CAACX,YAAD;QADR,CAFV;QAKE,QAAQ,EAAEK,YALZ;QAME,MAAM,EAAE,CAACG,KAAD,EAAQP,MAAR,KAAmB;UACzB,MAAMN,IAAI,GAAGM,MAAM,CAACM,OAAP,EAAb;UACA3B,IAAI,CAACgC,cAAL,CAAoB;YAClBC,IAAI,EAAElB;UADY,CAApB;QAGD;MAXH;QAAA;QAAA;QAAA;MAAA;IAhBF;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAkCD;;GAvEuBhB,U;UACRL,c;;;KADQK,U"},"metadata":{},"sourceType":"module"}