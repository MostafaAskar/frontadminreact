{"ast":null,"code":"import React,{useContext,useEffect,useRef,useState}from'react';import'@chatscope/chat-ui-kit-styles/dist/default/styles.min.css';import{Sidebar,MainContainer,ChatContainer,MessageList,MessageInput,Avatar,ConversationList,Conversation,ConversationHeader}from'@chatscope/chat-ui-kit-react';import Channel from'./channel';import{deleteChat,deleteMessage,editMessage,fetchMessages,getChat,sendMessage}from'../../firebase';import{batch,shallowEqual,useDispatch,useSelector}from'react-redux';import{removeCurrentChat,setAuthUserId,setChatInitialized,setChats,setCurrentChat,setMessages,setMessagesLoading,setUnsubscriber}from'../../redux/slices/chat';import{getMessages}from'../../redux/selectors/chatSelector';import{scrollTo}from'../../helpers/scrollTo';import{useTranslation}from'react-i18next';// import {DeleteOutlined, MoreOutlined} from '@ant-design/icons';\n// import {Dropdown, Menu} from 'antd';\nimport CustomModal from'../../components/modal';import{Context}from'../../context/context';import getAvatar from'../../helpers/getAvatar';import UploadMedia from'./upload-media';import{toast}from'react-toastify';import{SUPPORTED_FORMATS}from'../../configs/app-global';import MessageActionIndicator from'./message-action-indicator';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";let chatUnsubscribe;export default function Chat(){var _currentChat$user,_currentChat$user2,_currentChat$user3,_currentChat$user4;const{t}=useTranslation();const inputRef=useRef();const nextRef=useRef();const dispatch=useDispatch();const messageEndRef=useRef();const{setIsModalVisible}=useContext(Context);const[file,setFile]=useState('');const[url,setUrl]=useState('');const[modal,setModal]=useState(false);const currentUserId=useSelector(state=>state.auth.user.id);const{chats,currentChat,messagesLoading,chatInitialized,authUserId}=useSelector(state=>state.chat,shallowEqual);const groupMessages=useSelector(state=>getMessages(state.chat.messages),shallowEqual);const[newMessage,setNewMessage]=useState('');const[actionMessage,setActionMessage]=useState({actionType:null,message:null});const messageUnsubscribeRef=useRef();useEffect(()=>{if(inputRef.current){inputRef.current.focus();}},[inputRef,currentChat]);useEffect(()=>{if(!chatInitialized){var _chatUnsubscribe;(_chatUnsubscribe=chatUnsubscribe)===null||_chatUnsubscribe===void 0?void 0:_chatUnsubscribe();chatUnsubscribe=getChat(currentUserId);batch(()=>{dispatch(setAuthUserId(currentUserId));dispatch(setChatInitialized(true));});}else if(currentUserId!==authUserId){var _chatUnsubscribe2;(_chatUnsubscribe2=chatUnsubscribe)===null||_chatUnsubscribe2===void 0?void 0:_chatUnsubscribe2();batch(()=>{dispatch(removeCurrentChat());dispatch(setChats([]));dispatch(setMessages([]));dispatch(setAuthUserId(currentUserId));});chatUnsubscribe=getChat(currentUserId);}},[currentUserId]);const handleOnChange=value=>{setNewMessage(value);};const scrollToBottom=()=>{const topPosition=messageEndRef.current.offsetTop;const container=document.querySelector('.message-list .scrollbar-container');scrollTo(container,topPosition-30,600);};const handleOnSubmit=async data=>{setNewMessage('');if(actionMessage.actionType==='reply')data.replyDocId=actionMessage.message.id;if(actionMessage.actionType==='edit'){await editMessage(currentUserId,currentChat.chatId,data,actionMessage);}else{scrollToBottom();await sendMessage(currentUserId,currentChat.chatId,data);}clearActionMessage();};const handleChatClick=chat=>{if(messageUnsubscribeRef.current)messageUnsubscribeRef.current();batch(()=>{dispatch(setMessagesLoading(true));dispatch(setCurrentChat(chat));});messageUnsubscribeRef.current=fetchMessages(chat.chatId,currentUserId);clearActionMessage();};const deleteCurrentChat=async()=>{var _messageUnsubscribeRe;await deleteChat(currentChat.chatId);groupMessages.forEach(group=>{group.messages.forEach(item=>deleteMessage(currentChat.chatId,item.id));});(_messageUnsubscribeRe=messageUnsubscribeRef.current)===null||_messageUnsubscribeRe===void 0?void 0:_messageUnsubscribeRe.call(messageUnsubscribeRef);batch(()=>{dispatch(removeCurrentChat());dispatch(setMessages([]));});setIsModalVisible(false);clearActionMessage();};function handleFile(event){if(!SUPPORTED_FORMATS.includes(event.target.files[0].type)){toast.error('Supported only image formats!');}else{setFile(event.target.files[0]);const reader=new FileReader();reader.onload=()=>{if(reader.readyState===2){setUrl(reader.result);setModal(true);}};reader===null||reader===void 0?void 0:reader.readAsDataURL(event.target.files[0]);}}const onAttachClick=()=>{nextRef.current.click();};const clearActionMessage=()=>{var _inputRef$current;setActionMessage({actionType:null,message:null});if(newMessage)setNewMessage('');(_inputRef$current=inputRef.current)===null||_inputRef$current===void 0?void 0:_inputRef$current.focus();};const handleActionMessage=(actionType,message)=>{var _inputRef$current2;setActionMessage({actionType,message});if(actionType==='edit'){setNewMessage(message.message);}(_inputRef$current2=inputRef.current)===null||_inputRef$current2===void 0?void 0:_inputRef$current2.focus();};const handleDelete=message=>{var _groupMessages$at,_groupMessages$at$mes,_groupMessages$at2,_groupMessages$at2$me;const messageBeforeLastMessage=(groupMessages===null||groupMessages===void 0?void 0:(_groupMessages$at=groupMessages.at(-1))===null||_groupMessages$at===void 0?void 0:(_groupMessages$at$mes=_groupMessages$at.messages)===null||_groupMessages$at$mes===void 0?void 0:_groupMessages$at$mes.at(-2))||(groupMessages===null||groupMessages===void 0?void 0:(_groupMessages$at2=groupMessages.at(-2))===null||_groupMessages$at2===void 0?void 0:(_groupMessages$at2$me=_groupMessages$at2.messages)===null||_groupMessages$at2$me===void 0?void 0:_groupMessages$at2$me.at(-1));deleteMessage(currentChat.chatId,message,messageBeforeLastMessage).then();};return/*#__PURE__*/_jsxs(\"div\",{style:{height:'80vh'},children:[/*#__PURE__*/_jsx(\"input\",{type:\"file\",ref:nextRef,onChange:handleFile,accept:\"image/jpg, image/jpeg, image/png, image/svg+xml, image/svg\",className:\"d-none\"}),/*#__PURE__*/_jsxs(MainContainer,{responsive:true,className:\"chat-container rounded\",children:[/*#__PURE__*/_jsx(Sidebar,{position:\"left\",scrollable:false,className:\"chat-sidebar\",children:/*#__PURE__*/_jsx(ConversationList,{children:chats.filter(item=>item.user.id!==undefined).map((chat,idx)=>{var _chat$user,_chat$user2;return/*#__PURE__*/_jsx(Conversation,{onClick:()=>{handleChatClick(chat);},name:chat.user.firstname+' '+(chat.user.lastname||''),info:chat.lastMessage,children:/*#__PURE__*/_jsx(Avatar,{src:getAvatar((_chat$user=chat.user)===null||_chat$user===void 0?void 0:_chat$user.img),name:(_chat$user2=chat.user)===null||_chat$user2===void 0?void 0:_chat$user2.firstname})},idx);})})}),/*#__PURE__*/_jsxs(ChatContainer,{className:\"chat-container\",children:[currentChat?/*#__PURE__*/_jsxs(ConversationHeader,{className:\"chat-header\",children:[/*#__PURE__*/_jsx(ConversationHeader.Back,{}),/*#__PURE__*/_jsx(Avatar,{src:getAvatar(currentChat===null||currentChat===void 0?void 0:(_currentChat$user=currentChat.user)===null||_currentChat$user===void 0?void 0:_currentChat$user.img),name:currentChat===null||currentChat===void 0?void 0:(_currentChat$user2=currentChat.user)===null||_currentChat$user2===void 0?void 0:_currentChat$user2.firstname}),/*#__PURE__*/_jsx(ConversationHeader.Content,{userName:`${currentChat===null||currentChat===void 0?void 0:(_currentChat$user3=currentChat.user)===null||_currentChat$user3===void 0?void 0:_currentChat$user3.firstname} ${(currentChat===null||currentChat===void 0?void 0:(_currentChat$user4=currentChat.user)===null||_currentChat$user4===void 0?void 0:_currentChat$user4.lastname)||''}`})]}):'',/*#__PURE__*/_jsxs(MessageList,{loading:messagesLoading,className:\"message-list\",children:[/*#__PURE__*/_jsx(Channel,{groupMessages:groupMessages,messageEndRef:messageEndRef,handleActionMessage:handleActionMessage,handleDelete:handleDelete}),actionMessage.message&&/*#__PURE__*/_jsx(MessageActionIndicator,{actionMessage:actionMessage,cancelMessageAction:clearActionMessage})]}),groupMessages.length?/*#__PURE__*/_jsx(MessageInput,{ref:inputRef,value:newMessage,onChange:handleOnChange,onSend:inputVal=>handleOnSubmit({message:inputVal.replace(/\\&nbsp;/g,'').replace(/<[^>]+>/g,'').trim()}),placeholder:\"Message\",className:\"chat-input\",onAttachClick:onAttachClick}):null]})]}),/*#__PURE__*/_jsx(UploadMedia,{modal:modal,url:url,setModal:setModal,file:file,handleOnSubmit:handleOnSubmit}),/*#__PURE__*/_jsx(CustomModal,{click:deleteCurrentChat,text:t('delete.chat')})]});}","map":null,"metadata":{},"sourceType":"module"}