{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst initialState = {\n  chats: [],\n  messages: [],\n  currentChat: null,\n  messagesLoading: false,\n  chatInitialized: false,\n  authUserId: null\n};\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    setChats(state, action) {\n      state.chats = action.payload;\n    },\n\n    updateChat(state, action) {\n      const {\n        payload\n      } = action;\n      const staledChatItemIndex = state.chats.findIndex(item => item.chatId === payload.chatId);\n      state.chats[staledChatItemIndex] = { ...state.chats[staledChatItemIndex],\n        ...payload\n      };\n    },\n\n    removeChat(state, action) {\n      const {\n        payload: chatId\n      } = action;\n      const removedChatItemIndex = state.chats.findIndex(item => item.chatId === chatId);\n      state.chats.splice(removedChatItemIndex, 1);\n    },\n\n    addChat(state, action) {\n      state.chats.push(action.payload);\n    },\n\n    setMessages(state, action) {\n      state.messages = action.payload;\n    },\n\n    setCurrentChat(state, action) {\n      state.currentChat = action.payload;\n    },\n\n    removeCurrentChat(state) {\n      state.currentChat = null;\n    },\n\n    setMessagesLoading(state, action) {\n      state.messagesLoading = action.payload;\n    },\n\n    setChatInitialized(state, action) {\n      state.chatInitialized = action.payload;\n    },\n\n    setAuthUserId(state, action) {\n      state.authUserId = action.payload;\n    }\n\n  }\n});\nexport const {\n  setChats,\n  setMessages,\n  setCurrentChat,\n  removeCurrentChat,\n  updateChat,\n  removeChat,\n  addChat,\n  setMessagesLoading,\n  setChatInitialized,\n  setAuthUserId\n} = chatSlice.actions;\nexport default chatSlice.reducer;","map":{"version":3,"names":["createSlice","initialState","chats","messages","currentChat","messagesLoading","chatInitialized","authUserId","chatSlice","name","reducers","setChats","state","action","payload","updateChat","staledChatItemIndex","findIndex","item","chatId","removeChat","removedChatItemIndex","splice","addChat","push","setMessages","setCurrentChat","removeCurrentChat","setMessagesLoading","setChatInitialized","setAuthUserId","actions","reducer"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/redux/slices/chat.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst initialState = {\n  chats: [],\n  messages: [],\n  currentChat: null,\n  messagesLoading: false,\n  chatInitialized: false,\n  authUserId: null,\n};\n\nconst chatSlice = createSlice({\n  name: 'chat',\n  initialState,\n  reducers: {\n    setChats(state, action) {\n      state.chats = action.payload;\n    },\n    updateChat(state, action) {\n      const { payload } = action;\n      const staledChatItemIndex = state.chats.findIndex(\n        (item) => item.chatId === payload.chatId,\n      );\n      state.chats[staledChatItemIndex] = {\n        ...state.chats[staledChatItemIndex],\n        ...payload,\n      };\n    },\n    removeChat(state, action) {\n      const { payload: chatId } = action;\n      const removedChatItemIndex = state.chats.findIndex(\n        (item) => item.chatId === chatId,\n      );\n      state.chats.splice(removedChatItemIndex, 1);\n    },\n    addChat(state, action) {\n      state.chats.push(action.payload);\n    },\n    setMessages(state, action) {\n      state.messages = action.payload;\n    },\n    setCurrentChat(state, action) {\n      state.currentChat = action.payload;\n    },\n    removeCurrentChat(state) {\n      state.currentChat = null;\n    },\n    setMessagesLoading(state, action) {\n      state.messagesLoading = action.payload;\n    },\n    setChatInitialized(state, action) {\n      state.chatInitialized = action.payload;\n    },\n    setAuthUserId(state, action) {\n      state.authUserId = action.payload;\n    },\n  },\n});\n\nexport const {\n  setChats,\n  setMessages,\n  setCurrentChat,\n  removeCurrentChat,\n  updateChat,\n  removeChat,\n  addChat,\n  setMessagesLoading,\n  setChatInitialized,\n  setAuthUserId,\n} = chatSlice.actions;\nexport default chatSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;EACnBC,KAAK,EAAE,EADY;EAEnBC,QAAQ,EAAE,EAFS;EAGnBC,WAAW,EAAE,IAHM;EAInBC,eAAe,EAAE,KAJE;EAKnBC,eAAe,EAAE,KALE;EAMnBC,UAAU,EAAE;AANO,CAArB;AASA,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC5BS,IAAI,EAAE,MADsB;EAE5BR,YAF4B;EAG5BS,QAAQ,EAAE;IACRC,QAAQ,CAACC,KAAD,EAAQC,MAAR,EAAgB;MACtBD,KAAK,CAACV,KAAN,GAAcW,MAAM,CAACC,OAArB;IACD,CAHO;;IAIRC,UAAU,CAACH,KAAD,EAAQC,MAAR,EAAgB;MACxB,MAAM;QAAEC;MAAF,IAAcD,MAApB;MACA,MAAMG,mBAAmB,GAAGJ,KAAK,CAACV,KAAN,CAAYe,SAAZ,CACzBC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBL,OAAO,CAACK,MADR,CAA5B;MAGAP,KAAK,CAACV,KAAN,CAAYc,mBAAZ,IAAmC,EACjC,GAAGJ,KAAK,CAACV,KAAN,CAAYc,mBAAZ,CAD8B;QAEjC,GAAGF;MAF8B,CAAnC;IAID,CAbO;;IAcRM,UAAU,CAACR,KAAD,EAAQC,MAAR,EAAgB;MACxB,MAAM;QAAEC,OAAO,EAAEK;MAAX,IAAsBN,MAA5B;MACA,MAAMQ,oBAAoB,GAAGT,KAAK,CAACV,KAAN,CAAYe,SAAZ,CAC1BC,IAAD,IAAUA,IAAI,CAACC,MAAL,KAAgBA,MADC,CAA7B;MAGAP,KAAK,CAACV,KAAN,CAAYoB,MAAZ,CAAmBD,oBAAnB,EAAyC,CAAzC;IACD,CApBO;;IAqBRE,OAAO,CAACX,KAAD,EAAQC,MAAR,EAAgB;MACrBD,KAAK,CAACV,KAAN,CAAYsB,IAAZ,CAAiBX,MAAM,CAACC,OAAxB;IACD,CAvBO;;IAwBRW,WAAW,CAACb,KAAD,EAAQC,MAAR,EAAgB;MACzBD,KAAK,CAACT,QAAN,GAAiBU,MAAM,CAACC,OAAxB;IACD,CA1BO;;IA2BRY,cAAc,CAACd,KAAD,EAAQC,MAAR,EAAgB;MAC5BD,KAAK,CAACR,WAAN,GAAoBS,MAAM,CAACC,OAA3B;IACD,CA7BO;;IA8BRa,iBAAiB,CAACf,KAAD,EAAQ;MACvBA,KAAK,CAACR,WAAN,GAAoB,IAApB;IACD,CAhCO;;IAiCRwB,kBAAkB,CAAChB,KAAD,EAAQC,MAAR,EAAgB;MAChCD,KAAK,CAACP,eAAN,GAAwBQ,MAAM,CAACC,OAA/B;IACD,CAnCO;;IAoCRe,kBAAkB,CAACjB,KAAD,EAAQC,MAAR,EAAgB;MAChCD,KAAK,CAACN,eAAN,GAAwBO,MAAM,CAACC,OAA/B;IACD,CAtCO;;IAuCRgB,aAAa,CAAClB,KAAD,EAAQC,MAAR,EAAgB;MAC3BD,KAAK,CAACL,UAAN,GAAmBM,MAAM,CAACC,OAA1B;IACD;;EAzCO;AAHkB,CAAD,CAA7B;AAgDA,OAAO,MAAM;EACXH,QADW;EAEXc,WAFW;EAGXC,cAHW;EAIXC,iBAJW;EAKXZ,UALW;EAMXK,UANW;EAOXG,OAPW;EAQXK,kBARW;EASXC,kBATW;EAUXC;AAVW,IAWTtB,SAAS,CAACuB,OAXP;AAYP,eAAevB,SAAS,CAACwB,OAAzB"},"metadata":{},"sourceType":"module"}