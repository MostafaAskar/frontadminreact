{"ast":null,"code":"import React,{useState,useMemo}from'react';import debounce from'lodash/debounce';import{Select,Spin}from'antd';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export const InfiniteSelect=_ref=>{let{fetchOptions,debounceTimeout=400,hasMore,...props}=_ref;const[fetching,setFetching]=useState(false);const[options,setOptions]=useState([]);const[loading,setLoading]=useState(false);const[search,setSearch]=useState(null);const[currentPage,setCurrentPage]=useState(1);const debounceFetcher=useMemo(()=>{const loadOptions=value=>{setOptions([]);setSearch(value);setFetching(true);fetchOptions({search:value}).then(newOptions=>{setOptions(newOptions);setCurrentPage(2);setFetching(false);}).finally(()=>setLoading(false));};return debounce(loadOptions,debounceTimeout);},[fetchOptions,debounceTimeout,currentPage]);const fetchOnFocus=()=>{if(!options.length){debounceFetcher('');}};const onScroll=async event=>{const target=event.target;if(!loading&&target.scrollTop+target.offsetHeight===target.scrollHeight){if(hasMore){setLoading(true);target.scrollTo(0,target.scrollHeight);fetchOptions({search:search,page:currentPage}).then(item=>{setCurrentPage(i=>i+1);setOptions([...options,...item]);}).finally(()=>setLoading(false));}}};return/*#__PURE__*/_jsxs(Select,{showSearch:true,allowClear:true,onPopupScroll:onScroll,labelInValue:true,filterOption:false,onSearch:debounceFetcher,notFoundContent:fetching?/*#__PURE__*/_jsx(Spin,{size:\"small\"}):'no results',onFocus:fetchOnFocus,...props,children:[options.map((item,index)=>/*#__PURE__*/_jsx(Select.Option,{value:item.value,children:item.label},index)),loading&&/*#__PURE__*/_jsx(Select.Option,{children:/*#__PURE__*/_jsx(Spin,{size:\"small\"})})]});};","map":null,"metadata":{},"sourceType":"module"}