{"ast":null,"code":"var _excluded = [\"lastSenderName\", \"info\", \"name\", \"children\", \"className\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport cName from \"./cName\";\nimport classNames from \"classnames\";\nimport PropTypes from \"prop-types\";\n\nvar LastSenderName = function LastSenderName(_ref) {\n  var name = _ref.name;\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__last-sender\")\n  }, name), \":\");\n};\n\nprocess.env.NODE_ENV !== \"production\" ? LastSenderName.propTypes = {\n  name: PropTypes.node\n} : void 0;\n\nvar InfoContent = function InfoContent(_ref2) {\n  var info = _ref2.info;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__info-content\")\n  }, info);\n};\n\nprocess.env.NODE_ENV !== \"production\" ? InfoContent.propTypes = {\n  info: PropTypes.node\n} : void 0;\nexport var ConversationContent = function ConversationContent(_ref3) {\n  var lastSenderName = _ref3.lastSenderName,\n      info = _ref3.info,\n      name = _ref3.name,\n      children = _ref3.children,\n      className = _ref3.className,\n      rest = _objectWithoutProperties(_ref3, _excluded);\n\n  var typeofLastSenderName = _typeof(lastSenderName);\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    className: classNames(\"\".concat(cName, \"__content\"), className)\n  }), React.Children.count(children) > 0 ? children : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__name\")\n  }, name), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__info\")\n  }, typeofLastSenderName !== \"undefined\" ? /*#__PURE__*/React.createElement(React.Fragment, null, typeofLastSenderName === \"string\" ? /*#__PURE__*/React.createElement(LastSenderName, {\n    name: lastSenderName\n  }) : lastSenderName, \" \") : null, typeof info !== \"undefined\" && /*#__PURE__*/React.createElement(InfoContent, {\n    info: info\n  }))));\n};\nConversationContent.displayName = \"Conversation.Content\";\nprocess.env.NODE_ENV !== \"production\" ? ConversationContent.propTypes = {\n  /** Primary content. */\n  children: PropTypes.node,\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /** First text line - contact name etc. */\n  name: PropTypes.node,\n\n  /** Last sender name. */\n  lastSenderName: PropTypes.node,\n\n  /** Informational message / last message. */\n  info: PropTypes.node\n} : void 0;\nConversationContent.defaultProps = {};\nexport default ConversationContent;","map":null,"metadata":{},"sourceType":"module"}