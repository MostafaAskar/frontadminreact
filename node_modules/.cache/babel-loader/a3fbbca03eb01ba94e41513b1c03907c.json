{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/parcel-options/option-form.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Col, Form, Input, Row } from 'antd';\nimport LanguageList from 'components/language-list';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useSelector } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ParcelOptionForm(_ref) {\n  _s();\n\n  let {\n    data,\n    onFinish,\n    isSubmitting\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const {\n    languages,\n    defaultLang\n  } = useSelector(state => state.formLang, shallowEqual);\n  const [form] = Form.useForm();\n\n  function getLanguageFields(data) {\n    if (!data) {\n      return {};\n    }\n\n    const {\n      translations\n    } = data;\n    const result = languages.map(item => {\n      var _translations$find;\n\n      return {\n        [`title[${item.locale}]`]: (_translations$find = translations.find(el => el.locale === item.locale)) === null || _translations$find === void 0 ? void 0 : _translations$find.title\n      };\n    });\n    return Object.assign({}, ...result);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: !!data ? t('edit.option') : t('add.option'),\n    extra: /*#__PURE__*/_jsxDEV(LanguageList, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 14\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      form: form,\n      layout: \"vertical\",\n      onFinish: onFinish,\n      initialValues: { ...getLanguageFields(data)\n      },\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        gutter: 12,\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          span: 24,\n          children: languages.map(item => /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: t('title'),\n            name: `title[${item.locale}]`,\n            rules: [{\n              required: item.locale === defaultLang,\n              message: t('requried')\n            }],\n            hidden: item.locale !== defaultLang,\n            children: /*#__PURE__*/_jsxDEV(Input, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 17\n            }, this)\n          }, 'title' + item.locale, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          span: 4,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            htmlType: \"submit\",\n            type: \"primary\",\n            loading: isSubmitting,\n            children: t('save')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ParcelOptionForm, \"30qcoeN1A/iRuB1zlbUcG+ohBlc=\", false, function () {\n  return [useTranslation, useSelector, Form.useForm];\n});\n\n_c = ParcelOptionForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParcelOptionForm\");","map":{"version":3,"names":["Button","Card","Col","Form","Input","Row","LanguageList","React","useTranslation","shallowEqual","useSelector","ParcelOptionForm","data","onFinish","isSubmitting","t","languages","defaultLang","state","formLang","form","useForm","getLanguageFields","translations","result","map","item","locale","find","el","title","Object","assign","required","message"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/parcel-options/option-form.js"],"sourcesContent":["import { Button, Card, Col, Form, Input, Row } from 'antd';\nimport LanguageList from 'components/language-list';\nimport React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { shallowEqual, useSelector } from 'react-redux';\n\nexport default function ParcelOptionForm({ data, onFinish, isSubmitting }) {\n  const { t } = useTranslation();\n  const { languages, defaultLang } = useSelector(\n    (state) => state.formLang,\n    shallowEqual\n  );\n  const [form] = Form.useForm();\n  function getLanguageFields(data) {\n    if (!data) {\n      return {};\n    }\n    const { translations } = data;\n    const result = languages.map((item) => ({\n      [`title[${item.locale}]`]: translations.find(\n        (el) => el.locale === item.locale\n      )?.title,\n    }));\n    return Object.assign({}, ...result);\n  }\n  return (\n    <Card\n      title={!!data ? t('edit.option') : t('add.option')}\n      extra={<LanguageList />}\n    >\n      <Form form={form} layout='vertical' onFinish={onFinish} initialValues={{...getLanguageFields(data)}}>\n        <Row gutter={12}>\n          <Col span={24}>\n            {languages.map((item) => (\n              <Form.Item\n                key={'title' + item.locale}\n                label={t('title')}\n                name={`title[${item.locale}]`}\n                rules={[\n                  {\n                    required: item.locale === defaultLang,\n                    message: t('requried'),\n                  },\n                ]}\n                hidden={item.locale !== defaultLang}\n              >\n                <Input />\n              </Form.Item>\n            ))}\n          </Col>\n          <Col span={4}>\n            <Button htmlType='submit' type=\"primary\" loading={isSubmitting}>{t('save')}</Button>\n          </Col>\n        </Row>\n      </Form>\n    </Card>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}