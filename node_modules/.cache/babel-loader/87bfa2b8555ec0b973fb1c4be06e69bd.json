{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{CopyOutlined,DeleteOutlined,EditOutlined,PlusCircleOutlined,QrcodeOutlined}from'@ant-design/icons';import{toast}from'react-toastify';import CustomModal from'../../../components/modal';import{Context}from'../../../context/context';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{useNavigate}from'react-router-dom';import{addMenu,disableRefetch,setMenuData}from'../../../redux/slices/menu';import{useTranslation}from'react-i18next';import DeleteButton from'../../../components/delete-button';import FilterColumns from'../../../components/filter-column';import useDidUpdate from'../../../helpers/useDidUpdate';import formatSortType from'../../../helpers/formatSortType';import{fetchBookingTable}from'../../../redux/slices/booking-tables';import sellerBookingTable from'../../../services/seller/booking-table';import{Button,Card,Modal,Space,Table,Tooltip}from'antd';import TableQrCode from'./table-qrcode';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const BookingTables=()=>{const{t}=useTranslation();const dispatch=useDispatch();const navigate=useNavigate();const{setIsModalVisible}=useContext(Context);const[id,setId]=useState(null);const[loadingBtn,setLoadingBtn]=useState(false);const[text,setText]=useState(null);const[selectedTable,setSelectedTable]=useState(null);const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const data=activeMenu===null||activeMenu===void 0?void 0:activeMenu.data;const paramsData={sort:data===null||data===void 0?void 0:data.sort,column:data===null||data===void 0?void 0:data.column,search:data!==null&&data!==void 0&&data.search?data.search:undefined,perPage:(data===null||data===void 0?void 0:data.perPage)||10,page:(data===null||data===void 0?void 0:data.page)||1};const{tables,meta,loading}=useSelector(state=>state.bookingTable,shallowEqual);const goToEdit=row=>{dispatch(addMenu({id:'booking-table-edit',url:`seller/booking/table/${row.id}`,name:t('booking.table.edit')}));navigate(`/seller/booking/table/${row.id}`);};const goToClone=row=>{dispatch(addMenu({id:'booking-table-clone',url:`seller/booking/table/clone/${row.id}`,name:t('booking.table.clone')}));navigate(`/seller/booking/table/clone/${row.id}`);};const goToAddBox=()=>{dispatch(addMenu({id:'booking-table-add',url:'seller/booking/table/add',name:t('booking.table.add')}));navigate('/seller/booking/table/add');};const openQrCode=row=>{setSelectedTable(row);};const[columns,setColumns]=useState([{title:t('id'),dataIndex:'id',key:'id',is_show:true,sorter:true},{title:t('name'),dataIndex:'name',key:'name',is_show:true,render:(_,row)=>row===null||row===void 0?void 0:row.name},{title:t('sected.zone'),key:'name',is_show:true,render:(_,row)=>{var _row$shop_section,_row$shop_section$tra;return(_row$shop_section=row.shop_section)===null||_row$shop_section===void 0?void 0:(_row$shop_section$tra=_row$shop_section.translation)===null||_row$shop_section$tra===void 0?void 0:_row$shop_section$tra.title;}},{title:t('chair.count'),dataIndex:'chair_count',key:'chair_count',is_show:true},{title:t('options'),key:'options',dataIndex:'options',is_show:true,render:(_,row)=>{return/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(EditOutlined,{}),onClick:()=>goToEdit(row)}),/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(CopyOutlined,{}),onClick:()=>goToClone(row)}),/*#__PURE__*/_jsx(DeleteButton,{icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),onClick:()=>{setId([row.id]);setIsModalVisible(true);setText(true);}}),/*#__PURE__*/_jsx(Tooltip,{title:t('show.qrcode'),children:/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(QrcodeOutlined,{}),onClick:()=>openQrCode(row)})})]});}}]);const brandDelete=()=>{setLoadingBtn(true);const params={...Object.assign({},...id.map((item,index)=>({[`ids[${index}]`]:item})))};sellerBookingTable.delete(params).then(()=>{toast.success(t('successfully.deleted'));dispatch(fetchBookingTable(paramsData));setIsModalVisible(false);setText(null);setId(null);}).finally(()=>setLoadingBtn(false));};function onChangePagination(pagination,filter,sorter){const{pageSize:perPage,current:page}=pagination;const{field:column,order}=sorter;const sort=formatSortType(order);dispatch(setMenuData({activeMenu,data:{...data,perPage,page,column,sort}}));}useDidUpdate(()=>{dispatch(fetchBookingTable(paramsData));},[activeMenu.data]);useEffect(()=>{if(activeMenu.refetch){dispatch(fetchBookingTable(paramsData));dispatch(disableRefetch(activeMenu));}},[activeMenu.refetch]);const rowSelection={selectedRowKeys:id,onChange:key=>{setId(key);}};const allDelete=()=>{if(id===null||id.length===0){toast.warning(t('select.the.product'));}else{setIsModalVisible(true);setText(false);}};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{className:\"p-0\",children:/*#__PURE__*/_jsxs(Space,{wrap:true,className:\"justify-content-end w-100\",children:[/*#__PURE__*/_jsx(DeleteButton,{size:\"\",onClick:allDelete,children:t('delete.selected')}),/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(PlusCircleOutlined,{}),onClick:goToAddBox,children:t('add.booking.table')}),/*#__PURE__*/_jsx(FilterColumns,{columns:columns,setColumns:setColumns})]})}),/*#__PURE__*/_jsx(Card,{title:t('booking.tables'),children:/*#__PURE__*/_jsx(Table,{scroll:{x:true},rowSelection:rowSelection,columns:columns===null||columns===void 0?void 0:columns.filter(item=>item.is_show),dataSource:tables,pagination:{pageSize:meta.per_page,page:meta.current_page,total:meta.total},rowKey:record=>record.id,onChange:onChangePagination,loading:loading})}),/*#__PURE__*/_jsx(CustomModal,{click:brandDelete,text:text?t('delete'):t('all.delete'),setText:setId,loading:loadingBtn}),/*#__PURE__*/_jsx(Modal,{width:400,visible:!!selectedTable,footer:null,onCancel:()=>setSelectedTable(null),children:/*#__PURE__*/_jsx(TableQrCode,{table:selectedTable})})]});};export default BookingTables;","map":null,"metadata":{},"sourceType":"module"}