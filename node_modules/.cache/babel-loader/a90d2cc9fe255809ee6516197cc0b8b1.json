{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/settings/general-settings/auth.js\",\n    _s = $RefreshSig$();\n\nimport { Button, Card, Col, Form, InputNumber, Row } from 'antd';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { shallowEqual } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport settingService from '../../../services/settings';\nimport { fetchSettings as getSettings } from '../../../redux/slices/globalSettings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Auth = _ref => {\n  _s();\n\n  let {\n    loading\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [form] = Form.useForm();\n  const {\n    activeMenu\n  } = useSelector(state => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  function updateSettings(data) {\n    setLoadingBtn(true);\n    settingService.update(data).then(() => {\n      toast.success(t('successfully.updated'));\n      dispatch(getSettings());\n    }).finally(() => setLoadingBtn(false));\n  }\n\n  const onFinish = values => updateSettings(values);\n\n  return /*#__PURE__*/_jsxDEV(Form, {\n    layout: \"vertical\",\n    form: form,\n    name: \"global-settings\",\n    onFinish: onFinish,\n    initialValues: { ...activeMenu.data\n    },\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      title: t('auth.settings'),\n      children: [/*#__PURE__*/_jsxDEV(Row, {\n        gutter: 12,\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          span: 12,\n          children: /*#__PURE__*/_jsxDEV(Form.Item, {\n            label: t('otp.expire.time') + ' ' + `( ${t('minut')} )`,\n            name: \"otp_expire_time\",\n            rules: [{\n              required: true,\n              message: t('required')\n            }],\n            children: /*#__PURE__*/_jsxDEV(InputNumber, {\n              addonAfter: t('minut'),\n              className: \"w-100\",\n              min: 0\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"primary\",\n        onClick: () => form.submit(),\n        loading: loadingBtn,\n        children: t('save')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"b2/khgOIidYbzg9UNO7U512oenI=\", false, function () {\n  return [useTranslation, Form.useForm, useSelector, useDispatch];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"names":["Button","Card","Col","Form","InputNumber","Row","React","useState","useTranslation","useSelector","useDispatch","shallowEqual","toast","settingService","fetchSettings","getSettings","Auth","loading","t","form","useForm","activeMenu","state","menu","dispatch","loadingBtn","setLoadingBtn","updateSettings","data","update","then","success","finally","onFinish","values","required","message","submit"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/settings/general-settings/auth.js"],"sourcesContent":["import { Button, Card, Col, Form, InputNumber, Row } from 'antd';\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { shallowEqual } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport settingService from '../../../services/settings';\nimport { fetchSettings as getSettings } from '../../../redux/slices/globalSettings';\n\nconst Auth = ({ loading }) => {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n  const dispatch = useDispatch();\n  const [loadingBtn, setLoadingBtn] = useState(false);\n\n  function updateSettings(data) {\n    setLoadingBtn(true);\n    settingService\n      .update(data)\n      .then(() => {\n        toast.success(t('successfully.updated'));\n        dispatch(getSettings());\n      })\n      .finally(() => setLoadingBtn(false));\n  }\n\n  const onFinish = (values) => updateSettings(values);\n\n  return (\n    <Form\n      layout='vertical'\n      form={form}\n      name='global-settings'\n      onFinish={onFinish}\n      initialValues={{\n        ...activeMenu.data,\n      }}\n    >\n      <Card title={t('auth.settings')}>\n        <Row gutter={12}>\n          <Col span={12}>\n            <Form.Item\n              label={t('otp.expire.time') + ' ' + `( ${t('minut')} )`}\n              name='otp_expire_time'\n              rules={[\n                {\n                  required: true,\n                  message: t('required'),\n                },\n              ]}\n            >\n              <InputNumber addonAfter={t('minut')} className='w-100' min={0} />\n            </Form.Item>\n          </Col>\n        </Row>\n        <Button\n          type='primary'\n          onClick={() => form.submit()}\n          loading={loadingBtn}\n        >\n          {t('save')}\n        </Button>\n      </Card>\n    </Form>\n  );\n};\n\nexport default Auth;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}