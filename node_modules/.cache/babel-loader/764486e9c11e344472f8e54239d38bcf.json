{"ast":null,"code":"import{Button,Card,Col,Form,Input,Modal,Radio,Row}from'antd';import React,{useState,useEffect}from'react';import{useTranslation}from'react-i18next';import{useSelector}from'react-redux';import{useDispatch}from'react-redux';import{shallowEqual}from'react-redux';import{toast}from'react-toastify';import{setMenuData}from'../../../redux/slices/menu';import settingService from'../../../services/settings';import{fetchSettings as getSettings}from'../../../redux/slices/globalSettings';import{QrCodeCard}from'components/qr-code-card';import'../../../assets/scss/components/radio-card.scss';import{ExclamationCircleFilled}from'@ant-design/icons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const{confirm}=Modal;const qrCodeTypes=[{title:'View 1',value:'w1',img:'/img/qr-code-type1.png'},{title:'View 2',value:'w2',img:'/img/qr-code-type2.png'},{title:'View 3',value:'w3',img:'/img/qr-code-type3.png'}];const QrCode=()=>{var _activeMenu$data;const{t}=useTranslation();const[form]=Form.useForm();const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const dispatch=useDispatch();const[loadingBtn,setLoadingBtn]=useState(false);const[value,setValue]=useState(((_activeMenu$data=activeMenu.data)===null||_activeMenu$data===void 0?void 0:_activeMenu$data.qrcode_type)||qrCodeTypes[0].value);const showConfirm=type=>{confirm({title:t('do_you_want_to_change_qrcode_type'),centered:true,icon:/*#__PURE__*/_jsx(ExclamationCircleFilled,{}),onOk(){setValue(type);}});};useEffect(()=>{return()=>{const data=form.getFieldsValue(true);dispatch(setMenuData({activeMenu,data}));};// eslint-disable-next-line react-hooks/exhaustive-deps\n},[]);function updateSettings(data){setLoadingBtn(true);settingService.update(data).then(()=>{toast.success(t('successfully.updated'));dispatch(getSettings());}).finally(()=>setLoadingBtn(false));}const onFinish=values=>updateSettings({...values,qrcode_type:value});return/*#__PURE__*/_jsx(Form,{layout:\"vertical\",form:form,name:\"global-settings\",onFinish:onFinish,initialValues:{...activeMenu.data},children:/*#__PURE__*/_jsxs(Card,{title:t('qrcode'),children:[/*#__PURE__*/_jsxs(Row,{gutter:12,children:[/*#__PURE__*/_jsx(Col,{span:12,children:/*#__PURE__*/_jsx(Form.Item,{label:t('qrcode.base.url'),name:\"qrcode_base_url\",rules:[{validator(_,value){if(!value){return Promise.reject(new Error(t('required')));}else if(value&&(value===null||value===void 0?void 0:value.trim())===''){return Promise.reject(new Error(t('no.empty.space')));}else if((value===null||value===void 0?void 0:value.length)<2){return Promise.reject(new Error(t('must.be.at.least.2')));}return Promise.resolve();}}],children:/*#__PURE__*/_jsx(Input,{})})}),/*#__PURE__*/_jsx(Col,{span:24,style:{marginBottom:'20px'},children:/*#__PURE__*/_jsx(Form.Item,{label:t('qrcode.type'),children:/*#__PURE__*/_jsx(Radio.Group,{value:value,className:\"cards-container\",children:qrCodeTypes.map(type=>/*#__PURE__*/_jsx(Radio,{onClick:()=>showConfirm(type.value),value:type.value,className:\"qr-radio-input-card-container\",children:/*#__PURE__*/_jsx(QrCodeCard,{title:type.title,checked:value===type.value,imgPath:type.img})}))})})})]}),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>form.submit(),loading:loadingBtn,children:t('save')})]})});};export default QrCode;","map":null,"metadata":{},"sourceType":"module"}