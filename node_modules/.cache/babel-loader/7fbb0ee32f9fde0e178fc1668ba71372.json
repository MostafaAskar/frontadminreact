{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{DeleteOutlined,EditOutlined,PlusCircleOutlined}from'@ant-design/icons';import{Button,Card,Space,Switch,Table}from'antd';import{toast}from'react-toastify';import GlobalContainer from'../../components/global-container';import CustomModal from'../../components/modal';import{Context}from'../../context/context';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{useNavigate}from'react-router-dom';import{addMenu,disableRefetch,setMenuData}from'../../redux/slices/menu';import useDidUpdate from'../../helpers/useDidUpdate';import formatSortType from'../../helpers/formatSortType';import{useTranslation}from'react-i18next';import faqService from'../../services/faq';import{fetchFaqs}from'../../redux/slices/faq';import DeleteButton from'../../components/delete-button';import FilterColumns from'../../components/filter-column';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";export default function FAQ(){const{t}=useTranslation();const dispatch=useDispatch();const navigate=useNavigate();const goToEdit=row=>{dispatch(addMenu({url:`faq/${row.uuid}`,id:`faq_${row.uuid}`,name:t('edit.faq')}));navigate(`/faq/${row.uuid}`);};const[columns,setColumns]=useState([{title:t('id'),dataIndex:'id',key:'id',sorter:true,is_show:true},{title:t('question'),dataIndex:'translation',key:'translation',is_show:true,render:translation=>translation===null||translation===void 0?void 0:translation.question},{title:t('type'),dataIndex:'type',key:'type',is_show:true},{title:t('created.at'),dataIndex:'created_at',key:'created_at',is_show:true,render:created_at=>moment(created_at).format('YYYY-MM-DD HH:mm')},{title:t('active'),dataIndex:'active',key:'active',is_show:true,render:(active,row)=>/*#__PURE__*/_jsx(Switch,{checked:active,onChange:()=>{setId(row.uuid);setIsDelete(false);setIsModalVisible(true);}})},{title:t('options'),key:'options',dataIndex:'options',is_show:true,render:(data,row)=>{return/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(EditOutlined,{}),onClick:()=>goToEdit(row)}),/*#__PURE__*/_jsx(DeleteButton,{icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),onClick:()=>{setId([row.uuid]);setIsDelete(true);setIsModalVisible(true);setText(true);}})]});}}]);const{setIsModalVisible}=useContext(Context);const[id,setId]=useState(null);const[isDelete,setIsDelete]=useState(false);const[loadingBtn,setLoadingBtn]=useState(false);const[text,setText]=useState(null);const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const{faqs,meta,loading,params}=useSelector(state=>state.faq,shallowEqual);const faqDelete=()=>{setLoadingBtn(true);const params={...Object.assign({},...id.map((item,index)=>({[`ids[${index}]`]:item})))};faqService.delete(params).then(()=>{toast.success(t('successfully.deleted'));dispatch(fetchFaqs());setIsModalVisible(false);setText(null);}).finally(()=>setLoadingBtn(false));};const faqSetActive=()=>{setLoadingBtn(true);faqService.setActive(id).then(()=>{toast.success(t('successfully.updated'));dispatch(fetchFaqs());setIsModalVisible(false);}).finally(()=>setLoadingBtn(false));};useEffect(()=>{if(activeMenu.refetch){dispatch(fetchFaqs());dispatch(disableRefetch(activeMenu));}},[activeMenu.refetch]);useDidUpdate(()=>{const data=activeMenu.data;const paramsData={sort:data===null||data===void 0?void 0:data.sort,column:data===null||data===void 0?void 0:data.column,perPage:data===null||data===void 0?void 0:data.perPage,page:data===null||data===void 0?void 0:data.page};dispatch(fetchFaqs(paramsData));},[activeMenu.data]);function onChangePagination(pagination,filter,sorter){const{pageSize:perPage,current:page}=pagination;const{field:column,order}=sorter;const sort=formatSortType(order);dispatch(setMenuData({activeMenu,data:{...activeMenu.data,perPage,page,column,sort}}));}const rowSelection={selectedRowKeys:id,onChange:key=>{setId(key);}};const allDelete=()=>{if(id===null||id.length===0){toast.warning(t('select.the.product'));}else{setIsModalVisible(true);setText(false);}};const goToAdd=()=>{dispatch(addMenu({id:'add.faq',url:`faq/add`,name:t('add.faq')}));navigate(`/faq/add`);};return/*#__PURE__*/_jsxs(Card,{title:t('faqs'),extra:/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(PlusCircleOutlined,{}),type:\"primary\",onClick:goToAdd,children:t('add.faq')}),/*#__PURE__*/_jsx(DeleteButton,{className:\"\",type:\"danger\",onClick:()=>{allDelete();setIsDelete(true);},children:t('delete.selected')}),/*#__PURE__*/_jsx(FilterColumns,{columns:columns,setColumns:setColumns})]}),children:[/*#__PURE__*/_jsx(Table,{scroll:{x:true},rowSelection:rowSelection,columns:columns===null||columns===void 0?void 0:columns.filter(item=>item.is_show),dataSource:faqs,pagination:{pageSize:params.perPage,page:params.page,total:meta.total,defaultCurrent:params.page},rowKey:record=>record===null||record===void 0?void 0:record.uuid,onChange:onChangePagination,loading:loading}),/*#__PURE__*/_jsx(CustomModal,{click:isDelete?faqDelete:faqSetActive,text:!isDelete?t('set.active.faq'):text?t('delete'):t('delete.selected'),loading:loadingBtn,setText:setId})]});}","map":null,"metadata":{},"sourceType":"module"}