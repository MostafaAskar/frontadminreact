{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/ckeEditorEdit.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Form } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport galleryService from '../services/gallery';\nimport { IMG_URL } from '../configs/app-global';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CkeEditorEdit = _ref => {\n  _s();\n\n  let {\n    getLanguageFields,\n    form,\n    lang,\n    languages\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n\n  function uploadAdapter(loader) {\n    return {\n      upload: () => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          loader.file.then(file => {\n            formData.append('image', file);\n            formData.append('type', 'blogs');\n            galleryService.upload(formData).then(_ref2 => {\n              let {\n                data\n              } = _ref2;\n              resolve({\n                default: `${IMG_URL + data.title}`\n              });\n            }).catch(err => {\n              reject(err);\n            });\n          });\n        });\n      }\n    };\n  }\n\n  function uploadPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = loader => {\n      return uploadAdapter(loader);\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(React.Fragment, {\n    children: languages.map(item => /*#__PURE__*/_jsxDEV(Form.Item, {\n      label: t('description'),\n      name: `description[${item.locale}]`,\n      valuePropName: \"data\",\n      getValueFromEvent: (event, editor) => {\n        const data = editor.getData();\n        return data;\n      },\n      rules: [{\n        required: item.locale === lang,\n        message: t('required')\n      }],\n      hidden: item.locale !== lang,\n      children: /*#__PURE__*/_jsxDEV(CKEditor, {\n        editor: ClassicEditor,\n        data: getLanguageFields()[`description[${item.value}]`],\n        config: {\n          extraPlugins: [uploadPlugin]\n        },\n        onBlur: (event, editor) => {\n          const data = editor.getData();\n          form.setFieldsValue({\n            [`description[${item.value}]`]: data\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)\n    }, 'desc' + item.locale, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CkeEditorEdit, \"zlIdU9EjM2llFt74AbE2KsUJXyM=\", false, function () {\n  return [useTranslation];\n});\n\n_c = CkeEditorEdit;\nexport default CkeEditorEdit;\n\nvar _c;\n\n$RefreshReg$(_c, \"CkeEditorEdit\");","map":{"version":3,"names":["React","CKEditor","ClassicEditor","Form","useTranslation","galleryService","IMG_URL","CkeEditorEdit","getLanguageFields","form","lang","languages","t","uploadAdapter","loader","upload","Promise","resolve","reject","formData","FormData","file","then","append","data","default","title","catch","err","uploadPlugin","editor","plugins","get","createUploadAdapter","map","item","locale","event","getData","required","message","value","extraPlugins","setFieldsValue"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/ckeEditorEdit.js"],"sourcesContent":["import React from 'react';\nimport { CKEditor } from '@ckeditor/ckeditor5-react';\nimport ClassicEditor from '@ckeditor/ckeditor5-build-classic';\nimport { Form } from 'antd';\nimport { useTranslation } from 'react-i18next';\nimport galleryService from '../services/gallery';\nimport { IMG_URL } from '../configs/app-global';\n\nconst CkeEditorEdit = ({ getLanguageFields, form, lang, languages }) => {\n  const { t } = useTranslation();\n  function uploadAdapter(loader) {\n    return {\n      upload: () => {\n        return new Promise((resolve, reject) => {\n          const formData = new FormData();\n          loader.file.then((file) => {\n            formData.append('image', file);\n            formData.append('type', 'blogs');\n            galleryService\n              .upload(formData)\n              .then(({ data }) => {\n                resolve({\n                  default: `${IMG_URL + data.title}`,\n                });\n              })\n              .catch((err) => {\n                reject(err);\n              });\n          });\n        });\n      },\n    };\n  }\n\n  function uploadPlugin(editor) {\n    editor.plugins.get('FileRepository').createUploadAdapter = (loader) => {\n      return uploadAdapter(loader);\n    };\n  }\n\n  return (\n    <React.Fragment>\n      {languages.map((item) => (\n        <Form.Item\n          key={'desc' + item.locale}\n          label={t('description')}\n          name={`description[${item.locale}]`}\n          valuePropName='data'\n          getValueFromEvent={(event, editor) => {\n            const data = editor.getData();\n            return data;\n          }}\n          rules={[\n            {\n              required: item.locale === lang,\n              message: t('required'),\n            },\n          ]}\n          hidden={item.locale !== lang}\n        >\n          <CKEditor\n            editor={ClassicEditor}\n            data={getLanguageFields()[`description[${item.value}]`]}\n            config={{\n              extraPlugins: [uploadPlugin],\n            }}\n            onBlur={(event, editor) => {\n              const data = editor.getData();\n              form.setFieldsValue({\n                [`description[${item.value}]`]: data,\n              });\n            }}\n          />\n        </Form.Item>\n      ))}\n    </React.Fragment>\n  );\n};\n\nexport default CkeEditorEdit;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}