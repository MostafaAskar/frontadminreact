{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport emailService from '../../services/emailSettings';\nconst initialState = {\n  loading: false,\n  emailProvider: [],\n  error: ''\n};\nexport const fetchEmailProvider = createAsyncThunk('fetch/fetchEmailProvider', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return emailService.get({ ...params\n  }).then(res => res);\n});\nconst emailProvider = createSlice({\n  name: 'emailProvider',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchEmailProvider.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchEmailProvider.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.emailProvider = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchEmailProvider.rejected, (state, action) => {\n      state.loading = false;\n      state.emailProvider = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport default emailProvider.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","emailService","initialState","loading","emailProvider","error","fetchEmailProvider","params","get","then","res","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","data","rejected","message","reducer"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/redux/slices/emailProvider.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport emailService from '../../services/emailSettings';\n\nconst initialState = {\n  loading: false,\n  emailProvider: [],\n  error: '',\n};\n\nexport const fetchEmailProvider = createAsyncThunk(\n  'fetch/fetchEmailProvider',\n  (params = {}) => {\n    return emailService.get({ ...params }).then((res) => res);\n  }\n);\n\nconst emailProvider = createSlice({\n  name: 'emailProvider',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchEmailProvider.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchEmailProvider.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.emailProvider = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchEmailProvider.rejected, (state, action) => {\n      state.loading = false;\n      state.emailProvider = [];\n      state.error = action.error.message;\n    });\n  },\n});\n\nexport default emailProvider.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,YAAP,MAAyB,8BAAzB;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,aAAa,EAAE,EAFI;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,kBAAkB,GAAGN,gBAAgB,CAChD,0BADgD,EAEhD,YAAiB;EAAA,IAAhBO,MAAgB,uEAAP,EAAO;EACf,OAAON,YAAY,CAACO,GAAb,CAAiB,EAAE,GAAGD;EAAL,CAAjB,EAAgCE,IAAhC,CAAsCC,GAAD,IAASA,GAA9C,CAAP;AACD,CAJ+C,CAA3C;AAOP,MAAMN,aAAa,GAAGL,WAAW,CAAC;EAChCY,IAAI,EAAE,eAD0B;EAEhCT,YAFgC;EAGhCU,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBR,kBAAkB,CAACS,OAAnC,EAA6CC,KAAD,IAAW;MACrDA,KAAK,CAACb,OAAN,GAAgB,IAAhB;IACD,CAFD;IAGAU,OAAO,CAACC,OAAR,CAAgBR,kBAAkB,CAACW,SAAnC,EAA8C,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC/D,MAAM;QAAEC;MAAF,IAAcD,MAApB;MACAF,KAAK,CAACb,OAAN,GAAgB,KAAhB;MACAa,KAAK,CAACZ,aAAN,GAAsBe,OAAO,CAACC,IAA9B;MACAJ,KAAK,CAACX,KAAN,GAAc,EAAd;IACD,CALD;IAMAQ,OAAO,CAACC,OAAR,CAAgBR,kBAAkB,CAACe,QAAnC,EAA6C,CAACL,KAAD,EAAQE,MAAR,KAAmB;MAC9DF,KAAK,CAACb,OAAN,GAAgB,KAAhB;MACAa,KAAK,CAACZ,aAAN,GAAsB,EAAtB;MACAY,KAAK,CAACX,KAAN,GAAca,MAAM,CAACb,KAAP,CAAaiB,OAA3B;IACD,CAJD;EAKD;AAlB+B,CAAD,CAAjC;AAqBA,eAAelB,aAAa,CAACmB,OAA7B"},"metadata":{},"sourceType":"module"}