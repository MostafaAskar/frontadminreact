{"ast":null,"code":"var _excluded = [\"model\", \"avatarSpacer\", \"avatarPosition\", \"type\", \"payload\", \"children\", \"className\"];\n\nfunction _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  }, _typeof(obj);\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { allowedChildren, getChildren, getComponentName } from \"../utils\";\nimport { prefix } from \"../settings\";\nimport Avatar from \"../Avatar\";\nimport MessageHeader from \"./MessageHeader\";\nimport MessageFooter from \"./MessageFooter\";\nimport MessageCustomContent from \"./MessageCustomContent\";\nimport MessageImageContent from \"./MessageImageContent\";\nimport MessageHtmlContent from \"./MessageHtmlContent\";\nimport MessageTextContent from \"./MessageTextContent\";\n/**\n * Chat message\n */\n\nexport var Message = function Message(_ref) {\n  var _ref2, _ref3;\n\n  var _ref$model = _ref.model,\n      message = _ref$model.message,\n      sentTime = _ref$model.sentTime,\n      sender = _ref$model.sender,\n      direction = _ref$model.direction,\n      position = _ref$model.position,\n      modelType = _ref$model.type,\n      modelPayload = _ref$model.payload,\n      avatarSpacer = _ref.avatarSpacer,\n      avatarPosition = _ref.avatarPosition,\n      type = _ref.type,\n      argPayload = _ref.payload,\n      children = _ref.children,\n      className = _ref.className,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var cName = \"\".concat(prefix, \"-message\");\n\n  var _getChildren = getChildren(children, [Avatar, MessageHeader, MessageFooter, MessageHtmlContent, MessageTextContent, MessageImageContent, MessageCustomContent]),\n      _getChildren2 = _slicedToArray(_getChildren, 7),\n      avatar = _getChildren2[0],\n      header = _getChildren2[1],\n      footer = _getChildren2[2],\n      htmlContent = _getChildren2[3],\n      textContent = _getChildren2[4],\n      imageContent = _getChildren2[5],\n      customContent = _getChildren2[6];\n\n  var directionClass = function () {\n    if (direction === 0 || direction === \"incoming\") {\n      return \"\".concat(cName, \"--incoming\");\n    } else if (direction === 1 || direction === \"outgoing\") {\n      return \"\".concat(cName, \"--outgoing\");\n    }\n  }();\n\n  var avatarPositionClass = function (position) {\n    var classPrefix = \"\".concat(cName, \"--avatar-\");\n\n    if (position === 0 || position === \"top-left\" || position === \"tl\") {\n      return \"\".concat(classPrefix, \"tl\");\n    } else if (position === 1 || position === \"top-right\" || position === \"tr\") {\n      return \"\".concat(classPrefix, \"tr\");\n    } else if (position === 2 || position === \"bottom-right\" || position === \"br\") {\n      return \"\".concat(classPrefix, \"br\");\n    } else if (position === 3 || position === \"bottom-left\" || position === \"bl\") {\n      return \"\".concat(classPrefix, \"bl\");\n    } else if (position === 4 || position === \"center-left\" || position === \"cl\") {\n      return \"\".concat(classPrefix, \"cl\");\n    } else if (position === 5 || position === \"center-right\" || position === \"cr\") {\n      return \"\".concat(classPrefix, \"cr\");\n    }\n  }(avatarPosition);\n\n  var positionClass = function (position) {\n    var classPrefix = \"\".concat(prefix, \"-message--\");\n\n    if (position === \"single\" || position === 0) {\n      return \"\".concat(classPrefix, \"single\");\n    } else if (position === \"first\" || position === 1) {\n      return \"\".concat(classPrefix, \"first\");\n    } else if (position === \"normal\" || position === 2) {\n      return \"\";\n    } else if (position === \"last\" || position === 3) {\n      return \"\".concat(classPrefix, \"last\");\n    }\n  }(position);\n\n  var ariaLabel = function () {\n    if ((sender === null || sender === void 0 ? void 0 : sender.length) > 0 && (sentTime === null || sentTime === void 0 ? void 0 : sentTime.length) > 0) {\n      return \"\".concat(sender, \": \").concat(sentTime);\n    } else if ((sender === null || sender === void 0 ? void 0 : sender.length) > 0 && (typeof sentTime === \"undefined\" || (sentTime === null || sentTime === void 0 ? void 0 : sentTime.length) === 0)) {\n      return sender;\n    } else {\n      return null;\n    }\n  }();\n\n  var childContent = (_ref2 = (_ref3 = htmlContent !== null && htmlContent !== void 0 ? htmlContent : textContent) !== null && _ref3 !== void 0 ? _ref3 : imageContent) !== null && _ref2 !== void 0 ? _ref2 : customContent;\n  var messageContent = childContent !== null && childContent !== void 0 ? childContent : function () {\n    var messageType = modelType !== null && modelType !== void 0 ? modelType : type;\n    var payloadFromModel = modelPayload !== null && modelPayload !== void 0 ? modelPayload : message;\n    var payload = payloadFromModel !== null && payloadFromModel !== void 0 ? payloadFromModel : argPayload;\n    var payloadName = _typeof(payload) === \"object\" ? getComponentName(payload) : \"\";\n\n    if (messageType === \"html\" && payloadName !== \"Message.CustomContent\") {\n      return /*#__PURE__*/React.createElement(MessageHtmlContent, {\n        html: payload\n      });\n    } else if (messageType === \"text\") {\n      return /*#__PURE__*/React.createElement(MessageTextContent, {\n        text: payload\n      });\n    } else if (messageType === \"image\") {\n      return /*#__PURE__*/React.createElement(MessageImageContent, payload);\n    } else if (messageType === \"custom\" || payloadName === \"Message.CustomContent\") {\n      return payload;\n    }\n  }();\n  return /*#__PURE__*/React.createElement(\"section\", _extends({}, rest, {\n    \"aria-label\": ariaLabel,\n    className: classNames(cName, directionClass, _defineProperty({}, \"\".concat(cName, \"--avatar-spacer\"), avatarSpacer), positionClass, avatarPositionClass, className)\n  }, _defineProperty({}, \"data-\".concat(prefix, \"-message\"), \"\")), typeof avatar !== \"undefined\" && /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__avatar\")\n  }, avatar), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__content-wrapper\")\n  }, header, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(cName, \"__content\")\n  }, messageContent), footer));\n};\nprocess.env.NODE_ENV !== \"production\" ? Message.propTypes = {\n  /**\n   * Model object\n   * **message**: string - Message to send\n   * **sentTime**: string - Message sent time\n   * **sender**: string - Sender name\n   * **direction**: \"incoming\" | \"outgoing\" | 0 | 1 - Message direction\n   * **position**: \"single\" | \"first\" | \"normal\" | \"last\" | 0 | 1 | 2 | 3 - Message position in feed\n   * **type**: \"html\" | \"text\" | \"image\" | \"custom\"\n   */\n  model: PropTypes.shape({\n    /** Chat message to display - content. */\n    message: PropTypes.string,\n    sentTime: PropTypes.string,\n    sender: PropTypes.string,\n    direction: PropTypes.oneOf([\"incoming\", \"outgoing\", 0, 1]),\n\n    /** Position. */\n    position: PropTypes.oneOf([\"single\", \"first\", \"normal\", \"last\", 0, 1, 2, 3]),\n\n    /**\n     * Message type\n     * This property can also be added directly to component, but property from model has precedence.\n     * Each type can have payload defined in model.payload or in payload property.\n     * Allowed payloads for different message are described in payload property.\n     */\n    type: PropTypes.oneOf([\"html\", \"text\", \"image\", \"custom\"]),\n\n    /**\n     * Message payload.\n     * Must be adequate to message type.\n     * Allowed payloads for different message types:\n     * html: String - Html string to render,\n     * text: String - Text to render,\n     * image: Object - for object properties please see **&lt;Message.ImageContent /&gt** properties,\n     * custom: **Message.CustomContent** - Component\n     */\n    payload: PropTypes.oneOfType([PropTypes.string, PropTypes.object, allowedChildren([MessageCustomContent])])\n  }),\n  avatarSpacer: PropTypes.bool,\n  avatarPosition: PropTypes.oneOf([\"tl\", \"tr\", \"cl\", \"cr\", \"bl\", \"br\", \"top-left\", \"top-right\", \"center-left\", \"center-right\", \"bottom-left\", \"bottom-right\"]),\n\n  /**\n   * Primary content.\n   * Content from payload has precedence over Message.*Content properties.\n   * Whe\n   * Allowed components:\n   *\n   * * &lt;Avatar /&gt;\n   * * &lt;Message.Header /&gt;\n   * * &lt;Message.Footer /&gt;\n   * * &lt;Message.HtmlContent /&gt;\n   * * &lt;Message.TextContent /&gt;\n   * * &lt;Message.ImageContent /&gt;\n   * * &lt;Message.CustomContent /&gt;\n   */\n  children: allowedChildren([Avatar, MessageHeader, MessageFooter, MessageHtmlContent, MessageTextContent, MessageImageContent, MessageCustomContent]),\n\n  /** Additional classes. */\n  className: PropTypes.string,\n\n  /**\n   * Message type\n   * This property can also exists in model. In that case value from model has precedence.\n   **/\n  type: PropTypes.oneOf([\"html\", \"text\", \"image\", \"custom\"]),\n\n  /**\n   * Message payload.\n   * Must be adequate to message type.\n   * Allowed payloads for different message types:\n   * html: String - Html string to render,\n   * text: String - Text to render,\n   * image: Object - for object properties please see **&lt;Message.ImageContent &gt/>** properties,\n   * custom: **Message.CustomContent** - Component\n   */\n  payload: PropTypes.oneOfType([PropTypes.string, allowedChildren([MessageCustomContent])])\n} : void 0;\nMessage.defaultProps = {\n  model: {\n    message: \"\",\n    sentTime: \"\",\n    sender: \"\",\n    direction: 1\n  },\n  avatarSpacer: false,\n  avatarPosition: undefined,\n  type: \"html\"\n};\nMessage.Header = MessageHeader;\nMessage.HtmlContent = MessageHtmlContent;\nMessage.TextContent = MessageTextContent;\nMessage.ImageContent = MessageImageContent;\nMessage.CustomContent = MessageCustomContent;\nMessage.Footer = MessageFooter;\nexport default Message;","map":null,"metadata":{},"sourceType":"module"}