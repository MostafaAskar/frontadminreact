{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/notificationBar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { BellOutlined } from '@ant-design/icons';\nimport NotificationDrawer from './notification-drawer';\nimport { Badge } from 'antd';\nimport notificationService from 'services/notification';\nimport useDidUpdate from 'helpers/useDidUpdate'; // import PushNotification from './push-notification';\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst initialPerPage = 15;\nexport default function NotificationBar() {\n  _s();\n\n  const [notificationDrawer, setNotificationDrawer] = useState(false);\n  const [notificationList, setNotificationList] = useState([]);\n  const [newNotification, setNewNotification] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [paginate, setPaginate] = useState({\n    page: 1,\n    perPage: initialPerPage\n  });\n\n  const fetchNotificationStatistic = () => {\n    notificationService.getStatistics().then(res => {\n      setNewNotification(res);\n    });\n  };\n\n  const fetchNotificationList = paginate => {\n    setLoading(true);\n    const params = {\n      type: 'notification',\n      column: 'id',\n      sort: 'desc',\n      perPage: initialPerPage,\n      page: 1,\n      ...paginate\n    };\n    notificationService.getAll(params).then(res => {\n      console.log('fired');\n      setNotificationList(prev => [...prev, ...(res === null || res === void 0 ? void 0 : res.data)]);\n    }).finally(() => setLoading(false));\n  };\n\n  const fetchReadAllNotifications = () => {\n    return notificationService.readAll();\n  };\n\n  useEffect(() => {\n    fetchNotificationStatistic();\n    const intervalId = setInterval(fetchNotificationStatistic, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n  useDidUpdate(() => {\n    if ((paginate === null || paginate === void 0 ? void 0 : paginate.page) > 1) {\n      fetchNotificationList(paginate);\n    }\n  }, [paginate === null || paginate === void 0 ? void 0 : paginate.page]);\n\n  const handleOpenNotificationDrawer = () => {\n    fetchNotificationList(paginate);\n    setNotificationDrawer(true);\n  };\n\n  const handleReadAllNotifications = () => {\n    setLoading(true);\n    return fetchReadAllNotifications().finally(() => setLoading(false));\n  };\n\n  const handleClose = () => {\n    setNotificationDrawer(false);\n    setPaginate({\n      page: 1,\n      perPage: initialPerPage\n    });\n    setNotificationList([]);\n  };\n\n  const sumOfAllNotificationStatistics = (newNotification === null || newNotification === void 0 ? void 0 : newNotification.new_order) || 0 + (newNotification === null || newNotification === void 0 ? void 0 : newNotification.new_user_by_referral) || 0 + (newNotification === null || newNotification === void 0 ? void 0 : newNotification.news_publish) || 0 + (newNotification === null || newNotification === void 0 ? void 0 : newNotification.notification) || 0 + (newNotification === null || newNotification === void 0 ? void 0 : newNotification.status_changed) || 0;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"icon-button\",\n      onClick: handleOpenNotificationDrawer,\n      children: /*#__PURE__*/_jsxDEV(Badge, {\n        count: sumOfAllNotificationStatistics,\n        children: /*#__PURE__*/_jsxDEV(BellOutlined, {\n          style: {\n            fontSize: 20\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NotificationDrawer, {\n      visible: notificationDrawer,\n      handleClose: handleClose,\n      list: notificationList,\n      readAll: handleReadAllNotifications,\n      loading: loading,\n      paginate: paginate,\n      setPaginate: setPaginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(NotificationBar, \"se6cFkNzrqM07l458AaSJRCIibk=\", false, function () {\n  return [useDidUpdate];\n});\n\n_c = NotificationBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"NotificationBar\");","map":{"version":3,"names":["React","useEffect","useState","BellOutlined","NotificationDrawer","Badge","notificationService","useDidUpdate","initialPerPage","NotificationBar","notificationDrawer","setNotificationDrawer","notificationList","setNotificationList","newNotification","setNewNotification","loading","setLoading","paginate","setPaginate","page","perPage","fetchNotificationStatistic","getStatistics","then","res","fetchNotificationList","params","type","column","sort","getAll","console","log","prev","data","finally","fetchReadAllNotifications","readAll","intervalId","setInterval","clearInterval","handleOpenNotificationDrawer","handleReadAllNotifications","handleClose","sumOfAllNotificationStatistics","new_order","new_user_by_referral","news_publish","notification","status_changed","fontSize"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/components/notificationBar.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { BellOutlined } from '@ant-design/icons';\nimport NotificationDrawer from './notification-drawer';\nimport { Badge } from 'antd';\nimport notificationService from 'services/notification';\nimport useDidUpdate from 'helpers/useDidUpdate';\n// import PushNotification from './push-notification';\n\nconst initialPerPage = 15;\n\nexport default function NotificationBar() {\n  const [notificationDrawer, setNotificationDrawer] = useState(false);\n  const [notificationList, setNotificationList] = useState([]);\n  const [newNotification, setNewNotification] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [paginate, setPaginate] = useState({\n    page: 1,\n    perPage: initialPerPage,\n  });\n\n  const fetchNotificationStatistic = () => {\n    notificationService.getStatistics().then((res) => {\n      setNewNotification(res);\n    });\n  };\n\n  const fetchNotificationList = (paginate) => {\n    setLoading(true);\n    const params = {\n      type: 'notification',\n      column: 'id',\n      sort: 'desc',\n      perPage: initialPerPage,\n      page: 1,\n      ...paginate,\n    };\n    notificationService\n      .getAll(params)\n      .then((res) => {\n        console.log('fired');\n        setNotificationList((prev) => [...prev, ...res?.data]);\n      })\n      .finally(() => setLoading(false));\n  };\n\n  const fetchReadAllNotifications = () => {\n    return notificationService.readAll();\n  };\n\n  useEffect(() => {\n    fetchNotificationStatistic();\n    const intervalId = setInterval(fetchNotificationStatistic, 5000);\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useDidUpdate(() => {\n    if (paginate?.page > 1) {\n      fetchNotificationList(paginate);\n    }\n  }, [paginate?.page]);\n\n  const handleOpenNotificationDrawer = () => {\n    fetchNotificationList(paginate);\n    setNotificationDrawer(true);\n  };\n\n  const handleReadAllNotifications = () => {\n    setLoading(true);\n    return fetchReadAllNotifications().finally(() => setLoading(false));\n  };\n\n  const handleClose = () => {\n    setNotificationDrawer(false);\n    setPaginate({ page: 1, perPage: initialPerPage });\n    setNotificationList([]);\n  };\n\n  const sumOfAllNotificationStatistics =\n    newNotification?.new_order ||\n    0 + newNotification?.new_user_by_referral ||\n    0 + newNotification?.news_publish ||\n    0 + newNotification?.notification ||\n    0 + newNotification?.status_changed ||\n    0;\n\n  return (\n    <>\n      <span className='icon-button' onClick={handleOpenNotificationDrawer}>\n        <Badge count={sumOfAllNotificationStatistics}>\n          <BellOutlined style={{ fontSize: 20 }} />\n        </Badge>\n      </span>\n\n      <NotificationDrawer\n        visible={notificationDrawer}\n        handleClose={handleClose}\n        list={notificationList}\n        readAll={handleReadAllNotifications}\n        loading={loading}\n        paginate={paginate}\n        setPaginate={setPaginate}\n      />\n      {/*<PushNotification refetch={fetchNotificationList} />*/}\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}