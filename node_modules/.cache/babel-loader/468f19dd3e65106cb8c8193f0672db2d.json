{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/update/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Card, Button } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport Dragger from 'antd/lib/upload/Dragger';\nimport { CloudUploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport updateService from '../../services/update';\nimport { setMenuData } from '../../redux/slices/menu';\nimport { toast } from 'react-toastify';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Update() {\n  _s();\n\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const dispatch = useDispatch();\n  const {\n    t\n  } = useTranslation();\n  const {\n    activeMenu\n  } = useSelector(state => state.menu, shallowEqual);\n\n  const updateBackend = () => {\n    setLoadingBtn(true);\n    updateService.update().then(() => toast.success(t('successfully.updated'))).finally(() => setLoadingBtn(false));\n  };\n\n  const createFile = file => {\n    return {\n      uid: file.title,\n      name: file.title,\n      status: 'done',\n      url: file.title,\n      created: true\n    };\n  };\n\n  const handleUpload = _ref => {\n    let {\n      file,\n      onSuccess\n    } = _ref;\n    const formData = new FormData();\n    formData.append('file', file);\n    updateService.upload(formData).then(_ref2 => {\n      let {\n        data\n      } = _ref2;\n      dispatch(setMenuData({\n        activeMenu,\n        data: createFile(data)\n      }));\n      onSuccess('ok');\n    });\n  };\n\n  const beforeUpload = file => {\n    const isPNG = file.type === 'image/png';\n    const isJPG = file.type === 'image/jpg';\n    const isJPEG = file.type === 'image/jpeg';\n\n    if (isPNG || isJPEG || isJPG) {\n      toast.error(`${file.name} is not valid file`);\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    title: t('update'),\n    extra: /*#__PURE__*/_jsxDEV(Button, {\n      type: \"primary\",\n      icon: /*#__PURE__*/_jsxDEV(CloudUploadOutlined, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this),\n      loading: loadingBtn,\n      onClick: updateBackend,\n      children: t('update.database')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this),\n    children: /*#__PURE__*/_jsxDEV(Dragger, {\n      name: \"file\",\n      multiple: false,\n      maxCount: 1,\n      customRequest: handleUpload,\n      defaultFileList: activeMenu !== null && activeMenu !== void 0 && activeMenu.data ? [activeMenu === null || activeMenu === void 0 ? void 0 : activeMenu.data] : null,\n      beforeUpload: beforeUpload,\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-drag-icon\",\n        children: /*#__PURE__*/_jsxDEV(InboxOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-text\",\n        children: \"Click or drag file to this area to upload\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"ant-upload-hint\",\n        children: \"In order to update database using this file you need to click button above\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Update, \"9DMjnyyGTLUW7BYmFCgArEN940c=\", false, function () {\n  return [useDispatch, useTranslation, useSelector];\n});\n\n_c = Update;\n\nvar _c;\n\n$RefreshReg$(_c, \"Update\");","map":{"version":3,"names":["React","useState","Card","Button","shallowEqual","useDispatch","useSelector","useTranslation","Dragger","CloudUploadOutlined","InboxOutlined","updateService","setMenuData","toast","Update","loadingBtn","setLoadingBtn","dispatch","t","activeMenu","state","menu","updateBackend","update","then","success","finally","createFile","file","uid","title","name","status","url","created","handleUpload","onSuccess","formData","FormData","append","upload","data","beforeUpload","isPNG","type","isJPG","isJPEG","error"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/update/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Card, Button } from 'antd';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { useTranslation } from 'react-i18next';\nimport Dragger from 'antd/lib/upload/Dragger';\nimport { CloudUploadOutlined, InboxOutlined } from '@ant-design/icons';\nimport updateService from '../../services/update';\nimport { setMenuData } from '../../redux/slices/menu';\nimport { toast } from 'react-toastify';\n\nexport default function Update() {\n  const [loadingBtn, setLoadingBtn] = useState(false);\n  const dispatch = useDispatch();\n  const { t } = useTranslation();\n\n  const { activeMenu } = useSelector((state) => state.menu, shallowEqual);\n\n  const updateBackend = () => {\n    setLoadingBtn(true);\n    updateService\n      .update()\n      .then(() => toast.success(t('successfully.updated')))\n      .finally(() => setLoadingBtn(false));\n  };\n\n  const createFile = (file) => {\n    return {\n      uid: file.title,\n      name: file.title,\n      status: 'done',\n      url: file.title,\n      created: true,\n    };\n  };\n\n  const handleUpload = ({ file, onSuccess }) => {\n    const formData = new FormData();\n    formData.append('file', file);\n    updateService.upload(formData).then(({ data }) => {\n      dispatch(setMenuData({ activeMenu, data: createFile(data) }));\n      onSuccess('ok');\n    });\n  };\n\n  const beforeUpload = (file) => {\n    const isPNG = file.type === 'image/png';\n    const isJPG = file.type === 'image/jpg';\n    const isJPEG = file.type === 'image/jpeg';\n    if (isPNG || isJPEG || isJPG) {\n      toast.error(`${file.name} is not valid file`);\n      return false;\n    }\n  };\n\n  return (\n    <Card\n      title={t('update')}\n      extra={\n        <Button\n          type='primary'\n          icon={<CloudUploadOutlined />}\n          loading={loadingBtn}\n          onClick={updateBackend}\n        >\n          {t('update.database')}\n        </Button>\n      }\n    >\n      <Dragger\n        name='file'\n        multiple={false}\n        maxCount={1}\n        customRequest={handleUpload}\n        defaultFileList={activeMenu?.data ? [activeMenu?.data] : null}\n        beforeUpload={beforeUpload}\n      >\n        <p className='ant-upload-drag-icon'>\n          <InboxOutlined />\n        </p>\n        <p className='ant-upload-text'>\n          Click or drag file to this area to upload\n        </p>\n        <p className='ant-upload-hint'>\n          In order to update database using this file you need to click button\n          above\n        </p>\n      </Dragger>\n    </Card>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}