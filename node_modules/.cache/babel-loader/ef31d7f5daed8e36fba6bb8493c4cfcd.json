{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/dashboard/orderChart.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo } from 'react';\nimport { Badge, Card, Select, Spin } from 'antd';\nimport moment from 'moment';\nimport ChartWidget from 'components/chart-widget';\nimport { COLORS } from 'constants/ChartConstant';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { fetchOrderCounts, fetchSellerOrderCounts, filterOrderCounts } from 'redux/slices/statistics/orderCounts';\nimport { useTranslation } from 'react-i18next';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OrderChart() {\n  _s();\n\n  const {\n    t\n  } = useTranslation();\n  const dispatch = useDispatch();\n  const {\n    counts,\n    params,\n    loading\n  } = useSelector(state => state.orderCounts, shallowEqual);\n  const {\n    role\n  } = useSelector(state => state.auth.user, shallowEqual);\n  const {\n    direction\n  } = useSelector(state => state.theme.theme, shallowEqual);\n  const categories = useMemo(() => counts.map(item => moment(item.time).format('D MMM')), [counts]);\n  const chartData = useMemo(() => {\n    return [{\n      name: t('orders'),\n      data: (counts === null || counts === void 0 ? void 0 : counts.map(item => item.count)) || []\n    }];\n  }, [counts]);\n\n  const handleChange = value => {\n    const payload = {\n      time: value\n    };\n    dispatch(filterOrderCounts(payload));\n\n    switch (role) {\n      case 'admin':\n        dispatch(fetchOrderCounts(payload));\n        break;\n\n      case 'seller':\n        dispatch(fetchSellerOrderCounts(payload));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Card, {\n    className: \"h-100\",\n    title: t('orders'),\n    extra: /*#__PURE__*/_jsxDEV(Select, {\n      value: params.time,\n      size: \"small\",\n      style: {\n        minWidth: 110\n      },\n      onSelect: handleChange,\n      defaultValue: \"subMonth\",\n      children: [/*#__PURE__*/_jsxDEV(Select.Option, {\n        value: \"subWeek\",\n        children: t('this.week')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: \"subMonth\",\n        children: t('this.month')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Select.Option, {\n        value: \"subYear\",\n        children: t('this.year')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this),\n    children: [loading && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loader\",\n      children: /*#__PURE__*/_jsxDEV(Spin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mr-5\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"font-weight-bold mb-1\",\n          children: counts === null || counts === void 0 ? void 0 : counts.reduce((total, item) => total += item === null || item === void 0 ? void 0 : item.count, 0)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(Badge, {\n            color: COLORS[6]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), t('total.orders.count')]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChartWidget, {\n        card: false,\n        series: chartData,\n        xAxis: categories,\n        height: 280,\n        customOptions: {\n          colors: [COLORS[6], COLORS[0]],\n          legend: {\n            show: false\n          },\n          stroke: {\n            width: 2.5,\n            curve: 'smooth'\n          }\n        },\n        direction: direction\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OrderChart, \"yxSIVVwL6UtM2+s7SSf26onQPDQ=\", false, function () {\n  return [useTranslation, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = OrderChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrderChart\");","map":{"version":3,"names":["React","useMemo","Badge","Card","Select","Spin","moment","ChartWidget","COLORS","shallowEqual","useDispatch","useSelector","fetchOrderCounts","fetchSellerOrderCounts","filterOrderCounts","useTranslation","OrderChart","t","dispatch","counts","params","loading","state","orderCounts","role","auth","user","direction","theme","categories","map","item","time","format","chartData","name","data","count","handleChange","value","payload","minWidth","reduce","total","colors","legend","show","stroke","width","curve"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/dashboard/orderChart.js"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { Badge, Card, Select, Spin } from 'antd';\nimport moment from 'moment';\nimport ChartWidget from 'components/chart-widget';\nimport { COLORS } from 'constants/ChartConstant';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport {\n  fetchOrderCounts,\n  fetchSellerOrderCounts,\n  filterOrderCounts,\n} from 'redux/slices/statistics/orderCounts';\nimport { useTranslation } from 'react-i18next';\n\nexport default function OrderChart() {\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n  const { counts, params, loading } = useSelector(\n    (state) => state.orderCounts,\n    shallowEqual,\n  );\n  const { role } = useSelector((state) => state.auth.user, shallowEqual);\n  const { direction } = useSelector((state) => state.theme.theme, shallowEqual);\n  const categories = useMemo(\n    () => counts.map((item) => moment(item.time).format('D MMM')),\n    [counts],\n  );\n  const chartData = useMemo(() => {\n    return [\n      {\n        name: t('orders'),\n        data: counts?.map((item) => item.count) || [],\n      },\n    ];\n  }, [counts]);\n\n  const handleChange = (value) => {\n    const payload = { time: value };\n    dispatch(filterOrderCounts(payload));\n    switch (role) {\n      case 'admin':\n        dispatch(fetchOrderCounts(payload));\n        break;\n      case 'seller':\n        dispatch(fetchSellerOrderCounts(payload));\n        break;\n\n      default:\n        break;\n    }\n  };\n\n  return (\n    <Card\n      className='h-100'\n      title={t('orders')}\n      extra={\n        <Select\n          value={params.time}\n          size='small'\n          style={{ minWidth: 110 }}\n          onSelect={handleChange}\n          defaultValue='subMonth'\n        >\n          <Select.Option value='subWeek'>{t('this.week')}</Select.Option>\n          <Select.Option value='subMonth'>{t('this.month')}</Select.Option>\n          <Select.Option value='subYear'>{t('this.year')}</Select.Option>\n        </Select>\n      }\n    >\n      {loading && (\n        <div className='loader'>\n          <Spin />\n        </div>\n      )}\n      <div className='d-flex'>\n        <div className='mr-5'>\n          <h2 className='font-weight-bold mb-1'>\n            {counts?.reduce((total, item) => (total += item?.count), 0)}\n          </h2>\n          <p>\n            <Badge color={COLORS[6]} />\n            {t('total.orders.count')}\n          </p>\n        </div>\n      </div>\n      <div>\n        <ChartWidget\n          card={false}\n          series={chartData}\n          xAxis={categories}\n          height={280}\n          customOptions={{\n            colors: [COLORS[6], COLORS[0]],\n            legend: {\n              show: false,\n            },\n            stroke: {\n              width: 2.5,\n              curve: 'smooth',\n            },\n          }}\n          direction={direction}\n        />\n      </div>\n    </Card>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}