{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport statisticService from '../../../services/statistics';\nimport sellerStatisticService from '../../../services/seller/statistics';\nimport deliverymanStatisticService from '../../../services/deliveryman/statistics';\nimport waiterStatisticService from '../../../services/waiter/statistics';\nconst initialState = {\n  loading: false,\n  counts: {},\n  error: ''\n};\nexport const fetchStatistics = createAsyncThunk('statistics/fetchStatistics', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return statisticService.getAll(params).then(res => res);\n});\nexport const fetchSellerStatisticsCount = createAsyncThunk('statistics/fetchSellerStatisticsCount', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return sellerStatisticService.getAll(params).then(res => res);\n});\nexport const fetchDeliverymanStatisticsCount = createAsyncThunk('statistics/fetchDeliverymanStatisticsCount', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return deliverymanStatisticService.getAllCount(params).then(res => res);\n});\nexport const fetchWaiterStatisticsCount = createAsyncThunk('statistics/fetchWaiterStatisticsCount', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return waiterStatisticService.getAllCount(params).then(res => res);\n});\nconst statisticsCountSlice = createSlice({\n  name: 'statisticsCount',\n  initialState,\n  extraReducers: builder => {\n    // admin\n    builder.addCase(fetchStatistics.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchStatistics.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.counts = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchStatistics.rejected, (state, action) => {\n      state.loading = false;\n      state.counts = {};\n      state.error = action.error.message;\n    }); // seller\n\n    builder.addCase(fetchSellerStatisticsCount.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSellerStatisticsCount.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.counts = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchSellerStatisticsCount.rejected, (state, action) => {\n      state.loading = false;\n      state.counts = {};\n      state.error = action.error.message;\n    }); // delivery\n\n    builder.addCase(fetchDeliverymanStatisticsCount.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchDeliverymanStatisticsCount.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.counts = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchDeliverymanStatisticsCount.rejected, (state, action) => {\n      state.loading = false;\n      state.counts = {};\n      state.error = action.error.message;\n    }); // waiter\n\n    builder.addCase(fetchWaiterStatisticsCount.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchWaiterStatisticsCount.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.counts = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchWaiterStatisticsCount.rejected, (state, action) => {\n      state.loading = false;\n      state.counts = {};\n      state.error = action.error.message;\n    });\n  }\n});\nexport default statisticsCountSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","statisticService","sellerStatisticService","deliverymanStatisticService","waiterStatisticService","initialState","loading","counts","error","fetchStatistics","params","getAll","then","res","fetchSellerStatisticsCount","fetchDeliverymanStatisticsCount","getAllCount","fetchWaiterStatisticsCount","statisticsCountSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","data","rejected","message","reducer"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/redux/slices/statistics/count.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport statisticService from '../../../services/statistics';\nimport sellerStatisticService from '../../../services/seller/statistics';\nimport deliverymanStatisticService from '../../../services/deliveryman/statistics';\nimport waiterStatisticService from '../../../services/waiter/statistics';\n\nconst initialState = {\n  loading: false,\n  counts: {},\n  error: '',\n};\n\nexport const fetchStatistics = createAsyncThunk(\n  'statistics/fetchStatistics',\n  (params = {}) => {\n    return statisticService.getAll(params).then((res) => res);\n  }\n);\n\nexport const fetchSellerStatisticsCount = createAsyncThunk(\n  'statistics/fetchSellerStatisticsCount',\n  (params = {}) => {\n    return sellerStatisticService.getAll(params).then((res) => res);\n  }\n);\n\nexport const fetchDeliverymanStatisticsCount = createAsyncThunk(\n  'statistics/fetchDeliverymanStatisticsCount',\n  (params = {}) => {\n    return deliverymanStatisticService.getAllCount(params).then((res) => res);\n  }\n);\n\nexport const fetchWaiterStatisticsCount = createAsyncThunk(\n  'statistics/fetchWaiterStatisticsCount',\n  (params = {}) => {\n    return waiterStatisticService.getAllCount(params).then((res) => res);\n  }\n);\n\nconst statisticsCountSlice = createSlice({\n  name: 'statisticsCount',\n  initialState,\n  extraReducers: (builder) => {\n    // admin\n    builder.addCase(fetchStatistics.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchStatistics.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.counts = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchStatistics.rejected, (state, action) => {\n      state.loading = false;\n      state.counts = {};\n      state.error = action.error.message;\n    });\n\n    // seller\n    builder.addCase(fetchSellerStatisticsCount.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSellerStatisticsCount.fulfilled, (state, action) => {\n      const { payload } = action;\n\n      state.loading = false;\n      state.counts = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchSellerStatisticsCount.rejected, (state, action) => {\n      state.loading = false;\n      state.counts = {};\n      state.error = action.error.message;\n    });\n\n    // delivery\n    builder.addCase(fetchDeliverymanStatisticsCount.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(\n      fetchDeliverymanStatisticsCount.fulfilled,\n      (state, action) => {\n        const { payload } = action;\n        state.loading = false;\n        state.counts = payload.data;\n        state.error = '';\n      }\n    );\n    builder.addCase(\n      fetchDeliverymanStatisticsCount.rejected,\n      (state, action) => {\n        state.loading = false;\n        state.counts = {};\n        state.error = action.error.message;\n      }\n    );\n\n    // waiter\n    builder.addCase(fetchWaiterStatisticsCount.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchWaiterStatisticsCount.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.counts = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchWaiterStatisticsCount.rejected, (state, action) => {\n      state.loading = false;\n      state.counts = {};\n      state.error = action.error.message;\n    });\n  },\n});\n\nexport default statisticsCountSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}