{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Button,Card,Col,Modal,Row}from'antd';import{useTranslation}from'react-i18next';import subscriptionService from'services/seller/subscriptions';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{fetchRestPayments}from'redux/slices/payment';import Loading from'components/loading';import{toast}from'react-toastify';import{fetchMyShop}from'redux/slices/myShop';import Paystack from'assets/images/paystack.svg';import{FaPaypal}from'react-icons/fa';import{SiStripe,SiRazorpay}from'react-icons/si';import{AiOutlineWallet}from'react-icons/ai';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const acceptedPayments=['wallet'];export default function SellerSubscriptionModal(_ref){var _payments$filter;let{modal,handleCancel}=_ref;const{t}=useTranslation();const dispatch=useDispatch();const{seller}=useSelector(state=>state.myShop.myShop,shallowEqual);const[loadingBtn,setLoadingBtn]=useState(false);const[paymentType,setPaymentType]=useState({});const{payments,loading}=useSelector(state=>state.payment,shallowEqual);useEffect(()=>{dispatch(fetchRestPayments({}));},[]);const handleSubmit=()=>{var _seller$wallet;if(!paymentType.id){toast.warning(t('please.select.payment.type'));return;}if(paymentType.tag==='wallet'&&(seller===null||seller===void 0?void 0:(_seller$wallet=seller.wallet)===null||_seller$wallet===void 0?void 0:_seller$wallet.price)<modal.price){toast.warning(t('insufficient.balance'));return;}setLoadingBtn(true);subscriptionService.attach(modal.id).then(_ref2=>{let{data}=_ref2;return transactionCreate(data.id);}).error(()=>setLoadingBtn(false));};function transactionCreate(id){const payload={payment_sys_id:paymentType.id};subscriptionService.transactionCreate(id,payload).then(()=>{handleCancel();toast.success(t('successfully.purchased'));dispatch(fetchMyShop({}));}).finally(()=>setLoadingBtn(false));}const selectPayment=type=>{if(!acceptedPayments.includes(type.tag)){toast.warning(t('cannot.work.demo'));return;}setPaymentType(type);};const handleAddIcon=data=>{switch(data){case'wallet':return/*#__PURE__*/_jsx(AiOutlineWallet,{size:80});case'paypal':return/*#__PURE__*/_jsx(FaPaypal,{size:80});case'stripe':return/*#__PURE__*/_jsx(SiStripe,{size:80});case'razorpay':return/*#__PURE__*/_jsx(SiRazorpay,{size:80});case'paystack':return/*#__PURE__*/_jsx(\"img\",{src:Paystack,alt:\"img\",width:\"80\",height:\"80\"});default:return/*#__PURE__*/_jsx(AiOutlineWallet,{size:80});}};return/*#__PURE__*/_jsx(Modal,{visible:!!modal,title:t('purchase.subscription'),onCancel:handleCancel,footer:[/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:handleSubmit,loading:loadingBtn,children:t('save')},'save-btn'),/*#__PURE__*/_jsx(Button,{type:\"default\",onClick:handleCancel,children:t('cancel')},'cancel-btn')],children:!loading?/*#__PURE__*/_jsx(Row,{gutter:12,children:payments===null||payments===void 0?void 0:(_payments$filter=payments.filter(item=>(item===null||item===void 0?void 0:item.tag)!=='cash'))===null||_payments$filter===void 0?void 0:_payments$filter.map((item,index)=>/*#__PURE__*/_jsx(Col,{span:8,children:/*#__PURE__*/_jsxs(Card,{className:`payment-card ${(paymentType===null||paymentType===void 0?void 0:paymentType.tag)===item.tag?'active':''}`,onClick:()=>selectPayment(item),children:[/*#__PURE__*/_jsx(\"div\",{className:\"payment-icon\",children:handleAddIcon(item===null||item===void 0?void 0:item.tag)}),/*#__PURE__*/_jsx(\"div\",{className:\"font-weight-bold mt-2\",children:t(item===null||item===void 0?void 0:item.tag)})]})},index))}):/*#__PURE__*/_jsx(Loading,{})});}","map":null,"metadata":{},"sourceType":"module"}