{"ast":null,"code":"import React,{useEffect,useState}from'react';import{useNavigate,useParams}from'react-router-dom';import{toast}from'react-toastify';import{Form,Spin}from'antd';import{batch,shallowEqual,useDispatch,useSelector}from'react-redux';import{disableRefetch,removeFromMenu,setMenuData}from'../../redux/slices/menu';import{fetchBanners}from'../../redux/slices/banner';import bannerService from'../../services/banner';import{useTranslation}from'react-i18next';import getTranslationFields from'../../helpers/getTranslationFields';import BannerForm from'./banner-form';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const BannerEdit=()=>{const{t}=useTranslation();const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const dispatch=useDispatch();const[form]=Form.useForm();const navigate=useNavigate();const{id}=useParams();const[loading,setLoading]=useState(false);const{languages}=useSelector(state=>state.formLang,shallowEqual);useEffect(()=>{return()=>{const data=form.getFieldsValue(true);dispatch(setMenuData({activeMenu,data}));};},[]);const createMediaFile=items=>{const mediaObject={images:[],previews:[]};const previews=items.filter(item=>item.preview).map(item=>({uid:item.id,name:item.preview,url:item.preview}));const videos=items.filter(item=>item.preview).map(item=>({uid:item.id,name:item.path,url:item.path,isVideo:true}));mediaObject.previews=previews;mediaObject.images=videos;return mediaObject;};const createImages=items=>items.map(item=>({uid:item.id,name:item.path,url:item.path,isVideo:Boolean(item.preview)}));function getLanguageFields(data){if(!data){return{};}const{translations}=data;const result=languages.map(item=>{var _translations$find,_translations$find2;return{[`title[${item.locale}]`]:(_translations$find=translations.find(el=>el.locale===item.locale))===null||_translations$find===void 0?void 0:_translations$find.title,[`description[${item.locale}]`]:(_translations$find2=translations.find(el=>el.locale===item.locale))===null||_translations$find2===void 0?void 0:_translations$find2.description};});return Object.assign({},...result);}const getBanner=alias=>{setLoading(true);bannerService.getById(alias).then(res=>{var _banner$products;const banner=res.data;const data={...banner,initialMediaFile:createMediaFile(res.data.galleries),img:createImages(banner.galleries),products:banner===null||banner===void 0?void 0:(_banner$products=banner.products)===null||_banner$products===void 0?void 0:_banner$products.map(item=>{var _item$translation;return{label:(_item$translation=item.translation)===null||_item$translation===void 0?void 0:_item$translation.title,value:item.id};}),...getLanguageFields(banner)};form.setFieldsValue(data);dispatch(setMenuData({activeMenu,data}));}).finally(()=>{dispatch(disableRefetch(activeMenu));setLoading(false);});};const onFinish=(values,image,mediaList)=>{var _values$products;const videos=mediaList.images.map(item=>item.name);const previews=mediaList.previews.map(item=>item.name);const body={products:(_values$products=values.products)===null||_values$products===void 0?void 0:_values$products.map(i=>i.value),images:[...videos,...image.map(image=>image.name)],previews,clickable:true,title:getTranslationFields(languages,values,'title'),description:getTranslationFields(languages,values,'description')};const nextUrl='banners';return bannerService.update(id,body).then(()=>{toast.success(t('successfully.updated'));batch(()=>{dispatch(removeFromMenu({...activeMenu,nextUrl}));dispatch(fetchBanners({}));});navigate(`/${nextUrl}`);});};useEffect(()=>{if(activeMenu.refetch){getBanner(id);}},[activeMenu.refetch]);return/*#__PURE__*/_jsx(_Fragment,{children:!loading?/*#__PURE__*/_jsx(BannerForm,{form:form,handleSubmit:onFinish}):/*#__PURE__*/_jsx(\"div\",{className:\"d-flex justify-content-center align-items-center\",children:/*#__PURE__*/_jsx(Spin,{size:\"large\",className:\"py-5\"})})});};export default BannerEdit;","map":null,"metadata":{},"sourceType":"module"}