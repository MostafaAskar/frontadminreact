{"ast":null,"code":"import React,{useState}from'react';import{Button,Col,Form,Modal,Row,Select,Input}from'antd';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{useTranslation}from'react-i18next';import productService from'../../services/product';import requestAdminModelsService from'services/request-models';import{disableRefetch}from'../../redux/slices/menu';import{fetchProducts}from'../../redux/slices/product';import{toast}from'react-toastify';import{fetchRequestModels}from'redux/slices/request-models';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const productStatuses=['published','pending','unpublished'];const requestStatuses=['accept','decline'];const body={type:'product'};export default function ProductStatusModal(_ref){let{orderDetails:data,handleCancel,paramsData,listType='product'}=_ref;const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const[form]=Form.useForm();const dispatch=useDispatch();const{t}=useTranslation();const[loading,setLoading]=useState(false);const[status,setStatus]=useState(data===null||data===void 0?void 0:data.status);const statuses=listType==='request'?requestStatuses:productStatuses;const productStatusUpdate=(id,params)=>{productService.updateStatus(id,params).then(()=>{handleCancel();toast.success(t('successfully.updated'));dispatch(fetchProducts(paramsData));dispatch(disableRefetch(activeMenu));}).finally(()=>setLoading(false));};const requestStatusChange=(id,data)=>{const params={status_note:data.status_note,status:data.status==='accept'?'approved':'canceled'};requestAdminModelsService.changeStatus(id,params).then(()=>{handleCancel();toast.success(t('successfully.updated'));dispatch(fetchRequestModels(body));dispatch(disableRefetch(activeMenu));}).finally(()=>setLoading(false));};const onFinish=values=>{setLoading(true);const params={...values};if(listType==='product'){productStatusUpdate(data.uuid,params);}else if(listType){requestStatusChange(data.id,params);}};return/*#__PURE__*/_jsx(Modal,{visible:!!data,title:data.title,onCancel:handleCancel,footer:[/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>form.submit(),loading:loading,children:t('save')}),/*#__PURE__*/_jsx(Button,{type:\"default\",onClick:handleCancel,children:t('cancel')})],children:/*#__PURE__*/_jsx(Form,{form:form,layout:\"vertical\",onFinish:onFinish,initialValues:listType==='product'?{status:data.status,status_note:data.status_note}:{status:'accept',status_note:data.status_note},children:/*#__PURE__*/_jsx(Row,{gutter:12,children:/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(Form.Item,{label:t('status'),name:\"status\",rules:[{required:true,message:t('required')}],children:/*#__PURE__*/_jsx(Select,{onChange:status=>setStatus(status),children:statuses.map((item,idx)=>/*#__PURE__*/_jsx(Select.Option,{value:item,children:t(item)},item+idx))})}),(status==='unpublished'||status==='decline')&&/*#__PURE__*/_jsx(Form.Item,{name:\"status_note\",label:t('note'),rules:[{validator(_,value){if(!value){return Promise.reject(new Error(t('required')));}else if(value&&(value===null||value===void 0?void 0:value.trim())===''){return Promise.reject(new Error(t('no.empty.space')));}else if(value&&(value===null||value===void 0?void 0:value.trim().length)<2){return Promise.reject(new Error(t('must.be.at.least.2')));}return Promise.resolve();}}],children:/*#__PURE__*/_jsx(Input.TextArea,{maxLength:250,showCount:true})})]})})})});}","map":null,"metadata":{},"sourceType":"module"}