{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/seller-views/products/extra-value-select-modal.js\",\n    _s = $RefreshSig$();\n\nimport { Badge, Button, Checkbox, Empty, List, Modal, Space } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport extraService from 'services/extra';\nimport ExtraValueModal from './Extras/extra-value-modal';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { GetColorName } from 'hex-color-to-color-name';\nimport Scrollbars from 'react-custom-scrollbars';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ExtraValueSelectModal = _ref => {\n  _s();\n\n  let {\n    extra,\n    onClose,\n    onSelect\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [extraValues, setExtraValues] = useState([]);\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n\n  const handleChange = values => {\n    setSelectedValues(values);\n  };\n\n  const handleSelect = () => {\n    const list = [];\n    extraValues.forEach(extraValue => {\n      selectedValues.forEach(value => {\n        if (extraValue.value === value) {\n          list.push(extraValue);\n        }\n      });\n    });\n    onSelect(extra === null || extra === void 0 ? void 0 : extra.value, list);\n    onClose();\n  };\n\n  function fetchExtra(id) {\n    setLoading(true);\n    extraService.getGroupById(id).then(res => setExtraValues(res.data.extra_values.map(item => ({\n      label: item.value,\n      value: item.id,\n      group_type: item.group.type\n    })))).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  useEffect(() => {\n    if (!!(extra !== null && extra !== void 0 && extra.value) && !isAddModalOpen) {\n      var _extra$values;\n\n      fetchExtra(extra.value);\n      setSelectedValues((extra === null || extra === void 0 ? void 0 : (_extra$values = extra.values) === null || _extra$values === void 0 ? void 0 : _extra$values.map(value => value.value)) || []);\n    }\n  }, [extra === null || extra === void 0 ? void 0 : extra.value, isAddModalOpen]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Modal, {\n      visible: !!extra,\n      onCancel: onClose,\n      footer: [/*#__PURE__*/_jsxDEV(Button, {\n        onClick: onClose,\n        children: t('cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), !loading && extraValues.length > 0 && /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleSelect,\n        type: \"primary\",\n        children: t('save')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }, this)],\n      children: [/*#__PURE__*/_jsxDEV(Scrollbars, {\n        autoHide: true,\n        autoHeight: true,\n        autoHeightMin: '60vh',\n        autoHeightMax: '60vh',\n        children: /*#__PURE__*/_jsxDEV(Checkbox.Group, {\n          value: selectedValues,\n          onChange: handleChange,\n          className: \"w-100\",\n          children: (extraValues === null || extraValues === void 0 ? void 0 : extraValues.length) === 0 && !loading ? /*#__PURE__*/_jsxDEV(Empty, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(List, {\n            dataSource: extraValues,\n            loading: loading,\n            renderItem: item => /*#__PURE__*/_jsxDEV(List.Item, {\n              children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                value: item.value,\n                children: item.group_type === 'color' ? /*#__PURE__*/_jsxDEV(Space, {\n                  size: \"small\",\n                  children: [/*#__PURE__*/_jsxDEV(Badge, {\n                    className: \"extras-color-badge\",\n                    color: item === null || item === void 0 ? void 0 : item.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 27\n                  }, this), GetColorName(item === null || item === void 0 ? void 0 : item.label), /*#__PURE__*/_jsxDEV(\"span\", {\n                    children: [\"(\", item === null || item === void 0 ? void 0 : item.label, \")\"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 93,\n                  columnNumber: 25\n                }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: item === null || item === void 0 ? void 0 : item.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), !loading ? /*#__PURE__*/_jsxDEV(Button, {\n        type: \"link\",\n        onClick: () => setIsAddModalOpen(true),\n        style: {\n          paddingLeft: 0\n        },\n        icon: /*#__PURE__*/_jsxDEV(PlusOutlined, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 19\n        }, this),\n        children: t('add.new.extra')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), extra && /*#__PURE__*/_jsxDEV(ExtraValueModal, {\n      isVisible: isAddModalOpen,\n      modal: {\n        label: extra === null || extra === void 0 ? void 0 : extra.label,\n        value: extra === null || extra === void 0 ? void 0 : extra.id,\n        key: extra === null || extra === void 0 ? void 0 : extra.id\n      },\n      handleCancel: () => setIsAddModalOpen(false),\n      groupId: extra === null || extra === void 0 ? void 0 : extra.value,\n      onSuccess: () => fetchExtra(extra === null || extra === void 0 ? void 0 : extra.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ExtraValueSelectModal, \"XCF+CQQY6nvvxyIOmkcvwEwIJ/c=\", false, function () {\n  return [useTranslation];\n});\n\n_c = ExtraValueSelectModal;\nexport default ExtraValueSelectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExtraValueSelectModal\");","map":{"version":3,"names":["Badge","Button","Checkbox","Empty","List","Modal","Space","React","useEffect","useState","useTranslation","extraService","ExtraValueModal","PlusOutlined","GetColorName","Scrollbars","ExtraValueSelectModal","extra","onClose","onSelect","t","loading","setLoading","extraValues","setExtraValues","selectedValues","setSelectedValues","isAddModalOpen","setIsAddModalOpen","handleChange","values","handleSelect","list","forEach","extraValue","value","push","fetchExtra","id","getGroupById","then","res","data","extra_values","map","item","label","group_type","group","type","finally","length","paddingLeft","key"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/seller-views/products/extra-value-select-modal.js"],"sourcesContent":["import { Badge, Button, Checkbox, Empty, List, Modal, Space } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport extraService from 'services/extra';\nimport ExtraValueModal from './Extras/extra-value-modal';\nimport { PlusOutlined } from '@ant-design/icons';\nimport { GetColorName } from 'hex-color-to-color-name';\nimport Scrollbars from 'react-custom-scrollbars';\n\nconst ExtraValueSelectModal = ({ extra, onClose, onSelect }) => {\n  const { t } = useTranslation();\n  const [loading, setLoading] = useState(false);\n  const [extraValues, setExtraValues] = useState([]);\n  const [selectedValues, setSelectedValues] = useState([]);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n\n  const handleChange = (values) => {\n    setSelectedValues(values);\n  };\n\n  const handleSelect = () => {\n    const list = [];\n    extraValues.forEach((extraValue) => {\n      selectedValues.forEach((value) => {\n        if (extraValue.value === value) {\n          list.push(extraValue);\n        }\n      });\n    });\n    onSelect(extra?.value, list);\n    onClose();\n  };\n\n  function fetchExtra(id) {\n    setLoading(true);\n    extraService\n      .getGroupById(id)\n      .then((res) =>\n        setExtraValues(\n          res.data.extra_values.map((item) => ({\n            label: item.value,\n            value: item.id,\n            group_type: item.group.type,\n          })),\n        ),\n      )\n      .finally(() => {\n        setLoading(false);\n      });\n  }\n  useEffect(() => {\n    if (!!extra?.value && !isAddModalOpen) {\n      fetchExtra(extra.value);\n      setSelectedValues(extra?.values?.map((value) => value.value) || []);\n    }\n  }, [extra?.value, isAddModalOpen]);\n\n  return (\n    <>\n      <Modal\n        visible={!!extra}\n        onCancel={onClose}\n        footer={[\n          <Button onClick={onClose}>{t('cancel')}</Button>,\n          !loading && extraValues.length > 0 && (\n            <Button onClick={handleSelect} type='primary'>\n              {t('save')}\n            </Button>\n          ),\n        ]}\n      >\n        <Scrollbars\n          autoHide\n          autoHeight\n          autoHeightMin={'60vh'}\n          autoHeightMax={'60vh'}\n        >\n          <Checkbox.Group\n            value={selectedValues}\n            onChange={handleChange}\n            className='w-100'\n          >\n            {extraValues?.length === 0 && !loading ? (\n              <Empty />\n            ) : (\n              <List\n                dataSource={extraValues}\n                loading={loading}\n                renderItem={(item) => (\n                  <List.Item>\n                    <Checkbox value={item.value}>\n                      {item.group_type === 'color' ? (\n                        <Space size='small'>\n                          <Badge\n                            className='extras-color-badge'\n                            color={item?.label}\n                          />\n                          {GetColorName(item?.label)}\n                          <span>({item?.label})</span>\n                        </Space>\n                      ) : (\n                        <span>{item?.label}</span>\n                      )}\n                    </Checkbox>\n                  </List.Item>\n                )}\n              />\n            )}\n          </Checkbox.Group>\n        </Scrollbars>\n        {!loading ? (\n          <Button\n            type='link'\n            onClick={() => setIsAddModalOpen(true)}\n            style={{ paddingLeft: 0 }}\n            icon={<PlusOutlined />}\n          >\n            {t('add.new.extra')}\n          </Button>\n        ) : null}\n      </Modal>\n      {extra && (\n        <ExtraValueModal\n          isVisible={isAddModalOpen}\n          modal={{\n            label: extra?.label,\n            value: extra?.id,\n            key: extra?.id,\n          }}\n          handleCancel={() => setIsAddModalOpen(false)}\n          groupId={extra?.value}\n          onSuccess={() => fetchExtra(extra?.value)}\n        />\n      )}\n    </>\n  );\n};\n\nexport default ExtraValueSelectModal;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}