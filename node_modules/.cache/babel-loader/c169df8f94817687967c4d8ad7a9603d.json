{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{Button,Card,Image,Space,Switch,Table}from'antd';import{IMG_URL}from'configs/app-global';import{useNavigate}from'react-router-dom';import{CopyOutlined,DeleteOutlined,EditOutlined,PlusCircleOutlined}from'@ant-design/icons';import CustomModal from'components/modal';import{Context}from'context/context';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{addMenu,disableRefetch}from'redux/slices/menu';import bannerService from'services/banner';import{fetchBanners}from'redux/slices/banner';import{toast}from'react-toastify';import{useTranslation}from'react-i18next';import DeleteButton from'components/delete-button';import FilterColumns from'components/filter-column';import useDidUpdate from'helpers/useDidUpdate';import moment from'moment';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Banners=()=>{const{t}=useTranslation();const dispatch=useDispatch();const navigate=useNavigate();const{setIsModalVisible}=useContext(Context);const[loadingBtn,setLoadingBtn]=useState(false);const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const[activeId,setActiveId]=useState(null);const[type,setType]=useState(null);const{banners,meta,loading}=useSelector(state=>state.banner,shallowEqual);const[id,setId]=useState(null);const[columns,setColumns]=useState([{title:t('id'),dataIndex:'id',key:'id',is_show:true},{title:t('image'),dataIndex:'img',key:'img',is_show:true,render:(img,row)=>{return/*#__PURE__*/_jsx(Image,{src:IMG_URL+img,alt:\"img_gallery\",width:100,className:\"rounded\",preview:true,placeholder:true});}},{title:t('active'),dataIndex:'active',key:'active',is_show:true,render:(active,row)=>{return/*#__PURE__*/_jsx(Switch,{onChange:()=>{setIsModalVisible(true);setActiveId(row.id);setType(true);},checked:active},row.id+active);}},{title:t('created.at'),dataIndex:'created_at',key:'created_at',is_show:true,render:created_at=>moment(created_at).format('DD.MM.YYYY HH:mm')},{title:t('options'),key:'options',dataIndex:'options',is_show:true,render:(_,row)=>/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(EditOutlined,{}),onClick:()=>goToEdit(row)}),/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(CopyOutlined,{}),onClick:()=>goToClone(row)}),/*#__PURE__*/_jsx(DeleteButton,{icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),onClick:()=>{setIsModalVisible(true);setId([row.id]);setType(false);}})]})}]);const goToAddBanners=()=>{dispatch(addMenu({id:'banner/add',url:'banner/add',name:t('add.banner')}));navigate('/banner/add');};const goToEdit=row=>{dispatch(addMenu({url:`banner/${row.id}`,id:'banner_edit',name:t('edit.banner')}));navigate(`/banner/${row.id}`);};const goToClone=row=>{dispatch(addMenu({url:`banner/clone/${row.id}`,id:'banner_clone',name:t('clone.banner')}));navigate(`/banner/clone/${row.id}`);};const bannerDelete=()=>{setLoadingBtn(true);const params={...Object.assign({},...id.map((item,index)=>({[`ids[${index}]`]:item})))};bannerService.delete(params).then(()=>{dispatch(fetchBanners());toast.success(t('successfully.deleted'));setIsModalVisible(false);}).finally(()=>{setLoadingBtn(false);});};useDidUpdate(()=>{const data=activeMenu.data;const paramsData={status:(data===null||data===void 0?void 0:data.role)||'published'};dispatch(fetchBanners(paramsData));},[activeMenu.data]);useEffect(()=>{const data=activeMenu.data;const paramsData={status:(data===null||data===void 0?void 0:data.role)||'published'};if(activeMenu.refetch){dispatch(fetchBanners(paramsData));dispatch(disableRefetch(activeMenu));}},[activeMenu.refetch]);const onChangePagination=pageNumber=>{const{pageSize,current}=pageNumber;dispatch(fetchBanners({perPage:pageSize,page:current}));};const rowSelection={selectedRowKeys:id,onChange:key=>{setId(key);}};const allDelete=()=>{if(id===null||id.length===0){toast.warning(t('select.the.product'));}else{setIsModalVisible(true);}};const handleActive=()=>{setLoadingBtn(true);bannerService.setActive(activeId).then(()=>{setIsModalVisible(false);dispatch(fetchBanners());toast.success(t('successfully.updated'));}).finally(()=>setLoadingBtn(false));};return/*#__PURE__*/_jsxs(Card,{title:t('banners'),navLInkTo:'',extra:/*#__PURE__*/_jsxs(Space,{wrap:true,children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(PlusCircleOutlined,{}),onClick:goToAddBanners,children:t('add.banner')}),/*#__PURE__*/_jsx(DeleteButton,{size:\"\",onClick:allDelete,children:t('delete.selected')}),/*#__PURE__*/_jsx(FilterColumns,{setColumns:setColumns,columns:columns})]}),children:[/*#__PURE__*/_jsx(Table,{scroll:{x:true},rowSelection:rowSelection,columns:columns===null||columns===void 0?void 0:columns.filter(item=>item.is_show),dataSource:banners,pagination:{pageSize:meta.per_page,page:meta.current_page,total:meta.total},rowKey:record=>record.id,loading:loading,onChange:onChangePagination}),/*#__PURE__*/_jsx(CustomModal,{click:type?handleActive:bannerDelete,text:type?t('set.active.banner'):t('delete.banner'),loading:loadingBtn,setText:setId})]});};export default Banners;","map":null,"metadata":{},"sourceType":"module"}