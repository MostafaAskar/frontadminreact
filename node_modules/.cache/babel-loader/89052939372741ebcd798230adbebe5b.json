{"ast":null,"code":"import{Button,Card,Col,Form,Input,Row,Select}from'antd';import React,{useState}from'react';import{useTranslation}from'react-i18next';import{useDispatch}from'react-redux';import{shallowEqual,useSelector}from'react-redux';import{toast}from'react-toastify';import Map from'../../../components/map';import settingService from'../../../services/settings';import{fetchSettings as getSettings}from'../../../redux/slices/globalSettings';import useDemo from'../../../helpers/useDemo';import getAddress from'../../../helpers/getAddress';import useGoogle from'react-google-autocomplete/lib/usePlacesAutocompleteService';import{MAP_API_KEY}from'../../../configs/app-global';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";const Locations=_ref=>{let{location,setLocation}=_ref;const{t}=useTranslation();const[form]=Form.useForm();const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const dispatch=useDispatch();const[loadingBtn,setLoadingBtn]=useState(false);const{isDemo}=useDemo();const[value,setValue]=useState('');const{placePredictions,getPlacePredictions,isPlacePredictionsLoading}=useGoogle({apiKey:MAP_API_KEY,libraries:['places','geocode']});function updateSettings(data){setLoadingBtn(true);settingService.update(data).then(()=>{toast.success(t('successfully.updated'));dispatch(getSettings());}).finally(()=>setLoadingBtn(false));}const onFinish=values=>{const body={...values,location:`${location.lat}, ${location.lng}`};updateSettings(body);};return/*#__PURE__*/_jsx(Form,{layout:\"vertical\",form:form,name:\"global-settings\",onFinish:onFinish,initialValues:{...activeMenu.data},children:/*#__PURE__*/_jsxs(Card,{children:[/*#__PURE__*/_jsxs(Row,{children:[/*#__PURE__*/_jsxs(Col,{span:24,children:[/*#__PURE__*/_jsx(Form.Item,{label:t('google.map.key'),name:\"google_map_key\",rules:[{required:true,message:t('required')}],children:/*#__PURE__*/_jsx(Input,{})}),/*#__PURE__*/_jsx(Form.Item,{label:t('address'),name:`address`,rules:[{required:true,message:t('required')}],children:/*#__PURE__*/_jsx(Select,{allowClear:true,searchValue:value,showSearch:true,autoClearSearchValue:true,loading:isPlacePredictionsLoading,options:placePredictions===null||placePredictions===void 0?void 0:placePredictions.map(prediction=>({label:prediction.description,value:prediction.description})),onSearch:searchValue=>{setValue(searchValue);if(searchValue.length>0){getPlacePredictions({input:searchValue});}},onSelect:async value=>{const address=await getAddress(value);setLocation({lat:address===null||address===void 0?void 0:address.geometry.location.lat,lng:address===null||address===void 0?void 0:address.geometry.location.lng});}})},'address')]}),/*#__PURE__*/_jsx(Col,{span:24,children:/*#__PURE__*/_jsx(Form.Item,{label:t('map'),name:\"location\",style:{borderRadius:'50px'},children:/*#__PURE__*/_jsx(Map,{location:location,setLocation:setLocation,setAddress:value=>form.setFieldsValue({address:value})})})})]}),/*#__PURE__*/_jsx(Button,{type:\"primary\",onClick:()=>form.submit(),loading:loadingBtn,disabled:isDemo,children:t('save')})]})});};export default Locations;","map":null,"metadata":{},"sourceType":"module"}