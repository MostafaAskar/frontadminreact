{"ast":null,"code":"import React,{useContext,useEffect,useState}from'react';import{DeleteOutlined,EditOutlined,PlusCircleOutlined}from'@ant-design/icons';import{Button,Card,Space,Table}from'antd';import{toast}from'react-toastify';import{Context}from'../../../context/context';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{addMenu,disableRefetch}from'../../../redux/slices/menu';import{fetchBookingTime}from'../../../redux/slices/booking-time';import{useTranslation}from'react-i18next';import CustomModal from'../../../components/modal';import DeleteButton from'../../../components/delete-button';import FilterColumns from'../../../components/filter-column';import sellerBookingTime from'../../../services/seller/booking-time';import{useNavigate}from'react-router-dom';import RiveResult from'components/rive-result';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";const BookingTables=()=>{const{t}=useTranslation();const dispatch=useDispatch();const{setIsModalVisible}=useContext(Context);const[id,setId]=useState(null);const[loadingBtn,setLoadingBtn]=useState(false);const{activeMenu}=useSelector(state=>state.menu,shallowEqual);const data=activeMenu===null||activeMenu===void 0?void 0:activeMenu.data;const navigate=useNavigate();const paramsData={sort:data===null||data===void 0?void 0:data.sort,column:data===null||data===void 0?void 0:data.column,search:data!==null&&data!==void 0&&data.search?data.search:undefined,perPage:data===null||data===void 0?void 0:data.perPage,page:data===null||data===void 0?void 0:data.page};const{data:time}=useSelector(state=>state.bookingTime,shallowEqual);const goToEdit=row=>{dispatch(addMenu({url:`seller/booking/time/${row.id}`,id:'booking_time_edit',name:t('edit.booking.time')}));navigate(`/seller/booking/time/${row.id}`);};const goToAdd=()=>{dispatch(addMenu({url:`seller/booking/time/add`,id:'booking_time_add',name:t('add.booking.time')}));navigate(`/seller/booking/time/add`);};const[columns,setColumns]=useState([{title:t('id'),dataIndex:'id',key:'id',is_show:true,sorter:true},{title:t('created.at'),dataIndex:'created_at',key:'created_at',is_show:true},{title:t('options'),key:'options',dataIndex:'options',is_show:true,render:(_,row)=>{return/*#__PURE__*/_jsxs(Space,{children:[/*#__PURE__*/_jsx(Button,{type:\"primary\",icon:/*#__PURE__*/_jsx(EditOutlined,{}),onClick:()=>goToEdit(row)}),/*#__PURE__*/_jsx(DeleteButton,{icon:/*#__PURE__*/_jsx(DeleteOutlined,{}),onClick:()=>{setId([row.id]);setIsModalVisible(true);}})]});}}]);const bookingtableDelete=()=>{setLoadingBtn(true);const params={...Object.assign({},...id.map((item,index)=>({[`ids[${index}]`]:item})))};sellerBookingTime.delete(params).then(()=>{toast.success(t('successfully.deleted'));dispatch(fetchBookingTime(paramsData));setIsModalVisible(false);}).finally(()=>setLoadingBtn(false));};useEffect(()=>{if(activeMenu.refetch){dispatch(fetchBookingTime(paramsData));dispatch(disableRefetch(activeMenu));}},[activeMenu.refetch]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Card,{className:\"p-0\",children:/*#__PURE__*/_jsxs(Space,{wrap:true,className:\"justify-content-end w-100\",children:[/*#__PURE__*/_jsx(Button,{hidden:(time===null||time===void 0?void 0:time.length)>0,type:\"primary\",icon:/*#__PURE__*/_jsx(PlusCircleOutlined,{}),onClick:()=>goToAdd(true),children:t('add.reservation.time')}),/*#__PURE__*/_jsx(FilterColumns,{columns:columns,setColumns:setColumns})]})}),/*#__PURE__*/_jsx(Card,{title:t('reservation.time'),children:/*#__PURE__*/_jsx(Table,{scroll:{x:true},columns:columns===null||columns===void 0?void 0:columns.filter(item=>item.is_show),dataSource:time,rowKey:record=>record===null||record===void 0?void 0:record.id,locale:{emptyText:/*#__PURE__*/_jsx(RiveResult,{id:\"nosell\"})}})}),/*#__PURE__*/_jsx(CustomModal,{click:bookingtableDelete,text:t('delete'),setText:setId,loading:loadingBtn,setActive:setId})]});};export default BookingTables;","map":null,"metadata":{},"sourceType":"module"}