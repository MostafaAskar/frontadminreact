{"ast":null,"code":"var _jsxFileName = \"/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/deliveryman-request/status-change-modal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form, Modal, Row, Col, Select, Input } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst statuses = ['pending', 'approved', 'canceled'];\nexport default function StatusChangeModal(_ref) {\n  _s();\n\n  let {\n    data,\n    handleClose,\n    handleChange\n  } = _ref;\n  const {\n    t\n  } = useTranslation();\n  const [form] = Form.useForm();\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(data === null || data === void 0 ? void 0 : data.status);\n\n  const onFinish = values => {\n    setLoading(true);\n    handleChange(data === null || data === void 0 ? void 0 : data.id, values).finally(() => setLoading(false));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Modal, {\n      title: t('status.change'),\n      visible: !!data,\n      onCancel: handleClose,\n      footer: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          type: \"default\",\n          onClick: handleClose,\n          children: t('cancel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"primary\",\n          onClick: () => form.submit(),\n          loading: loading,\n          children: t('save')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true),\n      children: /*#__PURE__*/_jsxDEV(Form, {\n        form: form,\n        layout: 'vertical',\n        onFinish: onFinish,\n        initialValues: {\n          status: data === null || data === void 0 ? void 0 : data.status\n        },\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          gutter: 12,\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            span: 24,\n            children: [/*#__PURE__*/_jsxDEV(Form.Item, {\n              label: t('status'),\n              name: 'status',\n              rules: [{\n                required: true,\n                message: t('required')\n              }],\n              children: /*#__PURE__*/_jsxDEV(Select, {\n                onChange: status => setStatus(status),\n                children: statuses.map((item, idx) => /*#__PURE__*/_jsxDEV(Select.Option, {\n                  value: item,\n                  children: t(item)\n                }, item + idx, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 60,\n                  columnNumber: 21\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), status === 'canceled' ? /*#__PURE__*/_jsxDEV(Form.Item, {\n              name: \"status_note\",\n              label: t('note'),\n              rules: [{\n                validator(_, value) {\n                  if (!value) {\n                    return Promise.reject(new Error(t('required')));\n                  } else if (value && (value === null || value === void 0 ? void 0 : value.trim()) === '') {\n                    return Promise.reject(new Error(t('no.empty.space')));\n                  } else if (value && (value === null || value === void 0 ? void 0 : value.trim().length) < 2) {\n                    return Promise.reject(new Error(t('must.be.at.least.2')));\n                  }\n\n                  return Promise.resolve();\n                }\n\n              }],\n              children: /*#__PURE__*/_jsxDEV(Input.TextArea, {\n                maxLength: 250,\n                showCount: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this) : '']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(StatusChangeModal, \"1z5FJ7jVFbPY284l62c4xoDy6Wo=\", false, function () {\n  return [useTranslation, Form.useForm];\n});\n\n_c = StatusChangeModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"StatusChangeModal\");","map":{"version":3,"names":["React","useState","useTranslation","Button","Form","Modal","Row","Col","Select","Input","statuses","StatusChangeModal","data","handleClose","handleChange","t","form","useForm","loading","setLoading","status","setStatus","onFinish","values","id","finally","submit","required","message","map","item","idx","validator","_","value","Promise","reject","Error","trim","length","resolve"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/views/deliveryman-request/status-change-modal.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { Button, Form, Modal, Row, Col, Select, Input } from 'antd';\n\nconst statuses = ['pending', 'approved', 'canceled'];\n\nexport default function StatusChangeModal({ data, handleClose, handleChange }) {\n  const { t } = useTranslation();\n  const [form] = Form.useForm();\n\n  const [loading, setLoading] = useState(false);\n  const [status, setStatus] = useState(data?.status);\n\n  const onFinish = (values) => {\n    setLoading(true);\n    handleChange(data?.id, values).finally(() => setLoading(false));\n  };\n\n  return (\n    <>\n      <Modal\n        title={t('status.change')}\n        visible={!!data}\n        onCancel={handleClose}\n        footer={\n          <>\n            <Button type='default' onClick={handleClose}>\n              {t('cancel')}\n            </Button>\n            <Button\n              type='primary'\n              onClick={() => form.submit()}\n              loading={loading}\n            >\n              {t('save')}\n            </Button>\n          </>\n        }\n      >\n        <Form\n          form={form}\n          layout={'vertical'}\n          onFinish={onFinish}\n          initialValues={{ status: data?.status }}\n        >\n          <Row gutter={12}>\n            <Col span={24}>\n              <Form.Item\n                label={t('status')}\n                name={'status'}\n                rules={[\n                  {\n                    required: true,\n                    message: t('required'),\n                  },\n                ]}\n              >\n                <Select onChange={(status) => setStatus(status)}>\n                  {statuses.map((item, idx) => (\n                    <Select.Option key={item + idx} value={item}>\n                      {t(item)}\n                    </Select.Option>\n                  ))}\n                </Select>\n              </Form.Item>\n              {status === 'canceled' ? (\n                <Form.Item\n                  name='status_note'\n                  label={t('note')}\n                  rules={[\n                    {\n                      validator(_, value) {\n                        if (!value) {\n                          return Promise.reject(new Error(t('required')));\n                        } else if (value && value?.trim() === '') {\n                          return Promise.reject(new Error(t('no.empty.space')));\n                        } else if (value && value?.trim().length < 2) {\n                          return Promise.reject(\n                            new Error(t('must.be.at.least.2')),\n                          );\n                        }\n                        return Promise.resolve();\n                      },\n                    },\n                  ]}\n                >\n                  <Input.TextArea maxLength={250} showCount />\n                </Form.Item>\n              ) : (\n                ''\n              )}\n            </Col>\n          </Row>\n        </Form>\n      </Modal>\n    </>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}