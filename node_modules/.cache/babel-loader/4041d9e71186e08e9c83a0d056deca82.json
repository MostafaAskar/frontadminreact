{"ast":null,"code":"import axios from'axios';import{notification}from'antd';import{api_url}from'../configs/app-global';import{store}from'../redux/store';import{clearUser}from'../redux/slices/auth';import i18n from'../configs/i18next';import{toast}from'react-toastify';const service=axios.create({baseURL:api_url});// Config\nconst TOKEN_PAYLOAD_KEY='authorization';const AUTH_TOKEN='token';const AUTH_TOKEN_TYPE='Bearer';// API Request interceptor\nservice.interceptors.request.use(config=>{const access_token=localStorage.getItem(AUTH_TOKEN);if(access_token){config.headers[TOKEN_PAYLOAD_KEY]=AUTH_TOKEN_TYPE+' '+access_token;}if(config.method==='get'){config.params={lang:i18n.language,...config.params};}return config;},error=>{// Do something with request error here\nnotification.error({message:'Error'});Promise.reject(error);});// API respone interceptor\nservice.interceptors.response.use(response=>{return response.data;},error=>{var _error$response,_error$response$data,_error$response2,_error$response4,_error$response6;let notificationParam={message:i18n.t((_error$response=error.response)===null||_error$response===void 0?void 0:(_error$response$data=_error$response.data)===null||_error$response$data===void 0?void 0:_error$response$data.message)};// Remove token and redirect\nif(error.response.status===403||error.response.status===401){localStorage.removeItem(AUTH_TOKEN);store.dispatch(clearUser());}if(((_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.status)===508){var _error$response3,_error$response3$data;notificationParam.message=(_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message;}if(((_error$response4=error.response)===null||_error$response4===void 0?void 0:_error$response4.status)===500){var _error$response5,_error$response5$data;notificationParam.message=(_error$response5=error.response)===null||_error$response5===void 0?void 0:(_error$response5$data=_error$response5.data)===null||_error$response5$data===void 0?void 0:_error$response5$data.message;}toast.error(notificationParam.message,{toastId:(_error$response6=error.response)===null||_error$response6===void 0?void 0:_error$response6.status});return Promise.reject(error);});export default service;","map":null,"metadata":{},"sourceType":"module"}