{"ast":null,"code":"import React,{useEffect,useState}from'react';import{Button,Space,Table,Card,Tabs}from'antd';import{useNavigate}from'react-router-dom';import{EyeOutlined}from'@ant-design/icons';import{shallowEqual,useDispatch,useSelector}from'react-redux';import{addMenu,disableRefetch,setMenuData}from'../../redux/slices/menu';import{useTranslation}from'react-i18next';import useDidUpdate from'../../helpers/useDidUpdate';import{fetchDeliverymanOrders}from'../../redux/slices/orders';import formatSortType from'../../helpers/formatSortType';import SearchInput from'../../components/search-input';import numberToPrice from'../../helpers/numberToPrice';import FilterColumns from'../../components/filter-column';import{fetchOrderStatus,fetchRestOrderStatus}from'../../redux/slices/orderStatus';import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";const{TabPane}=Tabs;const statuses=['accepted','ready','on_a_way','delivered','canceled'];export default function DeliverymanOrders(){var _activeMenu$data,_activeMenu$data2,_activeMenu$data3;const dispatch=useDispatch();const navigate=useNavigate();const{t}=useTranslation();// const {} = useSelector((state) => {});\nconst{defaultCurrency}=useSelector(state=>state.currency,shallowEqual);const{statusList}=useSelector(state=>state.orderStatus,shallowEqual);const statuses=[{name:'all',id:'0',active:true,sort:0},...statusList];console.log('statusList',statuses);// console.log('statusList', statusList);\nconst{activeMenu}=useSelector(state=>state.menu,shallowEqual);const[role,setRole]=useState('accepted');const immutable=((_activeMenu$data=activeMenu.data)===null||_activeMenu$data===void 0?void 0:_activeMenu$data.role)||role;const data=activeMenu===null||activeMenu===void 0?void 0:activeMenu.data;const paramsData={search:data===null||data===void 0?void 0:data.search,sort:data===null||data===void 0?void 0:data.sort,column:data===null||data===void 0?void 0:data.column,perPage:data===null||data===void 0?void 0:data.perPage,page:data===null||data===void 0?void 0:data.page,user_id:data===null||data===void 0?void 0:data.userId,status:immutable};const goToShow=row=>{dispatch(addMenu({url:`deliveryman/order/details/${row.id}`,id:'order_details',name:t('order.details')}));navigate(`/deliveryman/order/details/${row.id}`);};const[columns,setColumns]=useState([{title:t('id'),dataIndex:'id',key:'id',sorter:true,is_show:true},{title:t('client'),dataIndex:'user',key:'user',is_show:true,render:user=>/*#__PURE__*/_jsxs(\"div\",{children:[user.firstname,\" \",user.lastname]})},{title:t('number.of.products'),dataIndex:'order_details_count',key:'rate',is_show:true,render:order_details_count=>/*#__PURE__*/_jsxs(\"div\",{className:\"text-lowercase\",children:[order_details_count||0,\" \",t('products')]})},{title:t('amount'),dataIndex:'details',key:'price',is_show:true,render:(_,row)=>{return numberToPrice(row===null||row===void 0?void 0:row.total_price,defaultCurrency.symbol);}},{title:t('payment.type'),dataIndex:'transaction',key:'transaction',is_show:true,render:transaction=>{var _transaction$payment_;return t(transaction===null||transaction===void 0?void 0:(_transaction$payment_=transaction.payment_system)===null||_transaction$payment_===void 0?void 0:_transaction$payment_.tag)||'-';}},{title:'created.at',dataIndex:'created_at',key:'created_at',is_show:true},{title:t('options'),key:'options',is_show:true,render:(_,row)=>{return/*#__PURE__*/_jsx(Space,{children:/*#__PURE__*/_jsx(Button,{icon:/*#__PURE__*/_jsx(EyeOutlined,{}),onClick:()=>goToShow(row)})});}}]);const{orders,meta,loading,params}=useSelector(state=>state.orders,shallowEqual);function onChangePagination(pagination,filter,sorter){const{pageSize:perPage,current:page}=pagination;const{field:column,order}=sorter;const sort=formatSortType(order);dispatch(setMenuData({activeMenu,data:{...activeMenu.data,perPage,page,column,sort}}));}useDidUpdate(()=>{dispatch(fetchDeliverymanOrders(paramsData));},[activeMenu===null||activeMenu===void 0?void 0:activeMenu.data]);useEffect(()=>{if(activeMenu!==null&&activeMenu!==void 0&&activeMenu.refetch){dispatch(fetchDeliverymanOrders(paramsData));dispatch(disableRefetch(activeMenu));}},[activeMenu===null||activeMenu===void 0?void 0:activeMenu.refetch]);useEffect(()=>{console.log('fetching...');dispatch(fetchRestOrderStatus({}));},[]);const handleFilter=items=>{const data=activeMenu.data;dispatch(setMenuData({activeMenu,data:{...data,...items}}));};return/*#__PURE__*/_jsxs(Card,{title:t('orders'),extra:/*#__PURE__*/_jsxs(Space,{wrap:true,children:[/*#__PURE__*/_jsx(SearchInput,{placeholder:t('search'),handleChange:e=>handleFilter({search:e}),defaultValue:(_activeMenu$data2=activeMenu.data)===null||_activeMenu$data2===void 0?void 0:_activeMenu$data2.search,resetSearch:!((_activeMenu$data3=activeMenu.data)!==null&&_activeMenu$data3!==void 0&&_activeMenu$data3.search)}),/*#__PURE__*/_jsx(FilterColumns,{columns:columns,setColumns:setColumns})]}),children:[/*#__PURE__*/_jsx(Tabs,{onChange:key=>{handleFilter({role:key,page:1});setRole(key);},type:\"card\",activeKey:immutable,children:statuses.filter(item=>item.active).map(item=>/*#__PURE__*/_jsx(TabPane,{tab:t(item.name)},item.name))}),/*#__PURE__*/_jsx(Table,{scroll:{x:true},columns:columns===null||columns===void 0?void 0:columns.filter(item=>item.is_show),dataSource:orders,loading:loading,pagination:{pageSize:params.perPage,page:params.page,total:meta.total,defaultCurrent:params.page},rowKey:record=>record.id,onChange:onChangePagination})]});}","map":null,"metadata":{},"sourceType":"module"}