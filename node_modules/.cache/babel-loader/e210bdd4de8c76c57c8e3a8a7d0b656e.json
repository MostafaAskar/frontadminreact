{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport statisticService from '../../../services/statistics';\nimport sellerStatisticService from '../../../services/seller/statistics';\nconst initialState = {\n  loading: false,\n  sum: {},\n  error: ''\n};\nexport const fetchStatisticsSum = createAsyncThunk('statistics/fetchStatisticsSum', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return statisticService.getAllSum(params).then(res => res);\n});\nexport const fetchSellerStatisticsSum = createAsyncThunk('statistics/fetchSellerStatisticsSum', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return sellerStatisticService.getAllSum(params).then(res => res);\n});\nconst statisticsSumSlice = createSlice({\n  name: 'statisticsSum',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchStatisticsSum.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchStatisticsSum.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.sum = payload.data[0];\n      state.error = '';\n    });\n    builder.addCase(fetchStatisticsSum.rejected, (state, action) => {\n      state.loading = false;\n      state.sum = {};\n      state.error = action.error.message;\n    });\n    builder.addCase(fetchSellerStatisticsSum.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSellerStatisticsSum.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.sum = payload.data[0];\n      state.error = '';\n    });\n    builder.addCase(fetchSellerStatisticsSum.rejected, (state, action) => {\n      state.loading = false;\n      state.sum = {};\n      state.error = action.error.message;\n    });\n  }\n});\nexport default statisticsSumSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","statisticService","sellerStatisticService","initialState","loading","sum","error","fetchStatisticsSum","params","getAllSum","then","res","fetchSellerStatisticsSum","statisticsSumSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","data","rejected","message","reducer"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/redux/slices/statistics/sum.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport statisticService from '../../../services/statistics';\nimport sellerStatisticService from '../../../services/seller/statistics';\n\nconst initialState = {\n  loading: false,\n  sum: {},\n  error: '',\n};\n\nexport const fetchStatisticsSum = createAsyncThunk(\n  'statistics/fetchStatisticsSum',\n  (params = {}) => {\n    return statisticService.getAllSum(params).then((res) => res);\n  }\n);\nexport const fetchSellerStatisticsSum = createAsyncThunk(\n  'statistics/fetchSellerStatisticsSum',\n  (params = {}) => {\n    return sellerStatisticService.getAllSum(params).then((res) => res);\n  }\n);\n\nconst statisticsSumSlice = createSlice({\n  name: 'statisticsSum',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchStatisticsSum.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchStatisticsSum.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.sum = payload.data[0];\n      state.error = '';\n    });\n    builder.addCase(fetchStatisticsSum.rejected, (state, action) => {\n      state.loading = false;\n      state.sum = {};\n      state.error = action.error.message;\n    });\n\n    builder.addCase(fetchSellerStatisticsSum.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSellerStatisticsSum.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.sum = payload.data[0];\n      state.error = '';\n    });\n    builder.addCase(fetchSellerStatisticsSum.rejected, (state, action) => {\n      state.loading = false;\n      state.sum = {};\n      state.error = action.error.message;\n    });\n  },\n});\n\nexport default statisticsSumSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,gBAAP,MAA6B,8BAA7B;AACA,OAAOC,sBAAP,MAAmC,qCAAnC;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,GAAG,EAAE,EAFc;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,kBAAkB,GAAGP,gBAAgB,CAChD,+BADgD,EAEhD,YAAiB;EAAA,IAAhBQ,MAAgB,uEAAP,EAAO;EACf,OAAOP,gBAAgB,CAACQ,SAAjB,CAA2BD,MAA3B,EAAmCE,IAAnC,CAAyCC,GAAD,IAASA,GAAjD,CAAP;AACD,CAJ+C,CAA3C;AAMP,OAAO,MAAMC,wBAAwB,GAAGZ,gBAAgB,CACtD,qCADsD,EAEtD,YAAiB;EAAA,IAAhBQ,MAAgB,uEAAP,EAAO;EACf,OAAON,sBAAsB,CAACO,SAAvB,CAAiCD,MAAjC,EAAyCE,IAAzC,CAA+CC,GAAD,IAASA,GAAvD,CAAP;AACD,CAJqD,CAAjD;AAOP,MAAME,kBAAkB,GAAGd,WAAW,CAAC;EACrCe,IAAI,EAAE,eAD+B;EAErCX,YAFqC;EAGrCY,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBV,kBAAkB,CAACW,OAAnC,EAA6CC,KAAD,IAAW;MACrDA,KAAK,CAACf,OAAN,GAAgB,IAAhB;IACD,CAFD;IAGAY,OAAO,CAACC,OAAR,CAAgBV,kBAAkB,CAACa,SAAnC,EAA8C,CAACD,KAAD,EAAQE,MAAR,KAAmB;MAC/D,MAAM;QAAEC;MAAF,IAAcD,MAApB;MACAF,KAAK,CAACf,OAAN,GAAgB,KAAhB;MACAe,KAAK,CAACd,GAAN,GAAYiB,OAAO,CAACC,IAAR,CAAa,CAAb,CAAZ;MACAJ,KAAK,CAACb,KAAN,GAAc,EAAd;IACD,CALD;IAMAU,OAAO,CAACC,OAAR,CAAgBV,kBAAkB,CAACiB,QAAnC,EAA6C,CAACL,KAAD,EAAQE,MAAR,KAAmB;MAC9DF,KAAK,CAACf,OAAN,GAAgB,KAAhB;MACAe,KAAK,CAACd,GAAN,GAAY,EAAZ;MACAc,KAAK,CAACb,KAAN,GAAce,MAAM,CAACf,KAAP,CAAamB,OAA3B;IACD,CAJD;IAMAT,OAAO,CAACC,OAAR,CAAgBL,wBAAwB,CAACM,OAAzC,EAAmDC,KAAD,IAAW;MAC3DA,KAAK,CAACf,OAAN,GAAgB,IAAhB;IACD,CAFD;IAGAY,OAAO,CAACC,OAAR,CAAgBL,wBAAwB,CAACQ,SAAzC,EAAoD,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACrE,MAAM;QAAEC;MAAF,IAAcD,MAApB;MACAF,KAAK,CAACf,OAAN,GAAgB,KAAhB;MACAe,KAAK,CAACd,GAAN,GAAYiB,OAAO,CAACC,IAAR,CAAa,CAAb,CAAZ;MACAJ,KAAK,CAACb,KAAN,GAAc,EAAd;IACD,CALD;IAMAU,OAAO,CAACC,OAAR,CAAgBL,wBAAwB,CAACY,QAAzC,EAAmD,CAACL,KAAD,EAAQE,MAAR,KAAmB;MACpEF,KAAK,CAACf,OAAN,GAAgB,KAAhB;MACAe,KAAK,CAACd,GAAN,GAAY,EAAZ;MACAc,KAAK,CAACb,KAAN,GAAce,MAAM,CAACf,KAAP,CAAamB,OAA3B;IACD,CAJD;EAKD;AAjCoC,CAAD,CAAtC;AAoCA,eAAeZ,kBAAkB,CAACa,OAAlC"},"metadata":{},"sourceType":"module"}