{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport ReportService from '../../../services/reports';\nimport SellerReportService from '../../../services/seller/reports';\nconst initialState = {\n  loading: false,\n  chartData: [],\n  productList: [],\n  error: ''\n};\nexport const fetchOrderProduct = createAsyncThunk('orderReport/fetchOrderProduct', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return ReportService.getOrderProducts({ ...params\n  }).then(res => res);\n});\nexport const fetchOrderProductChart = createAsyncThunk('orderReport/fetchOrderProductChart', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return ReportService.getOrderChart({ ...params\n  }).then(res => res);\n});\nexport const fetchSellerOrderProduct = createAsyncThunk('orderReport/fetchSellerOrderProduct', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return SellerReportService.getOrderProducts({ ...params\n  }).then(res => res);\n});\nexport const fetchSellerOrderProductChart = createAsyncThunk('orderReport/fetchSellerOrderProductChart', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return SellerReportService.getOrderChart({ ...params\n  }).then(res => res);\n});\nconst orderCountSlice = createSlice({\n  name: 'orderReport',\n  initialState,\n  extraReducers: builder => {\n    // Admin Order Report\n    builder.addCase(fetchOrderProduct.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchOrderProduct.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.productList = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchOrderProduct.rejected, (state, action) => {\n      state.loading = false;\n      state.productList = [];\n      state.error = action.error.message;\n    });\n    builder.addCase(fetchOrderProductChart.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchOrderProductChart.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.chartData = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchOrderProductChart.rejected, (state, action) => {\n      state.loading = false;\n      state.chartData = [];\n      state.error = action.error.message;\n    }); // Seller Order Report\n    // // List\n\n    builder.addCase(fetchSellerOrderProduct.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSellerOrderProduct.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.productList = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchSellerOrderProduct.rejected, (state, action) => {\n      state.loading = false;\n      state.productList = [];\n      state.error = action.error.message;\n    }); // // Chart\n\n    builder.addCase(fetchSellerOrderProductChart.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSellerOrderProductChart.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.chartData = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchSellerOrderProductChart.rejected, (state, action) => {\n      state.loading = false;\n      state.chartData = [];\n      state.error = action.error.message;\n    });\n  },\n  reducers: {\n    filterOrderProduct(state, action) {\n      const {\n        payload\n      } = action;\n    }\n\n  }\n});\nexport const {\n  filterOrderProduct\n} = orderCountSlice.actions;\nexport default orderCountSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","ReportService","SellerReportService","initialState","loading","chartData","productList","error","fetchOrderProduct","params","getOrderProducts","then","res","fetchOrderProductChart","getOrderChart","fetchSellerOrderProduct","fetchSellerOrderProductChart","orderCountSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","data","rejected","message","reducers","filterOrderProduct","actions","reducer"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/redux/slices/report/order.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport ReportService from '../../../services/reports';\nimport SellerReportService from '../../../services/seller/reports';\n\nconst initialState = {\n  loading: false,\n  chartData: [],\n  productList: [],\n  error: '',\n};\n\nexport const fetchOrderProduct = createAsyncThunk(\n  'orderReport/fetchOrderProduct',\n  (params = {}) => {\n    return ReportService.getOrderProducts({\n      ...params,\n    }).then((res) => res);\n  }\n);\nexport const fetchOrderProductChart = createAsyncThunk(\n  'orderReport/fetchOrderProductChart',\n  (params = {}) => {\n    return ReportService.getOrderChart({\n      ...params,\n    }).then((res) => res);\n  }\n);\nexport const fetchSellerOrderProduct = createAsyncThunk(\n  'orderReport/fetchSellerOrderProduct',\n  (params = {}) => {\n    return SellerReportService.getOrderProducts({ ...params }).then(\n      (res) => res\n    );\n  }\n);\nexport const fetchSellerOrderProductChart = createAsyncThunk(\n  'orderReport/fetchSellerOrderProductChart',\n  (params = {}) => {\n    return SellerReportService.getOrderChart({ ...params }).then((res) => res);\n  }\n);\nconst orderCountSlice = createSlice({\n  name: 'orderReport',\n  initialState,\n  extraReducers: (builder) => {\n    // Admin Order Report\n    builder.addCase(fetchOrderProduct.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchOrderProduct.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.productList = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchOrderProduct.rejected, (state, action) => {\n      state.loading = false;\n      state.productList = [];\n      state.error = action.error.message;\n    });\n\n    builder.addCase(fetchOrderProductChart.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchOrderProductChart.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.chartData = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchOrderProductChart.rejected, (state, action) => {\n      state.loading = false;\n      state.chartData = [];\n      state.error = action.error.message;\n    });\n    // Seller Order Report\n    // // List\n    builder.addCase(fetchSellerOrderProduct.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSellerOrderProduct.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.productList = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchSellerOrderProduct.rejected, (state, action) => {\n      state.loading = false;\n      state.productList = [];\n      state.error = action.error.message;\n    });\n    // // Chart\n    builder.addCase(fetchSellerOrderProductChart.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchSellerOrderProductChart.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.chartData = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchSellerOrderProductChart.rejected, (state, action) => {\n      state.loading = false;\n      state.chartData = [];\n      state.error = action.error.message;\n    });\n  },\n\n  reducers: {\n    filterOrderProduct(state, action) {\n      const { payload } = action;\n    },\n  },\n});\nexport const { filterOrderProduct } = orderCountSlice.actions;\nexport default orderCountSlice.reducer;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}