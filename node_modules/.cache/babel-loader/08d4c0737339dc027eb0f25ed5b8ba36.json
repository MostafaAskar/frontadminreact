{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport messageSubscriberService from '../../services/messageSubscriber';\nconst initialState = {\n  loading: false,\n  subscribers: [],\n  error: ''\n};\nexport const fetchMessageSubscriber = createAsyncThunk('subscriber/fetchSubscribers', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return messageSubscriberService.getAll({ ...initialState.params,\n    ...params\n  }).then(res => res);\n});\nconst subscriberSlice = createSlice({\n  name: 'subscriber',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchMessageSubscriber.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchMessageSubscriber.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.subscribers = payload === null || payload === void 0 ? void 0 : payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchMessageSubscriber.rejected, (state, action) => {\n      state.loading = false;\n      state.subscribers = {};\n      state.error = action.error.message;\n    });\n  }\n});\nexport default subscriberSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","messageSubscriberService","initialState","loading","subscribers","error","fetchMessageSubscriber","params","getAll","then","res","subscriberSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","data","rejected","message","reducer"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/redux/slices/messegeSubscriber.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport messageSubscriberService from '../../services/messageSubscriber';\n\nconst initialState = {\n  loading: false,\n  subscribers: [],\n  error: '',\n};\n\nexport const fetchMessageSubscriber = createAsyncThunk(\n  'subscriber/fetchSubscribers',\n  (params = {}) => {\n    return messageSubscriberService\n      .getAll({ ...initialState.params, ...params })\n      .then((res) => res);\n  }\n);\n\nconst subscriberSlice = createSlice({\n  name: 'subscriber',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchMessageSubscriber.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchMessageSubscriber.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.subscribers = payload?.data;\n      state.error = '';\n    });\n    builder.addCase(fetchMessageSubscriber.rejected, (state, action) => {\n      state.loading = false;\n      state.subscribers = {};\n      state.error = action.error.message;\n    });\n  },\n});\n\nexport default subscriberSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,wBAAP,MAAqC,kCAArC;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,WAAW,EAAE,EAFM;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,sBAAsB,GAAGN,gBAAgB,CACpD,6BADoD,EAEpD,YAAiB;EAAA,IAAhBO,MAAgB,uEAAP,EAAO;EACf,OAAON,wBAAwB,CAC5BO,MADI,CACG,EAAE,GAAGN,YAAY,CAACK,MAAlB;IAA0B,GAAGA;EAA7B,CADH,EAEJE,IAFI,CAEEC,GAAD,IAASA,GAFV,CAAP;AAGD,CANmD,CAA/C;AASP,MAAMC,eAAe,GAAGZ,WAAW,CAAC;EAClCa,IAAI,EAAE,YAD4B;EAElCV,YAFkC;EAGlCW,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBT,sBAAsB,CAACU,OAAvC,EAAiDC,KAAD,IAAW;MACzDA,KAAK,CAACd,OAAN,GAAgB,IAAhB;IACD,CAFD;IAGAW,OAAO,CAACC,OAAR,CAAgBT,sBAAsB,CAACY,SAAvC,EAAkD,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACnE,MAAM;QAAEC;MAAF,IAAcD,MAApB;MACAF,KAAK,CAACd,OAAN,GAAgB,KAAhB;MACAc,KAAK,CAACb,WAAN,GAAoBgB,OAApB,aAAoBA,OAApB,uBAAoBA,OAAO,CAAEC,IAA7B;MACAJ,KAAK,CAACZ,KAAN,GAAc,EAAd;IACD,CALD;IAMAS,OAAO,CAACC,OAAR,CAAgBT,sBAAsB,CAACgB,QAAvC,EAAiD,CAACL,KAAD,EAAQE,MAAR,KAAmB;MAClEF,KAAK,CAACd,OAAN,GAAgB,KAAhB;MACAc,KAAK,CAACb,WAAN,GAAoB,EAApB;MACAa,KAAK,CAACZ,KAAN,GAAcc,MAAM,CAACd,KAAP,CAAakB,OAA3B;IACD,CAJD;EAKD;AAlBiC,CAAD,CAAnC;AAqBA,eAAeZ,eAAe,CAACa,OAA/B"},"metadata":{},"sourceType":"module"}