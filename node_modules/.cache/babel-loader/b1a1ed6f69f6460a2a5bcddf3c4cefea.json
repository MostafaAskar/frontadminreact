{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport userService from '../../services/user';\nconst initialState = {\n  loading: false,\n  roles: [],\n  error: ''\n};\nexport const fetchRoles = createAsyncThunk('user/fetchRoles', function () {\n  let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return userService.getRoles(params).then(res => res);\n});\nconst roleSlice = createSlice({\n  name: 'role',\n  initialState,\n  extraReducers: builder => {\n    builder.addCase(fetchRoles.pending, state => {\n      state.loading = true;\n    });\n    builder.addCase(fetchRoles.fulfilled, (state, action) => {\n      const {\n        payload\n      } = action;\n      state.loading = false;\n      state.roles = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchRoles.rejected, (state, action) => {\n      state.loading = false;\n      state.roles = [];\n      state.error = action.error.message;\n    });\n  }\n});\nexport default roleSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","userService","initialState","loading","roles","error","fetchRoles","params","getRoles","then","res","roleSlice","name","extraReducers","builder","addCase","pending","state","fulfilled","action","payload","data","rejected","message","reducer"],"sources":["/home/mostafa/Magde/new uzmart/admin/uzmart-admin-main/src/redux/slices/role.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport userService from '../../services/user';\n\nconst initialState = {\n  loading: false,\n  roles: [],\n  error: '',\n};\n\nexport const fetchRoles = createAsyncThunk('user/fetchRoles', (params = {}) => {\n  return userService.getRoles(params).then((res) => res);\n});\n\nconst roleSlice = createSlice({\n  name: 'role',\n  initialState,\n  extraReducers: (builder) => {\n    builder.addCase(fetchRoles.pending, (state) => {\n      state.loading = true;\n    });\n    builder.addCase(fetchRoles.fulfilled, (state, action) => {\n      const { payload } = action;\n      state.loading = false;\n      state.roles = payload.data;\n      state.error = '';\n    });\n    builder.addCase(fetchRoles.rejected, (state, action) => {\n      state.loading = false;\n      state.roles = [];\n      state.error = action.error.message;\n    });\n  },\n});\n\nexport default roleSlice.reducer;\n"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,OAAOC,WAAP,MAAwB,qBAAxB;AAEA,MAAMC,YAAY,GAAG;EACnBC,OAAO,EAAE,KADU;EAEnBC,KAAK,EAAE,EAFY;EAGnBC,KAAK,EAAE;AAHY,CAArB;AAMA,OAAO,MAAMC,UAAU,GAAGN,gBAAgB,CAAC,iBAAD,EAAoB,YAAiB;EAAA,IAAhBO,MAAgB,uEAAP,EAAO;EAC7E,OAAON,WAAW,CAACO,QAAZ,CAAqBD,MAArB,EAA6BE,IAA7B,CAAmCC,GAAD,IAASA,GAA3C,CAAP;AACD,CAFyC,CAAnC;AAIP,MAAMC,SAAS,GAAGZ,WAAW,CAAC;EAC5Ba,IAAI,EAAE,MADsB;EAE5BV,YAF4B;EAG5BW,aAAa,EAAGC,OAAD,IAAa;IAC1BA,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACU,OAA3B,EAAqCC,KAAD,IAAW;MAC7CA,KAAK,CAACd,OAAN,GAAgB,IAAhB;IACD,CAFD;IAGAW,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACY,SAA3B,EAAsC,CAACD,KAAD,EAAQE,MAAR,KAAmB;MACvD,MAAM;QAAEC;MAAF,IAAcD,MAApB;MACAF,KAAK,CAACd,OAAN,GAAgB,KAAhB;MACAc,KAAK,CAACb,KAAN,GAAcgB,OAAO,CAACC,IAAtB;MACAJ,KAAK,CAACZ,KAAN,GAAc,EAAd;IACD,CALD;IAMAS,OAAO,CAACC,OAAR,CAAgBT,UAAU,CAACgB,QAA3B,EAAqC,CAACL,KAAD,EAAQE,MAAR,KAAmB;MACtDF,KAAK,CAACd,OAAN,GAAgB,KAAhB;MACAc,KAAK,CAACb,KAAN,GAAc,EAAd;MACAa,KAAK,CAACZ,KAAN,GAAcc,MAAM,CAACd,KAAP,CAAakB,OAA3B;IACD,CAJD;EAKD;AAlB2B,CAAD,CAA7B;AAqBA,eAAeZ,SAAS,CAACa,OAAzB"},"metadata":{},"sourceType":"module"}